<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vonage</name>
    </assembly>
    <members>
        <member name="P:Vonage.Accounts.AccountSettingsRequest.MoCallBackUrl">
            <summary>
            The URL where Vonage will send a webhook when an SMS is received to a Vonage number that does not have SMS
            handling configured. Send an empty string to unset this value.
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsRequest.DrCallBackUrl">
            <summary>
            The URL where Vonage will send a webhook when an delivery receipt is received without a specific callback
            URL configured. Send an empty string to unset this value.
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsResult.MoCallbackUrl">
            <summary>
            The current or updated inbound message URI
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsResult.DrCallbackurl">
            <summary>
            The current or updated delivery receipt URI
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsResult.MaxOutboundRequest">
            <summary>
            The maximum number of outbound messages per second.
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsResult.MaxInboundRequest">
            <summary>
            The maximum number of inbound messages per second.
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsResult.MaxCallsPerSecond">
            <summary>
            The maximum number of API calls per second.
            </summary>
        </member>
        <member name="P:Vonage.Accounts.Balance.Value">
            <summary>
            The balance of the account, in EUR
            </summary>
        </member>
        <member name="P:Vonage.Accounts.Balance.AutoReload">
            <summary>
            Whether the account has auto-reloading enabled
            </summary>
        </member>
        <member name="P:Vonage.Accounts.CreateSecretRequest.Secret">
            <summary>
            the new secret to be created
            The new secret must follow these rules:
              minimum 8 characters
              maximum 25 characters
              minimum 1 lower case character
              minimum 1 upper case character
              minimum 1 digit
            </summary>
        </member>
        <member name="P:Vonage.Accounts.CreateSubAccountRequest.Name">
            <summary>
            the new subaccount to be created
              maximum 80 characters
            </summary>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.GetAccountBalanceAsync(Vonage.Request.Credentials)">
            <summary>
            Retrieve the current balance of your Vonage API account
            </summary>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.TopUpAccountBalanceAsync(Vonage.Accounts.TopUpRequest,Vonage.Request.Credentials)">
            <summary>
            You can top up your account using this API when you have enabled auto-reload in the dashboard. 
            The amount added by the top-up operation will be the same amount as was added in the payment 
            when auto-reload was enabled. Your account balance is checked every 5-10 minutes and if it falls 
            below the threshold and auto-reload is enabled, then it will be topped up automatically. Use this 
            endpoint if you need to top up at times when your credit may be exhausted more quickly than the auto-reload may occur.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.ChangeAccountSettingsAsync(Vonage.Accounts.AccountSettingsRequest,Vonage.Request.Credentials)">
            <summary>
            Update the default callback URLs (where the webhooks are sent to) associated with your account: 
            * Callback URL for incoming SMS messages * Callback URL for delivery receipts        
            Note: that the URLs you provide must be valid and active. Vonage will check that they return a 200 OK response before the setting is saved
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.RetrieveApiSecretsAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            Many of Vonage's APIs are accessed using an API key and secret. It is recommended that you change or "rotate" 
            your secrets from time to time for security purposes. This section provides the API interface for achieving this. 
            Note: to work on secrets for your secondary accounts, you may authenticate with your primary 
            credentials and supply the secondary API keys as URL parameters to these API endpoints.
            </summary>
            <param name="apiKey"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.CreateApiSecretAsync(Vonage.Accounts.CreateSecretRequest,System.String,Vonage.Request.Credentials)">
            <summary>
            Createse an API Secret
            </summary>
            <param name="request"></param>
            <param name="apiKey">The Api Key to create a secret for</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.RetrieveApiSecretAsync(System.String,System.String,Vonage.Request.Credentials)">
            <summary>
            retrieves info about an api secret at the given id
            </summary>
            <param name="secretId">the id of the secret</param>
            <param name="apiKey">Api Key the secret is for</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.RevokeApiSecretAsync(System.String,System.String,Vonage.Request.Credentials)">
            <summary>
            Deletes an Api Secret
            </summary>
            <param name="secretId">the id of the secret to be deleted</param>
            <param name="apiKey">the api key the secret is for</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.CreateSubAccountAsync(Vonage.Accounts.CreateSubAccountRequest,System.String,Vonage.Request.Credentials)">
            <summary>
            Create a new sub account
            </summary>
            <param name="request"></param>
            <param name="apiKey"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.RetrieveSubAccountAsync(System.String,System.String,Vonage.Request.Credentials)">
            <summary>
            Retrieve a sub account
            </summary>
            <param name="subAccountKey"></param>
            <param name="apiKey"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.CreateSubAccount(Vonage.Accounts.CreateSubAccountRequest,System.String,Vonage.Request.Credentials)">
            <summary>
            Create a new sub account
            </summary>
            <param name="request"></param>
            <param name="apiKey"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.RetrieveSubAccount(System.String,System.String,Vonage.Request.Credentials)">
            <summary>
            Retrieve a sub account
            </summary>
            <param name="subAccountKey"></param>
            <param name="apiKey"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.GetAccountBalance(Vonage.Request.Credentials)">
            <summary>
            Retrieve the current balance of your Vonage API account
            </summary>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.TopUpAccountBalance(Vonage.Accounts.TopUpRequest,Vonage.Request.Credentials)">
            <summary>
            You can top up your account using this API when you have enabled auto-reload in the dashboard. 
            The amount added by the top-up operation will be the same amount as was added in the payment 
            when auto-reload was enabled. Your account balance is checked every 5-10 minutes and if it falls 
            below the threshold and auto-reload is enabled, then it will be topped up automatically. Use this 
            endpoint if you need to top up at times when your credit may be exhausted more quickly than the auto-reload may occur.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.ChangeAccountSettings(Vonage.Accounts.AccountSettingsRequest,Vonage.Request.Credentials)">
            <summary>
            Update the default callback URLs (where the webhooks are sent to) associated with your account: 
            * Callback URL for incoming SMS messages * Callback URL for delivery receipts        
            Note: that the URLs you provide must be valid and active. Vonage will check that they return a 200 OK response before the setting is saved
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.RetrieveApiSecrets(System.String,Vonage.Request.Credentials)">
            <summary>
            Many of Vonage's APIs are accessed using an API key and secret. It is recommended that you change or "rotate" 
            your secrets from time to time for security purposes. This section provides the API interface for achieving this. 
            Note: to work on secrets for your secondary accounts, you may authenticate with your primary 
            credentials and supply the secondary API keys as URL parameters to these API endpoints.
            </summary>
            <param name="apiKey"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.CreateApiSecret(Vonage.Accounts.CreateSecretRequest,System.String,Vonage.Request.Credentials)">
            <summary>
            Createse an API Secret
            </summary>
            <param name="request"></param>
            <param name="apiKey">The Api Key to create a secret for</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.RetrieveApiSecret(System.String,System.String,Vonage.Request.Credentials)">
            <summary>
            retrieves info about an api secret at the given id
            </summary>
            <param name="secretId">the id of the secret</param>
            <param name="apiKey">Api Key the secret is for</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.RevokeApiSecret(System.String,System.String,Vonage.Request.Credentials)">
            <summary>
            Deletes an Api Secret
            </summary>
            <param name="secretId">the id of the secret to be deleted</param>
            <param name="apiKey">the api key the secret is for</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Accounts.Secret.Links">
            <summary>
            the reference link for the secret
            </summary>
        </member>
        <member name="P:Vonage.Accounts.Secret.Id">
            <summary>
            the id of the secret
            </summary>
        </member>
        <member name="P:Vonage.Accounts.Secret.CreatedAt">
            <summary>
            the creation time of the secret
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SecretsRequestResult.Links">
            <summary>
            reference links for the secrets
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SecretsRequestResult.Embedded">
            <summary>
            the secrets
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.ApiKey">
            <summary>
            the API Key of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.Balance">
            <summary>
            the current subaccount balance
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.CreatedAt">
            <summary>
            the creation time of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.CreditLimit">
            <summary>
            the credit limit of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.Name">
            <summary>
            the name of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.PrimaryAccountApiKey">
            <summary>
            the primary API Key
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.Secret">
            <summary>
            the secret of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.Suspended">
            <summary>
            the suspension state of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.UsePrimaryAccountBalance">
            <summary>
            whether the subaccount should use the account balance of the primary account
            </summary>
        </member>
        <member name="P:Vonage.Accounts.TopUpRequest.Trx">
            <summary>
            The transaction reference of the transaction when balance was added and auto-reload was enabled on your account.
            </summary>
        </member>
        <member name="P:Vonage.Applications.Application.Capabilities">
            <summary>
            Configuration for the products available in this application
            </summary>
        </member>
        <member name="P:Vonage.Applications.Application.Id">
            <summary>
            The application's ID
            </summary>
        </member>
        <member name="P:Vonage.Applications.Application.Keys">
            <summary>
            The keys for your application
            </summary>
        </member>
        <member name="P:Vonage.Applications.Application.Name">
            <summary>
            Friendly identifier for your application. This is not unique
            </summary>
        </member>
        <member name="T:Vonage.Applications.ApplicationCapabilities">
            <summary>
                Represents capabilities of an application.
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Voice">
            <summary>
            Voice application webhook config
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Rtc">
            <summary>
            RTC / Client SDK application webhook config
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Vbc">
            <summary>
            Specify vbc capability to enable zero-rated calls for VBC number programmability service applications. This must be an empty object.
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Meetings">
            <summary>
                Create meetings with Vonage API.
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Messages">
            <summary>
            Messages and Dispatch application webhook config
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Video">
            <summary>
               Create in-app video calls with Vonage API.
            </summary>
        </member>
        <member name="T:Vonage.Applications.Capabilities.Meetings">
            <summary>
                Represents the Meetings capability.
            </summary>
        </member>
        <member name="M:Vonage.Applications.Capabilities.Meetings.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="T:Vonage.Applications.Capabilities.Video">
            <summary>
            Represents the Video capability.
            </summary>
        </member>
        <member name="M:Vonage.Applications.Capabilities.Video.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="T:Vonage.Applications.CreateApplicationRequest">
            <summary>
                Represents a request to create an application.
            </summary>
        </member>
        <member name="P:Vonage.Applications.CreateApplicationRequest.Name">
            <summary>
                Application Name
            </summary>
        </member>
        <member name="P:Vonage.Applications.CreateApplicationRequest.Capabilities">
            <summary>
            Your application can use multiple products. This contains the configuration for each product. 
            This replaces the application type from version 1 of the Application API.
            </summary>
        </member>
        <member name="P:Vonage.Applications.CreateApplicationRequest.Keys">
            <summary>
            The keys for the application
            </summary>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.CreateApplicaitonAsync(Vonage.Applications.CreateApplicationRequest,Vonage.Request.Credentials)">
            <summary>
            Application Name
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.ListApplicationsAsync(Vonage.Applications.ListApplicationsRequest,Vonage.Request.Credentials)">
            <summary>
            List applications
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.GetApplicationAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            Retrieves information about an application
            </summary>
            <param name="id">Id of the application to be retrieved</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.UpdateApplicationAsync(System.String,Vonage.Applications.CreateApplicationRequest,Vonage.Request.Credentials)">
            <summary>
            Updates an Application
            </summary>
            <param name="id">Id of the application to be updated</param>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.DeleteApplicationAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            Deletes an application: Cannot be undone
            </summary>
            <param name="id">Id of the application to be deleted</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.CreateApplicaiton(Vonage.Applications.CreateApplicationRequest,Vonage.Request.Credentials)">
            <summary>
            Application Name
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.ListApplications(Vonage.Applications.ListApplicationsRequest,Vonage.Request.Credentials)">
            <summary>
            List applications
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.GetApplication(System.String,Vonage.Request.Credentials)">
            <summary>
            Retrieves information about an application
            </summary>
            <param name="id">Id of the application to be retrieved</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.UpdateApplication(System.String,Vonage.Applications.CreateApplicationRequest,Vonage.Request.Credentials)">
            <summary>
            Updates an Application
            </summary>
            <param name="id">Id of the application to be updated</param>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.DeleteApplication(System.String,Vonage.Request.Credentials)">
            <summary>
            Deletes an application: Cannot be undone
            </summary>
            <param name="id">Id of the application to be deleted</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Applications.ListApplicationsRequest.PageSize">
            <summary>
            Number of records to retrieve per page
            </summary>
        </member>
        <member name="P:Vonage.Applications.ListApplicationsRequest.Page">
            <summary>
            the page to retrieve
            </summary>
        </member>
        <member name="T:Vonage.Common.EmbeddedResponse`1">
            <summary>
                Represents an Embedded JSON response with a custom content.
            </summary>
            <param name="Content">The embedded content.</param>
            <typeparam name="T">Type of the content.</typeparam>
        </member>
        <member name="M:Vonage.Common.EmbeddedResponse`1.#ctor(`0)">
            <summary>
                Represents an Embedded JSON response with a custom content.
            </summary>
            <param name="Content">The embedded content.</param>
            <typeparam name="T">Type of the content.</typeparam>
        </member>
        <member name="P:Vonage.Common.EmbeddedResponse`1.Content">
            <summary>The embedded content.</summary>
        </member>
        <member name="T:Vonage.Common.VonageMaybeJsonConverter`1">
            <summary>
                Represents a custom converter from Maybe to Json, using specific conversion for Vonage entities.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
        </member>
        <member name="M:Vonage.Common.VonageMaybeJsonConverter`1.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="T:Vonage.Configuration">
            <summary>
                Represents the SDK Configuration.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.ApiKey">
            <summary>
                Retrieves the Api secret.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.ApiSecret">
            <summary>
                Retrieves the Api secret.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.ApplicationId">
            <summary>
                Retrieves the Application Id.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.ApplicationKey">
            <summary>
                Retrieves the Application Key.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.Client">
            <summary>
                Retrieves a configured HttpClient.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.ClientHandler">
            <summary>
                Exposes an HttpMessageHandler.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.EuropeApiUrl">
            <summary>
                Retrieves the Europe Api Url.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.Instance">
            <summary>
                Retrieves the unique instance (Singleton).
            </summary>
        </member>
        <member name="P:Vonage.Configuration.NexmoApiUrl">
            <summary>
                Retrieves the Nexmo Api Url.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.RestApiUrl">
            <summary>
                Retrieves the Rest Api Url.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.SecuritySecret">
            <summary>
                Retrieves the Security Secret.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.Settings">
            <summary>
                Exposes the configuration's content.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.SigningMethod">
            <summary>
                Retrieves the SigningMethod.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.UserAgent">
            <summary>
                Retrieves the User Agent.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.VideoApiUrl">
            <summary>
                Retrieves the Video Api Url.
            </summary>
        </member>
        <member name="P:Vonage.Conversions.ConversionRequest.MessageId">
            <summary>
            The ID you receive in the response to a request. * From the Verify API - use the event_id in the response to Verify Check. 
            * From the SMS API - use the message-id * From the Text-To-Speech API - use the call-id * From the Text-To-Speech-Prompt API - use the call-id
            </summary>
        </member>
        <member name="P:Vonage.Conversions.ConversionRequest.Delivered">
            <summary>
            Set to true if your user replied to the message you sent. Otherwise, set to false. Note: for curl, use 0 and 1.
            </summary>
        </member>
        <member name="P:Vonage.Conversions.ConversionRequest.TimeStamp">
            <summary>
            When the user completed your call-to-action (e.g. visited your website, installed your app) 
            in UTC±00:00 format: yyyy-MM-dd HH:mm:ss. If you do not set this parameter, Vonage uses the time it receives this request.
            </summary>
        </member>
        <member name="M:Vonage.Conversions.IConversionClient.SmsConversionAsync(Vonage.Conversions.ConversionRequest,Vonage.Request.Credentials)">
            <summary>
            Send a Conversion API request with information about the SMS message identified by message-id. 
            Vonage uses your conversion data and internal information about message-id to help improve our routing of messages in the future.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Conversions.IConversionClient.VoiceConversionAsync(Vonage.Conversions.ConversionRequest,Vonage.Request.Credentials)">
            <summary>
            Send a Conversion API request with information about the Call or Text-To-Speech identified by message-id. 
            Vonage uses your conversion data and internal information about message-id to help improve our routing of messages in the future.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Conversions.IConversionClient.SmsConversion(Vonage.Conversions.ConversionRequest,Vonage.Request.Credentials)">
            <summary>
            Send a Conversion API request with information about the SMS message identified by message-id. 
            Vonage uses your conversion data and internal information about message-id to help improve our routing of messages in the future.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Conversions.IConversionClient.VoiceConversion(Vonage.Conversions.ConversionRequest,Vonage.Request.Credentials)">
            <summary>
            Send a Conversion API request with information about the Call or Text-To-Speech identified by message-id. 
            Vonage uses your conversion data and internal information about message-id to help improve our routing of messages in the future.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="T:Vonage.Extensions.ServiceCollectionExtensions">
            <summary>
                Extensions for IServiceCollection to register VonageClient.
            </summary>
        </member>
        <member name="M:Vonage.Extensions.ServiceCollectionExtensions.AddVonageClientScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,Vonage.Request.Credentials)">
            <summary>
                Adds a scoped service of <see cref="T:Vonage.VonageClient" />, and all api-specific clients, to the specified
                IServiceCollection.
            </summary>
            <param name="services">Specifies the contract for a collection of service descriptors.</param>
            <param name="credentials">Represents credentials for Vonage APIs.</param>
            <returns>The updated services.</returns>
        </member>
        <member name="M:Vonage.Extensions.ServiceCollectionExtensions.AddVonageClientTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Vonage.Request.Credentials)">
            <summary>
                Adds a transient service of <see cref="T:Vonage.VonageClient" />, and all api-specific clients, to the specified
                IServiceCollection.
            </summary>
            <param name="services">Specifies the contract for a collection of service descriptors.</param>
            <param name="credentials">Represents credentials for Vonage APIs.</param>
            <returns>The updated services.</returns>
        </member>
        <member name="T:Vonage.ITokenGenerator">
            <summary>
                Represents a token generator.
            </summary>
        </member>
        <member name="M:Vonage.ITokenGenerator.GenerateToken(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                Generates a token.
            </summary>
            <param name="applicationId">The application Id.</param>
            <param name="privateKey">The application private key.</param>
            <param name="claims">The additional claims.</param>
            <returns>The token.</returns>
        </member>
        <member name="M:Vonage.ITokenGenerator.GenerateToken(Vonage.Request.Credentials,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                Generates a token.
            </summary>
            <param name="credentials">The application credentials.</param>
            <param name="claims">The additional claims.</param>
            <returns>The token.</returns>
        </member>
        <member name="T:Vonage.Jwt">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Jwt.CreateToken(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                Creates a token from application id and private key.
            </summary>
            <param name="appId">The application id.</param>
            <param name="privateKey">The private key.</param>
            <param name="claims">The additional claims.</param>
            <returns>The token.</returns>
        </member>
        <member name="M:Vonage.Jwt.GenerateToken(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Jwt.GenerateToken(Vonage.Request.Credentials,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Jwt.CreateTokenWithClaims(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                Creates a token with custom claims.
            </summary>
            <param name="appId">The application Id.</param>
            <param name="privateKey">The private key.</param>
            <param name="claims">The custom claims.</param>
            <returns>The token.</returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageAuthenticationException">When the private key is null or whitespace.</exception>
        </member>
        <member name="T:Vonage.Meetings.Common.Recording">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.EndedAt">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.Id">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.Links">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.SessionId">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.StartedAt">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.Status">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Recording.RecordingLinks">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.RecordingLinks.Url">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.RecordingStatus">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RecordingStatus.Started">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RecordingStatus.Stopped">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RecordingStatus.Paused">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RecordingStatus.Uploaded">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room">
            <summary>
                Represents a Room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.AvailableFeatures">
            <summary>
                Provides options to customize the room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.CallbackUrls">
            <summary>
                Provides callback URLs to listen to events
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.CreatedAt">
            <summary>
                The time for when the room was created, expressed in ISO 8601 format
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.DisplayName">
            <summary>
                The name of the meeting room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.ExpiresAfterUse">
            <summary>
                Close the room after a session ends. Only relevant for long_term rooms.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.ExpiresAt">
            <summary>
                The time for when the room will be expired, expressed in ISO 8601 format
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Id">
            <summary>
                The room UUID
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.InitialJoinOptions">
            <summary>
                Sets the default options for participants
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.IsAvailable">
            <summary>
                Once a room becomes unavailable, no new sessions can be created under it
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.JoinApprovalLevel">
            <summary>
                The level of approval needed to join the meeting in the room. When set to "after_owner_only" the participants will
                join the meeting only after the host joined. When set to "explicit_approval" the participants will join the waiting
                room and the host will deny/approve them.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Links">
            <summary>
                Represents HAL links for navigation purposes
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.MeetingCode">
            <summary>
                The meeting PIN number
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Metadata">
            <summary>
                Free text that can be attached to a room. This will be passed in the form of a header in events related to this
                room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Recording">
            <summary>
                An object containing various meeting recording options
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.ThemeId">
            <summary>
                The theme id for the room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Type">
            <summary>
                The type of meeting which can be instant or long term. An instant is active for 10 minutes until the first
                participant joins the roo, and remains active for 10 minutes after the last participant leaves. A long term room
                expires after a specific date
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.UserInterfaceSettings">
            <summary>
                Provides options to customize the user interface
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room.RecordingOptions">
            <summary>
                An object containing various meeting recording options
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.RecordingOptions.AutoRecord">
            <summary>
                Automatically record all sessions in this room. Recording cannot be stopped when this is set to true.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.RecordingOptions.RecordOnlyOwner">
            <summary>
                Record only the owner screen or any share screen of the video.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room.JoinOptions">
            <summary>
                Sets the default options for participants
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.JoinOptions.MicrophoneState">
            <summary>
                Set the default microphone option for users in the pre-join screen of this room.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room.Callback">
            <summary>
                Provides callback URLs to listen to events
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Callback.RecordingsCallbackUrl">
            <summary>
                Callback url for recordings events, overrides application level recordings callback url.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Callback.RoomsCallbackUrl">
            <summary>
                Callback url for rooms events, overrides application level rooms callback url.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Callback.SessionsCallbackUrl">
            <summary>
                Callback url for sessions events, overrides application level sessions callback url.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room.Features">
            <summary>
                Provides options to customize the room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Features.IsCaptionsAvailable">
            <summary>
                Determine if captions are available in the UI.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Features.IsChatAvailable">
            <summary>
                Determine if chat feature is available in the UI.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Features.IsLocaleSwitcherAvailable">
            <summary>
                Determine if the locale switcher is available in the UI.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Features.IsRecordingAvailable">
            <summary>
                Determine if recording feature is available in the UI.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Features.IsWhiteboardAvailable">
            <summary>
                Determine if whiteboard feature is available in the UI.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room.RoomLinks">
            <summary>
                Provides links to join the meeting room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.RoomLinks.GuestUrl">
            <summary>
                The link to join the meeting as participant, using the meeting code
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.RoomLinks.HostUrl">
            <summary>
                The link to join the meeting as host, using the meeting code
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.RoomApprovalLevel">
            <summary>
                Represents the level of approval needed to join the meeting in the room.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomApprovalLevel.None">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomApprovalLevel.AfterOwnerOnly">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomApprovalLevel.ExplicitApproval">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.RoomMicrophoneState">
            <summary>
                Defines the default microphone option for users in the pre-join screen of this room.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomMicrophoneState.Default">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomMicrophoneState.On">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomMicrophoneState.Off">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.RoomType">
            <summary>
                Defines the room type.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomType.Instant">
            <summary>
            An instant is active for 10 minutes until the first participant joins the roo, and remains active for 10 minutes after the last participant leaves
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomType.LongTerm">
            <summary>
            A long term room expires after a specific date
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Theme">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.AccountId">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.ApplicationId">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandedFavicon">
            <summary>
            The favicon key in storage system
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandedFaviconUrl">
            <summary>
            The favicon link.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandImageColored">
            <summary>
            Colored logo's key in storage system.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandImageColoredUrl">
            <summary>
            Colored logo's link.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandImageWhite">
            <summary>
            White logo's key in storage system.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandImageWhiteUrl">
            <summary>
            White logo's link.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandText">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.Domain">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.MainColor">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.ShortCompanyUrl">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.ThemeId">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.ThemeName">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.ThemeDomain">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.ThemeDomain.VCP">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.ThemeDomain.VBC">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.ThemeLogoType">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.ThemeLogoType.White">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.ThemeLogoType.Colored">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.ThemeLogoType.Favicon">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.UiSettings">
            <summary>
                Provides options to customize the user interface
            </summary>
            <param name="Language">The desired language of the UI.</param>
        </member>
        <member name="M:Vonage.Meetings.Common.UiSettings.#ctor(Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage)">
            <summary>
                Provides options to customize the user interface
            </summary>
            <param name="Language">The desired language of the UI.</param>
        </member>
        <member name="P:Vonage.Meetings.Common.UiSettings.Language">
            <summary>The desired language of the UI.</summary>
        </member>
        <member name="T:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage">
            <summary>
                The desired language of the UI.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.En">
            <summary>
                English language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.He">
            <summary>
                Hebrew language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.Es">
            <summary>
                Spanish language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.Pt">
            <summary>
                Portuguese language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.It">
            <summary>
                Italian language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.Ca">
            <summary>
                Canadian language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.Fr">
            <summary>
                French language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.De">
            <summary>
                German language.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.CreateRoom.CreateRoomRequest">
            <summary>
                Represents a request to create a room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.AvailableFeatures">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.CallbackUrls">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.ExpireAfterUse">
            <summary>
            Close the room after a session ends. Only relevant for long_term rooms.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.ExpiresAt">
            <summary>
            The time for when the room will be expired. Required only for long-term room creation.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.InitialJoinOptions">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.JoinApprovalLevel">
            <summary>
            The level of approval needed to join the meeting in the room. When set to "after_owner_only" the participants will join the meeting only after the host joined. When set to "explicit_approval" the participants will join the waiting room and the host will deny/approve them.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.Metadata">
            <summary>
            Free text that can be attached to a room. This will be passed in the form of a header in events related to this room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.RecordingOptions">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.ThemeId">
            <summary>
            The theme id for the room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.Type">
            <summary>
            Represents the type of the room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.UserInterfaceSettings">
            <summary>
                Provides options to customize the user interface.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequest.Build">
            <summary>
                Initializes a builder for CreateRoomRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.AsLongTermRoom(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.ExpireAfterUse">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithApprovalLevel(Vonage.Meetings.Common.RoomApprovalLevel)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithCallback(Vonage.Meetings.Common.Room.Callback)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithDisplayName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithFeatures(Vonage.Meetings.Common.Room.Features)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithInitialJoinOptions(Vonage.Meetings.Common.Room.JoinOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithRecordingOptions(Vonage.Meetings.Common.Room.RecordingOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithThemeId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithUserInterfaceSettings(Vonage.Meetings.Common.UiSettings)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.CreateRoom.IBuilderForDisplayName">
            <summary>
                Represents a builder for DisplayName.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForDisplayName.WithDisplayName(System.String)">
            <summary>
                Sets the DisplayName.
            </summary>
            <param name="value">The display name.</param>
            <returns></returns>
        </member>
        <member name="T:Vonage.Meetings.CreateRoom.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.AsLongTermRoom(System.DateTime)">
            <summary>
                Sets the room as long-term.
            </summary>
            <param name="expiration">The expiration date.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.ExpireAfterUse">
            <summary>
                Sets the room to expire after use.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithApprovalLevel(Vonage.Meetings.Common.RoomApprovalLevel)">
            <summary>
                Sets the approval level on the builder.
            </summary>
            <param name="level">The approval level.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithCallback(Vonage.Meetings.Common.Room.Callback)">
            <summary>
                Sets the callback urls on the builder.
            </summary>
            <param name="callbackUrls">The callback urls.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithFeatures(Vonage.Meetings.Common.Room.Features)">
            <summary>
                Sets the available features on the builder.
            </summary>
            <param name="availableFeatures">The available features.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithInitialJoinOptions(Vonage.Meetings.Common.Room.JoinOptions)">
            <summary>
                Sets the join options on the builder.
            </summary>
            <param name="options">The join options.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithMetadata(System.String)">
            <summary>
                Sets the medata on the builder.
            </summary>
            <param name="data">The data.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithRecordingOptions(Vonage.Meetings.Common.Room.RecordingOptions)">
            <summary>
                Sets the recording options on the builder.
            </summary>
            <param name="options">The recording options.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithThemeId(System.String)">
            <summary>
                Sets the theme  identifier on the builder.
            </summary>
            <param name="theme">The theme identifier.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithUserInterfaceSettings(Vonage.Meetings.Common.UiSettings)">
            <summary>
                Sets the options to customize the user interface.
            </summary>
            <param name="value">The options to customize the user interface.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.CreateTheme.CreateThemeRequest">
            <summary>
                Represents a request to create a theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateTheme.CreateThemeRequest.BrandText">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateTheme.CreateThemeRequest.MainColor">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateTheme.CreateThemeRequest.ShortCompanyUrl">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateTheme.CreateThemeRequest.ThemeName">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequestBuilder.WithBrand(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequestBuilder.WithColor(System.Drawing.Color)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequestBuilder.WithShortCompanyUrl(System.Uri)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.CreateTheme.IBuilderForBrand">
            <summary>
            Represents a builder for Brand.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.IBuilderForBrand.WithBrand(System.String)">
            <summary>
                Sets the brand.
            </summary>
            <param name="value">The brand.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.CreateTheme.IBuilderForColor">
            <summary>
                Represents a builder for Color.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.IBuilderForColor.WithColor(System.Drawing.Color)">
            <summary>
                Sets the brand.
            </summary>
            <param name="value">The brand.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.CreateTheme.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the theme name on the builder.
            </summary>
            <param name="value">The theme name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.IBuilderForOptional.WithShortCompanyUrl(System.Uri)">
            <summary>
                Sets the company Url on the builder.
            </summary>
            <param name="value">The company Url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.DeleteRecording.DeleteRecordingRequest">
            <summary>
                Represents a request to delete a recording.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.DeleteRecording.DeleteRecordingRequest.RecordingId">
            <summary>
                The recording id.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.DeleteRecording.DeleteRecordingRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteRecording.DeleteRecordingRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteRecording.DeleteRecordingRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a DeleteRecordingRequest.
            </summary>
            <param name="recordingId">The recording id.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.DeleteTheme.DeleteThemeRequest">
            <summary>
                Represents a request to delete a theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.DeleteTheme.DeleteThemeRequest.ForceDelete">
            <summary>
                Delete the theme even if theme is used by rooms or as application default theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.DeleteTheme.DeleteThemeRequest.ThemeId">
            <summary>
                The theme id.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequestBuilder.WithForceDelete">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequestBuilder.WithThemeId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.DeleteTheme.IBuilderForThemeId">
            <summary>
                Represents a builder for ThemeId.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.IBuilderForThemeId.WithThemeId(System.Guid)">
            <summary>
                Sets the ThemeId.
            </summary>
            <param name="value">The theme Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.DeleteTheme.IOptionalBuilder">
            <summary>
                Represents an optional builder.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.IOptionalBuilder.WithForceDelete">
            <summary>
                Delete the theme even if theme is used by rooms or as application default theme.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetDialNumbers.GetDialNumbersRequest">
            <summary>
                Represents a request to retrieve dial-in numbers.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetDialNumbers.GetDialNumbersRequest.Default">
            <summary>
                The default request.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetDialNumbers.GetDialNumbersRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetDialNumbers.GetDialNumbersRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.GetDialNumbers.GetDialNumbersResponse">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetDialNumbers.GetDialNumbersResponse.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetDialNumbers.GetDialNumbersResponse.Locale">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetDialNumbers.GetDialNumbersResponse.Number">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.GetRecording.GetRecordingRequest">
            <summary>
             Represents a request to retrieve a recording details.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRecording.GetRecordingRequest.RecordingId">
            <summary>
                The recording identifier.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRecording.GetRecordingRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRecording.GetRecordingRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRecording.GetRecordingRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a GetRecordingRequest.
            </summary>
            <param name="recordingId">The recording identifier.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRecordings.GetRecordingsRequest">
            <summary>
                Represents a request to retrieve recordings from a session.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRecordings.GetRecordingsRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRecordings.GetRecordingsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRecordings.GetRecordingsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRecordings.GetRecordingsRequest.Parse(System.String)">
            <summary>
                Parses the input into a GetRecordingsRequest.
            </summary>
            <param name="sessionId">The session identifier.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRecordings.GetRecordingsResponse">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRecordings.GetRecordingsResponse.Embedded">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.GetRecordings.GetRecordingsResponse.EmbeddedResponse">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRecordings.GetRecordingsResponse.EmbeddedResponse.Recordings">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.GetRoom.GetRoomRequest">
            <summary>
                Represents a request to retrieve a room details.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoom.GetRoomRequest.RoomId">
            <summary>
                The room identifier.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRoom.GetRoomRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoom.GetRoomRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoom.GetRoomRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a GetRoomRequest.
            </summary>
            <param name="roomId">The room identifier.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRooms.GetRoomsRequest">
            <summary>
                Represents a request to retrieve all rooms.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsRequest.EndId">
            <summary>
                The ID to end returning events at (excluding end_id itself).
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsRequest.PageSize">
            <summary>
                The maximum number of rooms in the current page.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsRequest.StartId">
            <summary>
                The ID to start returning events at.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequest.Build">
            <summary>
                Build the request with default values.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequestBuilder.WithEndId(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequestBuilder.WithStartId(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.GetRooms.IOptionalBuilder">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRooms.IOptionalBuilder.WithEndId(System.Int32)">
            <summary>
                Sets the end id on the builder.
            </summary>
            <param name="value">The ID to end returning events at (excluding end_id itself).</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRooms.IOptionalBuilder.WithPageSize(System.Int32)">
            <summary>
                Sets the page size on the builder.
            </summary>
            <param name="value">The maximum number of rooms in the current page.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRooms.IOptionalBuilder.WithStartId(System.Int32)">
            <summary>
                Sets the start id on the builder.
            </summary>
            <param name="value"> The ID to start returning events at.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRooms.GetRoomsResponse">
            <summary>
            Represents the response for a GetRoomsRequest.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsResponse.Links">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsResponse.PageSize">
            <summary>
                The number of results returned on this page.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsResponse.Rooms">
            <summary>
            List of all accessible rooms
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsResponse.TotalItems">
            <summary>
                The overall number of rooms.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest">
            <summary>
                Represents a request to get all rooms associated with a theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.EndId">
            <summary>
                The ID to end returning events at (excluding end_id itself).
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.PageSize">
            <summary>
                The maximum number of rooms in the current page.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.StartId">
            <summary>
                The ID to start returning events at.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.ThemeId">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequestBuilder.WithEndId(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequestBuilder.WithStartId(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequestBuilder.WithThemeId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.GetRoomsByTheme.IBuilderForThemeId">
            <summary>
                Represents a builder for ThemeId.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.IBuilderForThemeId.WithThemeId(System.Guid)">
            <summary>
                Sets the ThemeId.
            </summary>
            <param name="value">The theme Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRoomsByTheme.IOptionalBuilder">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.IOptionalBuilder.WithEndId(System.Int32)">
            <summary>
                Sets the end id on the builder.
            </summary>
            <param name="value">The ID to end returning events at (excluding end_id itself).</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.IOptionalBuilder.WithPageSize(System.Int32)">
            <summary>
                Sets the page size on the builder.
            </summary>
            <param name="value">The maximum number of rooms in the current page.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.IOptionalBuilder.WithStartId(System.Int32)">
            <summary>
                Sets the start id on the builder.
            </summary>
            <param name="value"> The ID to start returning events at.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeResponse">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeResponse.Links">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeResponse.PageSize">
            <summary>
                The number of results returned on this page.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeResponse.Rooms">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.GetTheme.GetThemeRequest">
            <summary>
                Represents a request for retrieving a theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetTheme.GetThemeRequest.ThemeId">
            <summary>
                The theme identifier.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetTheme.GetThemeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetTheme.GetThemeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetTheme.GetThemeRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a GetThemeRequest.
            </summary>
            <param name="themeId">The theme identifier.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetThemes.GetThemesRequest">
            <summary>
                Represents a request to retrieve all themes.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetThemes.GetThemesRequest.Default">
            <summary>
                The default request.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetThemes.GetThemesRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetThemes.GetThemesRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.IMeetingsClient">
            <summary>
                Exposes Meetings features.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.CreateRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.CreateRoom.CreateRoomRequest})">
            <summary>
                Creates a room.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.CreateThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.CreateTheme.CreateThemeRequest})">
            <summary>
                Creates a theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.DeleteRecordingAsync(Vonage.Common.Monads.Result{Vonage.Meetings.DeleteRecording.DeleteRecordingRequest})">
            <summary>
                Deletes a recording.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.DeleteThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.DeleteTheme.DeleteThemeRequest})">
            <summary>
                Deletes a theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetDialNumbersAsync">
            <summary>
                Retrieves numbers that can be used to dial into a meeting.
            </summary>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetRecordingAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRecording.GetRecordingRequest})">
            <summary>
                Retrieves a recording details.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetRecordingsAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRecordings.GetRecordingsRequest})">
            <summary>
                Retrieves recordings from a session.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRoom.GetRoomRequest})">
            <summary>
                Retrieves a room details.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetRoomsAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRooms.GetRoomsRequest})">
            <summary>
                Retrieves all rooms.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetRoomsByThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest})">
            <summary>
                Retrieves rooms by theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetTheme.GetThemeRequest})">
            <summary>
                Retrieves a theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetThemesAsync">
            <summary>
                Retrieves all themes.
            </summary>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.UpdateApplicationAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateApplication.UpdateApplicationRequest})">
            <summary>
                Updates an application.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.UpdateRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateRoom.UpdateRoomRequest})">
            <summary>
                Updates a room.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.UpdateThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateTheme.UpdateThemeRequest})">
            <summary>
                Updates a theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.UpdateThemeLogoAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest})">
            <summary>
                Updates a logo image and associates it with a theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.MeetingsClient">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration,System.IO.Abstractions.IFileSystem)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
            <param name="fileSystem">The file system.</param>
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.CreateRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.CreateRoom.CreateRoomRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.CreateThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.CreateTheme.CreateThemeRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.DeleteRecordingAsync(Vonage.Common.Monads.Result{Vonage.Meetings.DeleteRecording.DeleteRecordingRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.DeleteThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.DeleteTheme.DeleteThemeRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetDialNumbersAsync">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetRecordingAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRecording.GetRecordingRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetRecordingsAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRecordings.GetRecordingsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRoom.GetRoomRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetRoomsAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRooms.GetRoomsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetRoomsByThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetTheme.GetThemeRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetThemesAsync">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.UpdateApplicationAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateApplication.UpdateApplicationRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.UpdateRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateRoom.UpdateRoomRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.UpdateThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateTheme.UpdateThemeRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.UpdateThemeLogoAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest})">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.UpdateApplication.UpdateApplicationRequest">
            <summary>
                Represents a request to update an existing application.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateApplication.UpdateApplicationRequest.DefaultThemeId">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateApplication.UpdateApplicationRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateApplication.UpdateApplicationRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateApplication.UpdateApplicationRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a UpdateApplicationRequest.
            </summary>
            <param name="themeId">The theme id.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.UpdateApplication.UpdateApplicationResponse">
            <summary>
                Represents a response when updating an application.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateApplication.UpdateApplicationResponse.AccountId">
            <summary>
                The applications account id.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateApplication.UpdateApplicationResponse.ApplicationId">
            <summary>
                The application id.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateApplication.UpdateApplicationResponse.DefaultThemeId">
            <summary>
                The application default theme id.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.UpdateRoom.UpdateRoomRequest">
            <summary>
                Represents a request to update a room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.AvailableFeatures">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.CallbackUrls">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.ExpireAfterUse">
            <summary>
            Close the room after a session ends. Only relevant for long_term rooms.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.ExpiresAt">
            <summary>
            The time for when the room will be expired, expressed in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.InitialJoinOptions">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.JoinApprovalLevel">
            <summary>
            The level of approval needed to join the meeting in the room. When set to "after_owner_only" the participants will join the meeting only after the host joined. When set to "explicit_approval" the participants will join the waiting room and the host will deny/approve them.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.RoomId">
            <summary>
            The room id.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.ThemeId">
            <summary>
            The theme id for the room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.UserInterfaceSettings">
            <summary>
                Provides options to customize the user interface.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.Build">
            <summary>
                Initializes a builder for UpdateRoomRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.Create">
            <summary>
                Creates the request.
            </summary>
            <returns>The request if validation succeeded, a failure if it failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.ExpireAfterUse">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithApprovalLevel(Vonage.Meetings.Common.RoomApprovalLevel)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithCallback(Vonage.Meetings.Common.Room.Callback)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithExpiresAt(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithFeatures(Vonage.Meetings.Common.Room.Features)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithInitialJoinOptions(Vonage.Meetings.Common.Room.JoinOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithRoomId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithThemeId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithUserInterfaceSettings(Vonage.Meetings.Common.UiSettings)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.UpdateRoom.IBuilderForRoomId">
            <summary>
                Represents a builder for RoomId.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForRoomId.WithRoomId(System.Guid)">
            <summary>
                Sets the RoomId.
            </summary>
            <param name="value">The room Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.UpdateRoom.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.ExpireAfterUse">
            <summary>
                Sets the room to expire after use.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithApprovalLevel(Vonage.Meetings.Common.RoomApprovalLevel)">
            <summary>
                Sets the approval level on the builder.
            </summary>
            <param name="level">The approval level.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithCallback(Vonage.Meetings.Common.Room.Callback)">
            <summary>
                Sets the callback urls on the builder.
            </summary>
            <param name="callbackUrls">The callback urls.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithExpiresAt(System.DateTime)">
            <summary>
            </summary>
            <param name="expiration"></param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithFeatures(Vonage.Meetings.Common.Room.Features)">
            <summary>
                Sets the available features on the builder.
            </summary>
            <param name="availableFeatures">The available features.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithInitialJoinOptions(Vonage.Meetings.Common.Room.JoinOptions)">
            <summary>
                Sets the join options on the builder.
            </summary>
            <param name="options">The join options.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithThemeId(System.String)">
            <summary>
                Sets the theme  identifier on the builder.
            </summary>
            <param name="theme">The theme identifier.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithUserInterfaceSettings(Vonage.Meetings.Common.UiSettings)">
            <summary>
                Sets the options to customize the user interface.
            </summary>
            <param name="value">The options to customize the user interface.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.UpdateTheme.UpdateThemeRequest">
            <summary>
                Represents a request to update an existing theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.BrandText">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.MainColor">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.ShortCompanyUrl">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.ThemeId">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.ThemeName">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <param name="themeId">The theme id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequestBuilder.WithBrandText(System.String)">
            <summary>
                Sets the brand text on the builder.
            </summary>
            <param name="value">The brand text.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequestBuilder.WithColor(System.Drawing.Color)">
            <summary>
                Sets the main color on the builder.
            </summary>
            <param name="value">The color.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequestBuilder.WithName(System.String)">
            <summary>
                Sets the theme name on the builder.
            </summary>
            <param name="value">The theme name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequestBuilder.WithShortCompanyUrl(System.Uri)">
            <summary>
                Sets the company Url on the builder.
            </summary>
            <param name="value">The company Url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.UpdateTheme.IBuilderForThemeId">
            <summary>
                Represents a builder for ThemeId.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.IBuilderForThemeId.WithThemeId(System.Guid)">
            <summary>
                Sets the theme Id.
            </summary>
            <param name="value">The theme Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.UpdateTheme.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.IBuilderForOptional.WithBrandText(System.String)">
            <summary>
                Sets the brand text on the builder.
            </summary>
            <param name="value">The brand text.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.IBuilderForOptional.WithColor(System.Drawing.Color)">
            <summary>
                Sets the main color on the builder.
            </summary>
            <param name="value">The color.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the theme name on the builder.
            </summary>
            <param name="value">The theme name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.IBuilderForOptional.WithShortCompanyUrl(System.Uri)">
            <summary>
                Sets the company Url on the builder.
            </summary>
            <param name="value">The company Url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.FinalizeLogoRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.FinalizeLogoRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.GetUploadLogosUrlRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.GetUploadLogosUrlRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest">
            <summary>
                Represents a request to update a theme logo.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest.FilePath">
            <summary>
                Absolute path to the logo image.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest.ThemeId">
            <summary>
                Id of the theme which the logo will be associated with.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest.Type">
            <summary>
                The logo type to upload.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest.Parse(System.Guid,Vonage.Meetings.Common.ThemeLogoType,System.String)">
            <summary>
                Parses the input into a UpdateThemeLogoRequest.
            </summary>
            <param name="themeId">Id of the theme which the logo will be associated with.</param>
            <param name="logoType">The logo type to upload.</param>
            <param name="filePath">Absolute path to the logo image.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="F:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoUseCase.NoMatchingLogo">
            <summary>
                Indicates no matching logo was found.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.UploadDetails.ToDictionary">
            <summary>
                Converts data to a dictionary.
            </summary>
            <returns>The data dictionary.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.UploadLogoRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.UploadLogoRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.Attachment">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Messages.Attachment.Url">
            <summary>
                The URL of the attachment.
            </summary>
        </member>
        <member name="T:Vonage.Messages.CaptionedAttachment">
            <summary>
            Represents an attachment to a message.
            </summary>
        </member>
        <member name="P:Vonage.Messages.CaptionedAttachment.Caption">
            <summary>
                Additional text to accompany the attachment.
            </summary>
        </member>
        <member name="P:Vonage.Messages.CaptionedAttachment.Url">
            <summary>
               The publicly accessible URL of the image attachment. The image file is available for 48 hours after it is created. Supported types are .jpg, .jpeg, and .png
            </summary>
        </member>
        <member name="T:Vonage.Messages.IMessage">
            <summary>
                Represents a message to be sent by an IMessageClient.
            </summary>
        </member>
        <member name="P:Vonage.Messages.IMessage.Channel">
            <summary>
                The channel to send to.
            </summary>
        </member>
        <member name="P:Vonage.Messages.IMessage.ClientRef">
            <summary>
                Client reference of up to 40 characters. The reference will be present in every message status.
            </summary>
        </member>
        <member name="P:Vonage.Messages.IMessage.From">
            <summary>
                The phone number of the message sender in the E.164 format. Don't use a leading + or 00 when entering a phone
                number,
                start with the country code, for example, 447700900000. For SMS in certain localities alpha-numeric sender id's
                will
                work as well.
            </summary>
        </member>
        <member name="P:Vonage.Messages.IMessage.MessageType">
            <summary>
                The type of message to send.
            </summary>
        </member>
        <member name="P:Vonage.Messages.IMessage.To">
            <summary>
                The phone number of the message recipient in the E.164 format. Don't use a leading + or 00 when entering a phone
                number,
                start with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="P:Vonage.Messages.MessageRequestBase.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.MessageRequestBase.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.MessageRequestBase.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.MessageRequestBase.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.MessageRequestBase.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.MessagesChannel">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesChannel.SMS">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesChannel.MMS">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesChannel.WhatsApp">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesChannel.Messenger">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesChannel.ViberService">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Messages.MessagesClient">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Messages.MessagesClient.#ctor(Vonage.Request.Credentials)">
            <summary>
            </summary>
            <param name="credentials"></param>
        </member>
        <member name="M:Vonage.Messages.MessagesClient.SendAsync(Vonage.Messages.IMessage)">
            <summary>
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Vonage.Messages.MessagesMessageType">
            <summary>
            Defines the message type on a request.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Image">
            <summary>
            Image.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Vcard">
            <summary>
            Vcard.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Audio">
            <summary>
            Audio.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Video">
            <summary>
            Video.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.File">
            <summary>
            File.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Custom">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Template">
            <summary>
            Template.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Sticker">
            <summary>
            Sticker.
            </summary>
        </member>
        <member name="T:Vonage.Messages.MessagesResponse">
            <summary>
            </summary>
            <param name="MessageUuid"></param>
        </member>
        <member name="M:Vonage.Messages.MessagesResponse.#ctor(System.Guid)">
            <summary>
            </summary>
            <param name="MessageUuid"></param>
        </member>
        <member name="P:Vonage.Messages.MessagesResponse.MessageUuid">
            <summary></summary>
        </member>
        <member name="P:Vonage.Messages.Messenger.MessengerRequestData.Category">
            <summary>
                The use of different category tags enables the business to send messages for
                different use cases. For Facebook Messenger they need to comply with their
                Messaging Types policy. Vonage maps our category to their messaging_type.
                If message_tag is used, then an additional tag for that type is mandatory.
                By default Vonage sends the response category to Facebook Messenger.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Messenger.MessengerRequestData.Tag">
            <summary>
                A tag describing the type and relevance of the 1:1 communication between your app and the
                end user. A full list of available tags is available
                <a href="https://developers.facebook.com/docs/messenger-platform/send-messages/message-tags">here</a>
            </summary>
        </member>
        <member name="P:Vonage.Messages.Messenger.MessengerTextRequest.Text">
            <summary>
                The text of message to send; limited to 640 characters, including unicode.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.IViberMessage">
            <summary>
                Represents a Viber message to be sent by an IMessageClient.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.IViberMessage.Data">
            <summary>
                Gets or sets Viber-specific information.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberAction">
            <summary>
                Represents information for Viber action buttons.
            </summary>
            <param name="Url">A URL which is requested when the action button is clicked.</param>
            <param name="Text">Text which is rendered on the action button.</param>
        </member>
        <member name="M:Vonage.Messages.Viber.ViberAction.#ctor(System.String,System.String)">
            <summary>
                Represents information for Viber action buttons.
            </summary>
            <param name="Url">A URL which is requested when the action button is clicked.</param>
            <param name="Text">Text which is rendered on the action button.</param>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberAction.Url">
            <summary>A URL which is requested when the action button is clicked.</summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberAction.Text">
            <summary>Text which is rendered on the action button.</summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberFileRequest">
            <summary>
                Represents a request to send a file message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.Data">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.File">
            <summary>
                The file information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.Viber.ViberFileRequest.FileInformation">
            <summary>
                Represents the file information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.FileInformation.Name">
            <summary>
                The name and extension of the file.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.FileInformation.Url">
            <summary>
                The URL for the file attachment or the path for the location of the file attachment. If name is included, can just
                be the path. If name is not included, must include the filename and extension.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberImageRequest">
            <summary>
                Represents a request to send an image message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.Data">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.Image">
            <summary>
               The file information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.Viber.ViberMessageCategory">
            <summary>
                Represents a category tag for Viber messages.
            </summary>
        </member>
        <member name="F:Vonage.Messages.Viber.ViberMessageCategory.Transaction">
            <summary>
             Transaction.
            </summary>
        </member>
        <member name="F:Vonage.Messages.Viber.ViberMessageCategory.Promotion">
            <summary>
            Promotion.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberRequestData">
            <summary>
                Represents Viber-specific information.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.Action">
            <summary>
                The node for Viber action buttons.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.Category">
            <summary>
                The use of different category tags enables the business to send messages for
                different use cases. For Viber Service Messages the first message sent from a
                business to a user must be personal, informative and a targeted message - not promotional.
                By default Vonage sends the transaction category to Viber Service Messages.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.Duration">
            <summary>
                The duration of the video in seconds.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.FileSize">
            <summary>
                The file size of the video in MB.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.TTL">
            <summary>
                Set the time-to-live of message to be delivered in seconds. i.e. if the
                message is not delivered in 600 seconds then delete the message.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.Type">
            <summary>
                Viber-specific type definition. To use "template", please contact your
                Vonage Account Manager to setup your templates.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberTextRequest">
            <summary>
                Represents a request to send a text message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.Data">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.Text">
            <summary>
                The text of message to send; limited to 640 characters, including unicode.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.Viber.ViberVideoRequest">
            <summary>
                Represents a request to send a video message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.Data">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.To">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.Video">
            <summary>
                The video information of the request.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberVideoRequest.VideoInformation">
            <summary>
                Represents the video information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.VideoInformation.Caption">
            <summary>
                Text caption to accompany message.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.VideoInformation.ThumbUrl">
            <summary>
                URL to an image file for a thumbnail preview of the video.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.VideoInformation.Url">
            <summary>
                Publicly accessible URL of the video attachment. Supports file types .mp4 and .3gpp.
                Only supports video codec H.264 and audio codec AAC.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.MessageWebhookResponse">
            <summary>
            Represents a webhook response for Messages.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Audio">
            <summary>
            Channel specific metadata for Audio.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Channel">
            <summary>
            The channel the message came in on.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.ClientReference">
            <summary>
            Client reference of up to 100 characters. The reference will be present in every message status.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Context">
            <summary>
            This is only present for the Inbound Message where the user is quoting another message. It provides information about the quoted message and/or the product message being responded to.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.File">
            <summary>
            Channel specific metadata for File.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.From">
            <summary>
            The phone number of the message sender in the E.164 format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000. For SMS in certain localities alpha-numeric sender id's will work as well, see  <see href="https://developer.vonage.com/en/messaging/sms/guides/country-specific-features#country-specific-features">Global Messaging</see> for more details.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Image">
            <summary>
            Channel specific metadata for Image.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Location">
            <summary>
            Channel specific metadata for Location.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.MessageType">
            <summary>
            The type of message to send. You must provide text in this field.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.MessageUuid">
            <summary>
            The UUID of the message.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Order">
            <summary>
            Channel specific metadata for Order.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Profile">
            <summary>
            Represents the profile details.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.ProviderMessage">
            <summary>
            A message from the channel provider, which may contain a description, error codes or other information.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Reply">
            <summary>
            Channel specific metadata for Reply.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Sms">
            <summary>
            Channel specific metadata for SMS.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Sticker">
            <summary>
            Channel specific metadata for Sticker.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Text">
            <summary>
            The UTF-8 encoded text of the inbound message.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Timestamp">
            <summary>
            The datetime of when the event occurred, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.To">
            <summary>
            The phone number of the message recipient in the E.164 format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Usage">
            <summary>
            Represents details about message usage.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Vcard">
            <summary>
            Channel specific metadata for Vcard.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Video">
            <summary>
            Channel specific metadata for Video.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.OrderDetails">
            <summary>
            Represents details of an order.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.OrderDetails.CatalogId">
            <summary>
            The ID of the catalog containing the products in this order.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.OrderDetails.ProductItems">
            <summary>
            The list of items.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.ProductItem">
            <summary>
            Represents an item.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ProductItem.Currency">
            <summary>
            The currency code representing the currency for this specific item.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ProductItem.ItemPrice">
            <summary>
            The unit price for this specific item.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ProductItem.ProductRetailerId">
            <summary>
            The ID of the specific product being ordered.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ProductItem.Quantity">
            <summary>
            The quantity ordered for this specific item.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.LocationDetails">
            <summary>
            Represents the location details.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.LocationDetails.Address">
            <summary>
            Address of the location. Only displayed if name is present.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.LocationDetails.Latitude">
            <summary>
            Latitude of the location.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.LocationDetails.Longitude">
            <summary>
            Longitude of the location.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.LocationDetails.Name">
            <summary>
            Name of the location.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.ReplyDetails">
            <summary>
            Represents a Reply details.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ReplyDetails.Description">
            <summary>
            A description that may be added to the interactive options presented (available only on interactive lists).
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ReplyDetails.Id">
            <summary>
            An identifier to help identify the exact interactive message response.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ReplyDetails.Title">
            <summary>
            The title displayed on the interactive option chosen.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.SmsDetails">
            <summary>
            Channel specific metadata for SMS.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.SmsDetails.Keyword">
            <summary>
            The first word of the message sent to uppercase.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.SmsDetails.MessagesCount">
            <summary>
            The number of inbound SMS messages concatenated together to comprise this message. SMS messages are 160 characters, if an inbound message exceeds that size they are concatenated together to forma single message. This number indicates how many messages formed this webhook.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.SmsDetails.TotalCount">
            <summary>
            The number of inbound SMS messages concatenated together to comprise this message. SMS messages are 160 characters, if an inbound message exceeds that size they are concatenated together to forma single message. This number indicates how many messages formed this webhook.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.UsageDetails">
            <summary>
            Represents details about the message usage.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.UsageDetails.Currency">
            <summary>
            The charge currency in ISO 4217 format.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.UsageDetails.Price">
            <summary>
            The charge amount as a stringified number.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.UrlDetails">
            <summary>
            Represents a details with an accessible URL.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.UrlDetails.Url">
            <summary>
            The publicly accessible URL of the attachment.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.ProfileDetails">
            <summary>
            Represents the profile details.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ProfileDetails.Name">
            <summary>
            The WhatsApp number's displayed profile name.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.ContextDetails">
            <summary>
            This is only present for the Inbound Message where the user is quoting another message. It provides information about the quoted message and/or the product message being responded to.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ContextDetails.MessageFrom">
            <summary>
            The phone number of the original sender of the message being quoted in the E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ContextDetails.MessageUuid">
            <summary>
            The UUID of the message being quoted.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ContextDetails.ReferredProduct">
            <summary>
            An object containing details of a product from a product message being quoted or replied to using the 'Message Business' option.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.WhatsAppReferredProduct">
            <summary>
            An object containing details of a product from a product message being quoted or replied to using the 'Message Business' option.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.WhatsAppReferredProduct.CatalogId">
            <summary>
            The ID of the catalog associated with the product from the product message being quoted or replied to using the 'Message Business' option.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.WhatsAppReferredProduct.ProductRetailerId">
            <summary>
            The ID of the product from the product message being quoted or replied to using the 'Message Business' option.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.IWhatsAppMessage">
            <summary>
                Represents a WhatsApp message to be sent by an IMessageClient.
            </summary>
            <remarks>
                This is a 'Marker' interface. It doesn't propose any behavior, and it's sole purpose is to group objects under a
                common denomination.
            </remarks>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.MessageTemplate">
            <summary>
                Represents a message template.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.MessageTemplate.Name">
            <summary>
                The name of the template. For WhatsApp use your WhatsApp namespace (available via Facebook Business Manager),
                followed by a colon : and the name of the template to use.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.MessageTemplate.Parameters">
            <summary>
                The parameters are an array of strings. The first value being {{1}} in the template.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.MessageWhatsApp">
            <summary>
                Represents a WhatsApp configuration.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.MessageWhatsApp.Locale">
            <summary>
                The BCP 47 language of the template. Vonage will translate the BCP 47 format to the WhatsApp equivalent. For
                examples en-GB will be auto-translate to en_GB.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.MessageWhatsApp.Policy">
            <summary>
                Policy for resolving what language template to use. Please note that WhatsApp deprecated the fallback policy in
                January of 2020,
                all requests carrying a fallback policy will be rejected with a 400 error. As of right now the only valid choice is
                deterministic
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.IProductMessageContent">
            <summary>
                Represents a content of a product message.
            </summary>
            <remarks>
                This is a 'Marker' interface. It doesn't propose any behavior, and it's sole purpose is to group objects under a
                common denomination.
            </remarks>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder">
            <summary>
                Represents a builder for a Multiple Items product message content.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.Build">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.Initialize">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithBody(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithCatalogId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithFooter(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithHeader(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithProductRetailer(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithSection(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForHeader">
            <summary>
                Represents a builder that allows to set the Header.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForHeader.WithHeader(System.String)">
            <summary>
                Sets the Header.
            </summary>
            <param name="value">The header.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForBody">
            <summary>
                Represents a builder that allows to set the Body.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForBody.WithBody(System.String)">
            <summary>
                Sets the Body.
            </summary>
            <param name="value">The body.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForFooter">
            <summary>
                Represents a builder that allows to set the Footer.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForFooter.WithFooter(System.String)">
            <summary>
                Sets the Footer.
            </summary>
            <param name="value">The footer.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForCatalog">
            <summary>
                Represents a builder that allows to set the CatalogId.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForCatalog.WithCatalogId(System.String)">
            <summary>
                Sets the CatalogId.
            </summary>
            <param name="value">The catalog Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForMandatorySection">
            <summary>
                Represents a builder that allows to set a Section.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForMandatorySection.WithSection(System.String)">
            <summary>
                Sets a section.
            </summary>
            <param name="value">The section.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForOptionalSection">
            <summary>
                Represents a builder that allows to set a Section.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForProductRetailer">
            <summary>
                Represents a builder that allows to set a product retailer Id to the previous section.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForProductRetailer.WithProductRetailer(System.String)">
            <summary>
                Sets the product retailer Id to the previous section.
            </summary>
            <param name="value">The product retailer Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuildable">
            <summary>
                Represents a builder that allows to build the product message.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuildable.Build">
            <summary>
                Builds the product message using all specified values.
            </summary>
            <returns>The product message.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent">
            <summary>
                Represents the content for Multiple Item product messages.
            </summary>
            <param name="Header">The value of the header text.</param>
            <param name="Body">The value of the body text.</param>
            <param name="Footer">The value of the footer text.</param>
            <param name="Action">Contains data about the product displayed in the message.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.#ctor(Vonage.Messages.WhatsApp.ProductMessages.TextSection,Vonage.Messages.WhatsApp.ProductMessages.TextSection,Vonage.Common.Monads.Maybe{Vonage.Messages.WhatsApp.ProductMessages.TextSection},Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsAction)">
            <summary>
                Represents the content for Multiple Item product messages.
            </summary>
            <param name="Header">The value of the header text.</param>
            <param name="Body">The value of the body text.</param>
            <param name="Footer">The value of the footer text.</param>
            <param name="Action">Contains data about the product displayed in the message.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.Header">
            <summary>The value of the header text.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.Body">
            <summary>The value of the body text.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.Footer">
            <summary>The value of the footer text.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.Action">
            <summary>Contains data about the product displayed in the message.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.Type">
            <summary>
                The content type.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsAction">
            <summary>
                Represents the action for a Multiple Item product message.
            </summary>
            <param name="CatalogId">The catalog Id.</param>
            <param name="Sections">The section.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsAction.#ctor(System.String,Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.Section[])">
            <summary>
                Represents the action for a Multiple Item product message.
            </summary>
            <param name="CatalogId">The catalog Id.</param>
            <param name="Sections">The section.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsAction.CatalogId">
            <summary>The catalog Id.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsAction.Sections">
            <summary>The section.</summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.Section">
            <summary>
                Represents a section of items grouped by title.
            </summary>
            <param name="Title">The title of the sections.</param>
            <param name="ProductItems">The product items of the section.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.Section.#ctor(System.String,Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.ProductItem[])">
            <summary>
                Represents a section of items grouped by title.
            </summary>
            <param name="Title">The title of the sections.</param>
            <param name="ProductItems">The product items of the section.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.Section.Title">
            <summary>The title of the sections.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.Section.ProductItems">
            <summary>The product items of the section.</summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.ProductItem">
            <summary>
                Represents a product item.
            </summary>
            <param name="ProductRetailerId">The product retailer Id.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.ProductItem.#ctor(System.String)">
            <summary>
                Represents a product item.
            </summary>
            <param name="ProductRetailerId">The product retailer Id.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.ProductItem.ProductRetailerId">
            <summary>The product retailer Id.</summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.ProductMessage`1">
            <summary>
                Represents a product message. Product messages provide a way for businesses to showcase and share products and
                services with customers via a WhatsApp chat, and for those customers to browse items, add them to a cart, and
                submit an order without leaving the chat.
            </summary>
            <param name="Details">Contains the details of the message.</param>
            <typeparam name="T">Type of the content.</typeparam>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.ProductMessage`1.#ctor(`0)">
            <summary>
                Represents a product message. Product messages provide a way for businesses to showcase and share products and
                services with customers via a WhatsApp chat, and for those customers to browse items, add them to a cart, and
                submit an order without leaving the chat.
            </summary>
            <param name="Details">Contains the details of the message.</param>
            <typeparam name="T">Type of the content.</typeparam>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.ProductMessage`1.Details">
            <summary>Contains the details of the message.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.ProductMessage`1.Type">
            <summary>
                The type of the product message.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder">
            <summary>
                Represents a builder for Single Items product message content.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.Build">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.Initialize">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.WithBody(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.WithCatalogId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.WithFooter(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.WithProductRetailerId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IOptionalBuilderForBody">
            <summary>
                Represents a builder that allows to set the Body.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IOptionalBuilderForBody.WithBody(System.String)">
            <summary>
                Sets the Body text.
            </summary>
            <param name="value">The Body.</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForFooter">
            <summary>
                Represents a builder that allows to set the Footer.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForFooter.WithFooter(System.String)">
            <summary>
                Sets the Footer text.
            </summary>
            <param name="value">The Footer.</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForCatalog">
            <summary>
                Represents a builder that allows to set the Catalog.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForCatalog.WithCatalogId(System.String)">
            <summary>
                Sets the CatalogId.
            </summary>
            <param name="value">The catalog Id.</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForProductRetailer">
            <summary>
                Represents a builder that allows to set a Product Retailer.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForProductRetailer.WithProductRetailerId(System.String)">
            <summary>
                Sets the product retailer Id.
            </summary>
            <param name="value">The product retailer Id.</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuildable">
            <summary>
                Represents a builder that allows to build the product message.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuildable.Build">
            <summary>
                Builds the product message using all specified values.
            </summary>
            <returns>The product message.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent">
            <summary>
                Represents the content for Single Item product messages.
            </summary>
            <param name="Body">The value of the body text.</param>
            <param name="Footer">The value of the footer text.</param>
            <param name="Action">Contains data about the product displayed in the message.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent.#ctor(Vonage.Common.Monads.Maybe{Vonage.Messages.WhatsApp.ProductMessages.TextSection},Vonage.Common.Monads.Maybe{Vonage.Messages.WhatsApp.ProductMessages.TextSection},Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemAction)">
            <summary>
                Represents the content for Single Item product messages.
            </summary>
            <param name="Body">The value of the body text.</param>
            <param name="Footer">The value of the footer text.</param>
            <param name="Action">Contains data about the product displayed in the message.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent.Body">
            <summary>The value of the body text.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent.Footer">
            <summary>The value of the footer text.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent.Action">
            <summary>Contains data about the product displayed in the message.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent.Type">
            <summary>
                The content type.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemAction">
            <summary>
                Represents the action for a Single Item product message.
            </summary>
            <param name="CatalogId">The catalog Id.</param>
            <param name="ProductRetailerId">The product retailer Id.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemAction.#ctor(System.String,System.String)">
            <summary>
                Represents the action for a Single Item product message.
            </summary>
            <param name="CatalogId">The catalog Id.</param>
            <param name="ProductRetailerId">The product retailer Id.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemAction.CatalogId">
            <summary>The catalog Id.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemAction.ProductRetailerId">
            <summary>The product retailer Id.</summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.TextSection">
            <summary>
                Represents a text section.
            </summary>
            <param name="Text">The text of the section.</param>
            <param name="Type">The type of the section.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.TextSection.#ctor(System.String,System.String)">
            <summary>
                Represents a text section.
            </summary>
            <param name="Text">The text of the section.</param>
            <param name="Type">The type of the section.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.TextSection.Text">
            <summary>The text of the section.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.TextSection.Type">
            <summary>The type of the section.</summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppAudioRequest">
            <summary>
                Represents a request to send an audio message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.Audio">
            <summary>
                The audio attachment. Supports.aac, .m4a, .amr, .mp3 and.opus
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppCustomRequest">
            <summary>
                Represents a request to send a custom message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.Custom">
            <summary>
                A custom payload, which is passed directly to WhatsApp for certain features such as
                templates and interactive messages.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppFileRequest">
            <summary>
                Represents a request to send a file message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.File">
            <summary>
                The file information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppImageRequest">
            <summary>
                Represents a request to send an image message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.Image">
            <summary>
               The file information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest">
            <summary>
                Represents a request to send Multiple Items product message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.Custom">
            <summary>
                The custom content.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest">
            <summary>
                Represents a request to send Single Item product message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.Custom">
            <summary>
                The custom content.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1">
            <summary>
                Represents a request to send a sticker message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.Sticker">
            <summary>
                The sticker content.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.IStickerContent">
            <summary>
                Represents a sticker content.
            </summary>
            <remarks>
                This is a 'Marker' interface. It doesn't propose any behavior, and it's sole purpose is to group objects under a
                common denomination.
            </remarks>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.UrlSticker">
            <summary>
                Represents a WhatsApp sticker with a URL content.
            </summary>
            <param name="Url">
                The publicly accessible URL of the sticker image. Supported types are: .webp. See the documentation
                for more information on sending stickers.
            </param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.UrlSticker.#ctor(System.String)">
            <summary>
                Represents a WhatsApp sticker with a URL content.
            </summary>
            <param name="Url">
                The publicly accessible URL of the sticker image. Supported types are: .webp. See the documentation
                for more information on sending stickers.
            </param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.UrlSticker.Url">
            <summary>
                The publicly accessible URL of the sticker image. Supported types are: .webp. See the documentation
                for more information on sending stickers.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.IdSticker">
            <summary>
                Represents a WhatsApp sticker with a Guid content.
            </summary>
            <param name="Id">
                The id of the sticker in relation to a specific WhatsApp deployment. See the documentation for more
                information on sending stickers.
            </param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.IdSticker.#ctor(System.Guid)">
            <summary>
                Represents a WhatsApp sticker with a Guid content.
            </summary>
            <param name="Id">
                The id of the sticker in relation to a specific WhatsApp deployment. See the documentation for more
                information on sending stickers.
            </param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.IdSticker.Id">
            <summary>
                The id of the sticker in relation to a specific WhatsApp deployment. See the documentation for more
                information on sending stickers.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest">
            <summary>
                Represents a request to send a template message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.Template">
            <summary>
                The message template.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.To">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.WhatsApp">
            <summary>
                The WhatsApp configuration.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppTextRequest">
            <summary>
                Represents a request to send a text message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.Text">
            <summary>
                The text of message to send; limited to 4096 characters, including unicode.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppVideoRequest">
            <summary>
                Represents a request to send a video message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.To">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.Video">
            <summary>
                The video information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Msisdn">
            <summary>
            The number the message was sent to. Numbers are specified in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.To">
            <summary>
            The SenderID you set in from in your request.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.NetworkCode">
            <summary>
            The Mobile Country Code Mobile Network Code (MCCMNC) of the carrier this phone number is registered with.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.MessageId">
            <summary>
            The Vonage ID for this message.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Price">
            <summary>
            The cost of the message
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.StringStatus">
            <summary>
            A code that explains where the message is in the delivery process.
            Will be one of: delivered, expired, failed, rejected, accepted, buffered or unknown
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Status">
            <summary>
            A code that explains where the message is in the delivery process.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Scts">
            <summary>
            When the DLR was received from the carrier in the following format YYMMDDHHMM. For example, 2001011400 is at 2020-01-01 14:00
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.ErrorCode">
            <summary>
            The status of the request. Will be a non 0 value if there has been an error, or if the status is unknown. 
            See the Delivery Receipt documentation for more details: https://developer.nexmo.com/messaging/sms/guides/delivery-receipts#dlr-error-codes
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.MessageTimestamp">
            <summary>
            The time when Vonage started to push this Delivery Receipt to your webhook endpoint.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.ApiKey">
            <summary>
            The API key that sent the SMS. This is useful when multiple accounts are sending webhooks to the same endpoint.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Timestamp">
            <summary>
            A timestamp in Unix (seconds since the epoch) format. Only included if you have signatures enabled
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Nonce">
            <summary>
            A random string to be used when calculating the signature. Only included if you have signatures enabled
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Sig">
            <summary>
            The signature to enable verification of the source of this webhook. 
            Please see the developer documentation for validating signatures for more information, 
            or use one of our published SDKs. Only included if you have signatures enabled
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.ClientRef">
            <summary>
            If the client-ref is set when the SMS is sent, it will be included in the delivery receipt
            </summary>
        </member>
        <member name="M:Vonage.Messaging.ISmsClient.SendAnSmsAsync(Vonage.Messaging.SendSmsRequest,Vonage.Request.Credentials)">
            <summary>
            Send an outbound SMS from your Vonage account
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Messaging.ISmsClient.SendAnSms(Vonage.Messaging.SendSmsRequest,Vonage.Request.Credentials)">
            <summary>
            Send an outbound SMS from your Vonage account
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Messaging.ISmsClient.SendAnSmsAsync(System.String,System.String,System.String,Vonage.Messaging.SmsType,Vonage.Request.Credentials)">
            <summary>
            Send an outbound SMS from your Vonage account
            </summary>
            <param name="from">The name or number the message should be sent from.</param>
            <param name="to">The number that the message should be sent to. Numbers are specified in E.164 format.</param>
            <param name="text">The body of the message being sent.</param>
            <param name="type">The format of the message body.</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Messaging.ISmsClient.SendAnSms(System.String,System.String,System.String,Vonage.Messaging.SmsType,Vonage.Request.Credentials)">
            <summary>
            Send an outbound SMS from your Vonage account
            </summary>
            <param name="from">The name or number the message should be sent from.</param>
            <param name="to">The number that the message should be sent to. Numbers are specified in E.164 format.</param>
            <param name="text">The body of the message being sent.</param>
            <param name="type">The format of the message body.</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.AccountRef">
            <summary>
            An optional string used to identify separate accounts using the SMS endpoint for billing purposes. 
            To use this feature, please email support@nexmo.com
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Body">
            <summary>
            Hex encoded binary data. Depends on type parameter having the value binary.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Callback">
            <summary>
            The webhook endpoint the delivery receipt for this sms is sent to. 
            This parameter overrides the webhook endpoint you set in Dashboard.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.ClientRef">
            <summary>
            You can optionally include your own reference of up to 40 characters.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.ContentId">
            <summary>
            A string parameter that satisfies regulatory requirements when sending an SMS to specific countries.
            For more information please refer to the <see href="https://help.nexmo.com/hc/en-us/articles/115011781468">Country-Specific Outbound SMS Features</see>
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.EntityId">
            <summary>
            A string parameter that satisfies regulatory requirements when sending an SMS to specific countries.
            For more information please refer to the <see href="https://help.nexmo.com/hc/en-us/articles/115011781468">Country-Specific Outbound SMS Features</see>
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.From">
            <summary>
            The name or number the message should be sent from. 
            Alphanumeric senderID's are not supported in all countries, 
            see Global Messaging for more details. If alphanumeric, 
            spaces will be ignored. Numbers are specified in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.MessageClass">
            <summary>
             The Data Coding Scheme value of the message
             Must be one of: 0, 1, 2 or 3
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.ProtocolId">
            <summary>
            The value of the protocol identifier to use. Ensure that the value is aligned with udh.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.StatusReportReq">
            <summary>
            Boolean indicating if you like to receive a Delivery Receipt.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Text">
            <summary>
            The body of the message being sent. If your message contains characters 
            that can be encoded according to the GSM Standard and Extended tables then you can set the type to text. 
            If your message contains characters outside this range, then you will need to set the type to unicode.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.To">
            <summary>
            The number that the message should be sent to. Numbers are specified in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Ttl">
            <summary>
            The duration in milliseconds the delivery of an SMS will be attempted.
            By default Vonage attempt delivery for 72 hours, 
            however the maximum effective value depends on the operator and is typically 24 - 48 hours.
            We recommend this value should be kept at its default or at least 30 minutes.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Type">
            <summary>
            The format of the message body         
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Udh">
            <summary>
            Your custom Hex encoded User Data Header. Depends on type parameter having the value binary.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsResponse.MessageCount">
            <summary>
            The amount of messages in the request
            </summary>
        </member>
        <member name="M:Vonage.Messaging.SmsClient.SendAnSmsAsync(Vonage.Messaging.SendSmsRequest,Vonage.Request.Credentials)">
            <summary>
            Send a SMS message.
            </summary>
            <param name="request">The SMS message request</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Messaging.VonageSmsResponseException">Thrown when the status of a message is non-zero or response is empty</exception>
            <returns></returns>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.AccountRef">
            <summary>
            If a client-ref was included when sending the SMS, this field will be included and hold the value that was sent.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.ErrorText">
            <summary>
            The status of the message. See Troubleshooting Failed SMS.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.MessageId">
            <summary>
            The ID of the message
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.MessagePrice">
            <summary>
            The cost of the message
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.Network">
            <summary>
            The ID of the network of the recipient
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.RemainingBalance">
            <summary>
            Your remaining balance
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.Status">
            <summary>
            The status of the message. See: https://developer.nexmo.com/messaging/sms/guides/troubleshooting-sms
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.To">
            <summary>
            The number the message was sent to. Numbers are specified in E.164 format.
            </summary>
        </member>
        <member name="T:Vonage.Messaging.SmsType">
            <summary>
            Represents the type of message.
            </summary>
        </member>
        <member name="F:Vonage.Messaging.SmsType.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:Vonage.Messaging.SmsType.Binary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Vonage.Messaging.SmsType.Unicode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsAsynchronousResponse.Number">
            <summary>
            The number in your request
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsAsynchronousResponse.RemainingBalance">
            <summary>
            Your account balance in EUR after this request. Not returned with Number Insight Advanced Async API.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsAsynchronousResponse.RequestPrice">
            <summary>
            If there is an internal lookup error, the refund_price will reflect the lookup price. 
            If cnam is requested for a non-US number the refund_price will reflect the cnam price.
            If both of these conditions occur, refund_price is the sum of the lookup price and cnam price.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsResponse.LookupOutcome">
            <summary>
            Shows if all information about a phone number has been returned.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsResponse.LookupOutcomeMessage">
            <summary>
            Shows if all information about a phone number has been returned.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsResponse.ValidNumber">
            <summary>
            Does number exist. unknown means the number could not be validated. 
            valid means the number is valid. not_valid means the number is not valid. 
            inferred_not_valid means that the number could not be determined as valid or invalid 
            via an external system and the best guess is that the number is invalid. 
            This is applicable to mobile numbers only.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsResponse.Reachable">
            <summary>
            Can you call number now. This is applicable to mobile numbers only.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsResponse.RealTimeData">
            <summary>
            Real time data about the number
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedNumberInsightAsynchronousRequest.Callback">
            <summary>
            The callback URL
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedNumberInsightRequest.Ip">
            <summary>
            This parameter is deprecated as we are no longer able to retrieve reliable IP data globally from carriers.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.StatusMessage">
            <summary>
            The status description of your request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.InternationalFormatNumber">
            <summary>
            The number in your request in international format.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.NationalFormatNumber">
            <summary>
            The number in your request in the format used by the country the number belongs to.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.CountryCode">
            <summary>
            Two character country code for number. This is in ISO 3166-1 alpha-2 format.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.CountryCodeIso3">
            <summary>
            Three character country code for number. This is in ISO 3166-1 alpha-3 format.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.CountryName">
            <summary>
            The full name of the country that number is registered in.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.CountryPrefix">
            <summary>
            The numeric prefix for the country that number is registered in.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicNumberInsightRequest.Number">
            <summary>
            A single phone number that you need insight about in national or international format.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicNumberInsightRequest.Country">
            <summary>
            If a number does not have a country code or is uncertain, set the two-character country code. 
            This code must be in ISO 3166-1 alpha-2 format and in upper case. For example, GB or US. 
            If you set country and number is already in E.164 format, country must match the country code in number.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.CallerId.CallerType">
            <summary>
            The value will be business if the owner of a phone number is a business. 
            If the owner is an individual the value will be consumer. 
            The value will be unknown if this information is not available. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.CallerId.CallerName">
            <summary>
            Full name of the person or business who owns the phone number. 
            Unknown if this information is not available. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.CallerId.FirstName">
            <summary>
            First name of the person who owns the phone number if the owner is an individual. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.CallerId.LastName">
            <summary>
            Last name of the person who owns the phone number if the owner is an individual. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Carrier.NetworkCode">
            <summary>
            The https://en.wikipedia.org/wiki/Mobile_country_code for the carriernumber is associated with.
            Unreal numbers are marked asunknown and the request is rejected altogether if the number is impossible according to the E.164 guidelines.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Carrier.Name">
            <summary>
            The full name of the carrier that number is associated with.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Carrier.Country">
            <summary>
            The country that number is associated with. This is in ISO 3166-1 alpha-2 format.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Carrier.NetworkType">
            <summary>
            The type of network that number is associated with.
            </summary>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightBasicAsync(Vonage.NumberInsights.BasicNumberInsightRequest,Vonage.Request.Credentials)">
            <summary>
            Provides basic number insight information about a number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightStandardAsync(Vonage.NumberInsights.StandardNumberInsightRequest,Vonage.Request.Credentials)">
            <summary>
            Provides standard number insight information about a number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightAdvancedAsync(Vonage.NumberInsights.AdvancedNumberInsightRequest,Vonage.Request.Credentials)">
            <summary>
            Provides advanced number insight information about a number synchronously, in the same way that the basic and standard endpoints do.
            Vonage recommends accessing the Advanced API asynchronously
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightAsynchronousAsync(Vonage.NumberInsights.AdvancedNumberInsightAsynchronousRequest,Vonage.Request.Credentials)">
            <summary>
            Provides advanced number insight number information asynchronously using the URL specified in the callback parameter. 
            Vonage recommends asynchronous use of the Number Insight Advanced API, to avoid timeouts.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightBasic(Vonage.NumberInsights.BasicNumberInsightRequest,Vonage.Request.Credentials)">
            <summary>
            Provides basic number insight information about a number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightStandard(Vonage.NumberInsights.StandardNumberInsightRequest,Vonage.Request.Credentials)">
            <summary>
            Provides standard number insight information about a number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightAdvanced(Vonage.NumberInsights.AdvancedNumberInsightRequest,Vonage.Request.Credentials)">
            <summary>
            Provides advanced number insight information about a number synchronously, in the same way that the basic and standard endpoints do.
            Vonage recommends accessing the Advanced API asynchronously
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightAsynchronous(Vonage.NumberInsights.AdvancedNumberInsightAsynchronousRequest,Vonage.Request.Credentials)">
            <summary>
            Provides advanced number insight number information asynchronously using the URL specified in the callback parameter. 
            Vonage recommends asynchronous use of the Number Insight Advanced API, to avoid timeouts.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.NumberInsights.NumberInsightResponseBase.Status">
            <summary>
            Status of the Number Insight Request
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.NumberInsightResponseBase.RequestId">
            <summary>
            The unique identifier for your request. This is a alphanumeric string up to 40 characters.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.RealTimeData.ActiveStatus">
            <summary>
            Whether the end-user's phone number is active within an operator's network.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.RealTimeData.HandsetStatus">
            <summary>
            Whether the end-user's handset is turned on or off.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Roaming.Status">
            <summary>
            Is number outside its home carrier network.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Roaming.RoamingCountryCode">
            <summary>
            If number is roaming, this is the code of the country number is roaming in.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Roaming.RoamingNetworkCode">
            <summary>
            If number is roaming, this is the id of the carrier network number is roaming in.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Roaming.RoamingNetworkName">
            <summary>
            If number is roaming, this is the name of the carrier network number is roaming in.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.RequestPrice">
            <summary>
            The amount in EUR charged to your account.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.RefundPrice">
            <summary>
            If there is an internal lookup error, the refund_price will reflect the lookup price. 
            If cnam is requested for a non-US number the refund_price will reflect the cnam price. 
            If both of these conditions occur, refund_price is the sum of the lookup price and cnam price.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.RemainingBalance">
            <summary>
            Your account balance in EUR after this request. Not returned with Number Insight Advanced Async API.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.CurrentCarrier">
            <summary>
            Information about the network number is currently connected to.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.OriginalCarrier">
            <summary>
            Information about the network number is currently connected to.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.Ported">
            <summary>
            If the user has changed carrier for number. 
            The assumed status means that the information supplier has 
            replied to the request but has not said explicitly that the number is ported.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.Roaming">
            <summary>
            Information about the roaming status for number. This is applicable to mobile numbers only.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.CallerIdentity">
            <summary>
            Information about the network number is currently connected to.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.CallerName">
            <summary>
            Full name of the person or business who owns the phone number. 
            Unknown if this information is not available. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.LastName">
            <summary>
            Last name of the person who owns the phone number if the owner is an individual. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.FirstName">
            <summary>
            First name of the person who owns the phone number if the owner is an individual. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.CallerType">
            <summary>
            The value will be business if the owner of a phone number is a business. 
            If the owner is an individual the value will be consumer. 
            The value will be unknown if this information is not available. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardNumberInsightRequest.Cnam">
            <summary>
            Indicates if the name of the person who owns the phone number should be looked up and returned in the response. 
            Set to true to receive phone number owner name in the response. 
            This features is available for US numbers only and incurs an additional charge.
            </summary>
        </member>
        <member name="T:Vonage.Numbers.INumbersClient">
            <summary>
            Represents a client for NumbersApi.
            </summary>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.GetOwnedNumbersAsync(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieve all the inbound numbers associated with your Vonage account.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.GetAvailableNumbersAsync(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieve inbound numbers that are available for the specified country.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.BuyANumberAsync(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <summary>
            Request to purchase a specific inbound number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.CancelANumberAsync(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <summary>
            Cancel your subscription for a specific inbound number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.UpdateANumberAsync(Vonage.Numbers.UpdateNumberRequest,Vonage.Request.Credentials)">
            <summary>
            Change the behaviour of a number that you own.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.TransferANumberAsync(Vonage.Numbers.NumberTransferRequest,System.String,Vonage.Request.Credentials)">
            <summary>
            Transfer a number that you own to a subaccount.
            </summary>
            <param name="request"></param>
            <param name="apiKey"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.GetOwnedNumbers(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieve all the inbound numbers associated with your Vonage account.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.GetAvailableNumbers(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieve inbound numbers that are available for the specified country.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.BuyANumber(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <summary>
            Request to purchase a specific inbound number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.CancelANumber(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <summary>
            Cancel your subscription for a specific inbound number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.UpdateANumber(Vonage.Numbers.UpdateNumberRequest,Vonage.Request.Credentials)">
            <summary>
            Change the behaviour of a number that you own.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.TransferANumber(Vonage.Numbers.NumberTransferRequest,System.String,Vonage.Request.Credentials)">
            <summary>
            Transfer a number that you own to a subaccount.
            </summary>
            <param name="request"></param>
            <param name="apiKey"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Numbers.Number.Cost">
            <summary>
            The monthly rental cost for this number, in Euros
            </summary>
        </member>
        <member name="P:Vonage.Numbers.Number.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.Number.Features">
            <summary>
            The capabilities of the number: SMS or VOICE or SMS,VOICE or SMS,MMS or VOICE,MMS or SMS,MMS,VOICE
            </summary>
        </member>
        <member name="P:Vonage.Numbers.Number.Msisdn">
            <summary>
            An available inbound virtual number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.Number.Type">
            <summary>
            The type of number: landline, landline-toll-free or mobile-lvn
            </summary>
        </member>
        <member name="T:Vonage.Numbers.NumbersClient">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Numbers.NumbersClient.Credentials">
            <summary>
                Gets or sets credentials to be used in further requests.
            </summary>
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.#ctor(Vonage.Request.Credentials)">
            <summary>
                Constructor for NumbersClients.
            </summary>
            <param name="credentials">Credentials to be used in further requests.</param>
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.BuyANumber(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.BuyANumberAsync(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.CancelANumber(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.CancelANumberAsync(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.GetAvailableNumbers(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.GetAvailableNumbersAsync(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.GetOwnedNumbers(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.GetOwnedNumbersAsync(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.TransferANumber(Vonage.Numbers.NumberTransferRequest,System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.TransferANumberAsync(Vonage.Numbers.NumberTransferRequest,System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.UpdateANumber(Vonage.Numbers.UpdateNumberRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.UpdateANumberAsync(Vonage.Numbers.UpdateNumberRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Type">
            <summary>
            Set this parameter to filter the type of number, such as mobile or landline
            Must be one of: landline, mobile-lvn or landline-toll-free
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Pattern">
            <summary>
            The number pattern you want to search for. Use in conjunction with search_pattern.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.SearchPattern">
            <summary>
            The strategy you want to use for matching
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Features">
            <summary>
            Available features are SMS, VOICE and MMS. To look for numbers that support multiple features, use a comma-separated value: SMS,MMS,VOICE.
            Must be one of: SMS, VOICE, SMS,VOICE, MMS, SMS,MMS, VOICE,MMS or SMS,MMS,VOICE
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Size">
            <summary>
            Page size
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Index">
            <summary>
            Page index
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.HasApplication">
            <summary>
            Set this optional field to true to restrict your results to numbers associated with an Application (any Application). 
            Set to false to find all numbers not associated with any Application. Omit the field to avoid filtering on whether or not the number is assigned to an Application.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumbersSearchResponse.Count">
            <summary>
            The total amount of numbers available in the pool.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumbersSearchResponse.Numbers">
            <summary>
            A paginated array of available numbers and their details
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransactionRequest.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransactionRequest.Msisdn">
            <summary>
            An available inbound virtual number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransactionRequest.TargetApiKey">
            <summary>
            If you’d like to perform an action on a subaccount, provide the 
            api_key of that account here. If you’d like to perform an action on your own account, 
            you do not need to provide this field.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransactionResponse.ErrorCode">
            <summary>
            The status code of the response. 200 indicates a successful request.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransactionResponse.ErrorCodeLabel">
            <summary>
            The status code description
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferRequest.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferRequest.Number">
            <summary>
            An owned virtual number to be transferred.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferRequest.From">
            <summary>
            The account that currently holds the number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferRequest.To">
            <summary>
            The subaccount to transfer the number to.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferResponse.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferResponse.Number">
            <summary>
            An owned virtual number to transfer.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferResponse.From">
            <summary>
            The account that currently holds the number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferResponse.To">
            <summary>
            The subaccount to transfer the number to.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferResponse.MasterAccountId">
            <summary>
            The master account ID.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.Msisdn">
            <summary>
            An available inbound virtual number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.AppId">
            <summary>
            The Application that will handle inbound traffic to this number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.MoHttpUrl">
            <summary>
            An URL-encoded URI to the webhook endpoint that handles inbound messages. 
            Your webhook endpoint must be active before you make this request. 
            Vonage makes a GET request to the endpoint and checks that it returns a 200 OK response. 
            Set this parameter's value to an empty string to remove the webhook.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.MoSmppSysType">
            <summary>
            The associated system type for your SMPP client
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.VoiceCallbackType">
            <summary>
            Specify whether inbound voice calls on your number are forwarded to a SIP or a telephone number. 
            This must be used with the voiceCallbackValue parameter. 
            If set, sip or tel are prioritized over the Voice capability in your Application. 
            Note: The app value is deprecated and will be removed in future.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.VoiceCallbackValue">
            <summary>
            A SIP URI or telephone number. Must be used with the voiceCallbackType parameter.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.VoiceStatusCallback">
            <summary>
            A webhook URI for Vonage to send a request to when a call ends
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.CountryCode">
            <summary>
            Two letter country code.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.CountryName">
            <summary>
            Readable country name.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.CountryDisplayName">
            <summary>
            Readable country name.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.Currency">
            <summary>
            The currency that your account is being billed in (by default Euros—EUR). 
            Can change in the Dashboard to US Dollars—USD.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.DefaultPrice">
            <summary>
            The default price.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.DialingPrefix">
            <summary>
            The dialling prefix.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.Networks">
            <summary>
            An array of network objects
            </summary>
        </member>
        <member name="M:Vonage.Pricing.IPricingClient.RetrievePricingCountryAsync(System.String,Vonage.Pricing.PricingCountryRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieves the pricing information based on the specified country.
            </summary>
            <param name="type">The type of service you wish to retrieve data about: 
            either sms, sms-transit or voice.</param>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Pricing.IPricingClient.RetrievePricingAllCountriesAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            Retrieves the pricing information for all countries.
            </summary>
            <param name="type">The type of service you wish to retrieve data about: 
            either sms, sms-transit or voice.</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Pricing.IPricingClient.RetrievePrefixPricingAsync(System.String,Vonage.Pricing.PricingPrefixRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieves the pricing information based on the dialing prefix.
            </summary>
            <param name="type">The type of service you wish to retrieve data about: 
            either sms, sms-transit or voice.</param>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Pricing.IPricingClient.RetrievePricingCountry(System.String,Vonage.Pricing.PricingCountryRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieves the pricing information based on the specified country.
            </summary>
            <param name="type">The type of service you wish to retrieve data about: 
            either sms, sms-transit or voice.</param>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Pricing.IPricingClient.RetrievePricingAllCountries(System.String,Vonage.Request.Credentials)">
            <summary>
            Retrieves the pricing information for all countries.
            </summary>
            <param name="type">The type of service you wish to retrieve data about: 
            either sms, sms-transit or voice.</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Pricing.IPricingClient.RetrievePrefixPricing(System.String,Vonage.Pricing.PricingPrefixRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieves the pricing information based on the dialing prefix.
            </summary>
            <param name="type">The type of service you wish to retrieve data about: 
            either sms, sms-transit or voice.</param>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Pricing.Network.Type">
            <summary>
            The type of network: mobile or landline.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.Price">
            <summary>
            The cost to send a message or make a call to this network
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.Currency">
            <summary>
            The currency used for prices for this network.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.Mcc">
            <summary>
            The Mobile Country Code of the operator.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.Mnc">
            <summary>
            The Mobile Network Code of the operator.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.NetworkCode">
            <summary>
            The Mobile Country Code and Mobile Network Code combined to give a unique reference for the operator.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.NetworkName">
            <summary>
            The company/organisational name of the operator.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.PricingCountryRequest.Country">
            <summary>
            A two letter country code. For example, CA.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.PricingPrefixRequest.Prefix">
            <summary>
            The numerical dialing prefix to look up pricing for. Examples include 44, 1 and so on.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.PricingResult.Count">
            <summary>
            The number of countries retrieved.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.PricingResult.Countries">
            <summary>
            The code for the country you looked up: e.g. GB, US, BR, RU.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.BulkEvent">
            <summary>
                Represents a Proactive Connect Event.
            </summary>
            <param name="OccurredAt">When the event occurred.</param>
            <param name="Type">The type of event.</param>
            <param name="Id">The event Id.</param>
            <param name="JobId">The job Id.</param>
            <param name="SourceContext">The source context.</param>
            <param name="ActionId">The action Id.</param>
            <param name="RunId">The run Id.</param>
            <param name="RecipientId">The recipient Id.</param>
            <param name="Data">The underlying data.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.BulkEvent.#ctor(System.DateTimeOffset,Vonage.ProactiveConnect.Events.BulkEventType,System.Guid,System.Guid,System.String,System.Guid,System.Guid,System.String,System.Object)">
            <summary>
                Represents a Proactive Connect Event.
            </summary>
            <param name="OccurredAt">When the event occurred.</param>
            <param name="Type">The type of event.</param>
            <param name="Id">The event Id.</param>
            <param name="JobId">The job Id.</param>
            <param name="SourceContext">The source context.</param>
            <param name="ActionId">The action Id.</param>
            <param name="RunId">The run Id.</param>
            <param name="RecipientId">The recipient Id.</param>
            <param name="Data">The underlying data.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.OccurredAt">
            <summary>When the event occurred.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.Type">
            <summary>The type of event.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.Id">
            <summary>The event Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.JobId">
            <summary>The job Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.SourceContext">
            <summary>The source context.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.ActionId">
            <summary>The action Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.RunId">
            <summary>The run Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.RecipientId">
            <summary>The recipient Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.Data">
            <summary>The underlying data.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.GetEvents.EmbeddedEvents">
            <summary>
                Represents a wrapper for events.
            </summary>
            <param name="Events">The retrieved events.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.EmbeddedEvents.#ctor(System.Collections.Generic.IEnumerable{Vonage.ProactiveConnect.Events.BulkEvent})">
            <summary>
                Represents a wrapper for events.
            </summary>
            <param name="Events">The retrieved events.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.GetEvents.EmbeddedEvents.Events">
            <summary>The retrieved events.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest">
            <summary>
                Represents a request to retrieve all events.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.Order">
            <summary>
                Defines the data ordering.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.Page">
            <summary>
                Page of results to jump to.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.PageSize">
            <summary>
                Number of results per page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequestBuilder.OrderByDescending">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequestBuilder.WithPage(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForPage">
            <summary>
                Represents a builder for Page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForPage.WithPage(System.Int32)">
            <summary>
                Sets the Page.
            </summary>
            <param name="value">The page.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForPageSize">
            <summary>
                Represents a builder for PageSize.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForPageSize.WithPageSize(System.Int32)">
            <summary>
                Sets the PageSize on the builder.
            </summary>
            <param name="value">The page size.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForOrder">
            <summary>
                Represents a builder for Order.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForOrder.OrderByDescending">
            <summary>
                Sets the order to Descending on the builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.FetchOrder">
            <summary>
                Defines the ordering when fetching data.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.FetchOrder.Ascending">
            <summary>
                The ascending order.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.FetchOrder.Descending">
            <summary>
                The descending order.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.IProactiveConnectClient">
            <summary>
                Exposes Proactive Connect features.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.ClearListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest})">
            <summary>
                Clears a list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.CreateItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest})">
            <summary>
                Creates an item.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.CreateListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest})">
            <summary>
                Creates a list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.DeleteItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest})">
            <summary>
                Deletes an item.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.DeleteListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest})">
            <summary>
                Deletes a list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.ExtractItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest})">
            <summary>
                Extracts list items as a CSV format.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.GetEventsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest})">
            <summary>
                Retrieves all events.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.GetItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.GetItem.GetItemRequest})">
            <summary>
                Retrieves an item.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.GetItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest})">
            <summary>
                Retrieves all items of a list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.GetListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.GetList.GetListRequest})">
            <summary>
                Retrieves a single list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.GetListsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest})">
            <summary>
                Retrieves all lists.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.ImportItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest})">
            <summary>
                Imports list items from a CSV file.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.ReplaceItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest})">
            <summary>
                Fetches and replaces all items from datasource.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.UpdateItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest})">
            <summary>
                Updates an item.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.UpdateListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest})">
            <summary>
                Updates a list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest">
            <summary>
                Represents a request to create an item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest.Data">
            <summary>
                Custom data for the item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest.ListId">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequestBuilder.WithCustomData(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.CreateItem.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.CreateItem.IBuilderForCustomData">
            <summary>
                Represents a builder for custom Data.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.IBuilderForCustomData.WithCustomData(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
                Sets the custom Data on the builder.
            </summary>
            <param name="value">The custom Data.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest">
            <summary>
                Represents a request to delete an item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest.ItemId">
            <summary>
                Unique identifier for the item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest.ListId">
            <summary>
                Unique identifier for the list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequestBuilder.WithItemId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.DeleteItem.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.DeleteItem.IBuilderForItemId">
            <summary>
                Represents a builder for ItemId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.IBuilderForItemId.WithItemId(System.Guid)">
            <summary>
                Sets the ItemId on the builder.
            </summary>
            <param name="value">The ItemId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest">
            <summary>
                Represents a request to extract items.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest.ListId">
            <summary>
                Unique identifier for the list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a ExtractItemsRequest.
            </summary>
            <param name="id">The list Id.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest">
            <summary>
                Represents a request to retrieve an item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest.ItemId">
            <summary>
                Unique identifier for the item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest.ListId">
            <summary>
                Unique identifier for the list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.DeleteItemRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.DeleteItemRequestBuilder.WithItemId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.DeleteItemRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItem.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItem.IBuilderForItemId">
            <summary>
                Represents a builder for ItemId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.IBuilderForItemId.WithItemId(System.Guid)">
            <summary>
                Sets the ItemId on the builder.
            </summary>
            <param name="value">The ItemId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.EmbeddedItems">
            <summary>
                Represents a wrapper for items.
            </summary>
            <param name="Items">The retrieved items.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.EmbeddedItems.#ctor(System.Collections.Generic.IEnumerable{Vonage.ProactiveConnect.Items.ListItem})">
            <summary>
                Represents a wrapper for items.
            </summary>
            <param name="Items">The retrieved items.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItems.EmbeddedItems.Items">
            <summary>The retrieved items.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest">
            <summary>
                Represents a request to retrieve items.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.ListId">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.Order">
            <summary>
                Defines the data ordering.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.Page">
            <summary>
                Page of results to jump to.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.PageSize">
            <summary>
                Number of results per page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequestBuilder.OrderByDescending">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequestBuilder.WithPage(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.IBuilderForPage">
            <summary>
                Represents a builder for Page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.IBuilderForPage.WithPage(System.Int32)">
            <summary>
                Sets the Page.
            </summary>
            <param name="value">The page.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.IBuilderForPageSize">
            <summary>
                Represents a builder for PageSize.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.IBuilderForPageSize.WithPageSize(System.Int32)">
            <summary>
                Sets the PageSize on the builder.
            </summary>
            <param name="value">The page size.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.IBuilderForOrder">
            <summary>
                Represents a builder for Order.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.IBuilderForOrder.OrderByDescending">
            <summary>
                Sets the order to Descending on the builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest">
            <summary>
                Represents a request to import items from CSV file.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest.File">
            <summary>
                CSV content of list items to import.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest.ListId">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequestBuilder.WithFileData(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequestBuilder.WithFilePath(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ImportItems.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ImportItems.IBuilderForFile">
            <summary>
                Represents a builder for File.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.IBuilderForFile.WithFileData(System.Byte[])">
            <summary>
                Sets the File data on the builder.
            </summary>
            <param name="value">The file data.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.IBuilderForFile.WithFilePath(System.String)">
            <summary>
                Sets the File path on the builder.
            </summary>
            <param name="value">The file path.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsResponse">
            <summary>
                Represents the response when importing items.
            </summary>
            <param name="Inserted">The number of inserted items.</param>
            <param name="Updated">The number of updated items.</param>
            <param name="Deleted">The number of deleted items.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Represents the response when importing items.
            </summary>
            <param name="Inserted">The number of inserted items.</param>
            <param name="Updated">The number of updated items.</param>
            <param name="Deleted">The number of deleted items.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsResponse.Inserted">
            <summary>The number of inserted items.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsResponse.Updated">
            <summary>The number of updated items.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsResponse.Deleted">
            <summary>The number of deleted items.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ListItem">
            <summary>
                Represents a ListItem.
            </summary>
            <param name="Id">The unique Id.</param>
            <param name="CreatedAt">When the list item was created.</param>
            <param name="UpdatedAt">When the list item was updated.</param>
            <param name="Data">The custom data.</param>
            <param name="ListId">The unique list Id.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ListItem.#ctor(System.Guid,System.DateTimeOffset,System.DateTimeOffset,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
            <summary>
                Represents a ListItem.
            </summary>
            <param name="Id">The unique Id.</param>
            <param name="CreatedAt">When the list item was created.</param>
            <param name="UpdatedAt">When the list item was updated.</param>
            <param name="Data">The custom data.</param>
            <param name="ListId">The unique list Id.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ListItem.Id">
            <summary>The unique Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ListItem.CreatedAt">
            <summary>When the list item was created.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ListItem.UpdatedAt">
            <summary>When the list item was updated.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ListItem.Data">
            <summary>The custom data.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ListItem.ListId">
            <summary>The unique list Id.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest">
            <summary>
                Represents a request to retrieve an item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.Data">
            <summary>
                Custom data for the item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.ItemId">
            <summary>
                Unique identifier for the item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.ListId">
            <summary>
                Unique identifier for the list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequestBuilder.WithCustomData(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequestBuilder.WithItemId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForItemId">
            <summary>
                Represents a builder for ItemId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForItemId.WithItemId(System.Guid)">
            <summary>
                Sets the ItemId on the builder.
            </summary>
            <param name="value">The ItemId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForCustomData">
            <summary>
                Represents a builder for custom Data.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForCustomData.WithCustomData(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
                Sets the custom Data on the builder.
            </summary>
            <param name="value">The custom Data.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest">
            <summary>
                Represents a request to delete all items from a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest.Id">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a ClearListRequest.
            </summary>
            <param name="id">The list Id.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest">
            <summary>
                Represents a request to create a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.Attributes">
            <summary>
                Attributes of the list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.DataSource">
            <summary>
                The data source.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.Description">
            <summary>
                The description of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.Name">
            <summary>
                The name of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.Tags">
            <summary>
                Custom strings assigned with a resource - the request allows up to 10 tags, each must be between 1 and 15
                characters.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.WithAttribute(Vonage.ProactiveConnect.Lists.ListAttribute)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.WithDataSource(Vonage.ProactiveConnect.Lists.ListDataSource)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.WithDescription(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.WithTag(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForName">
            <summary>
                Represents a builder for Name.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForName.WithName(System.String)">
            <summary>
                Sets the Name on the builder, up to 255 characters.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForOptional.WithAttribute(Vonage.ProactiveConnect.Lists.ListAttribute)">
            <summary>
                Adds an attribute on the builder.
            </summary>
            <param name="value">The attribute.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForOptional.WithDataSource(Vonage.ProactiveConnect.Lists.ListDataSource)">
            <summary>
                Adds an data source on the builder.
            </summary>
            <param name="value">The data source.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForOptional.WithDescription(System.String)">
            <summary>
                Sets the Description on the builder, up to 1024 characters.
            </summary>
            <param name="value">The description.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForOptional.WithTag(System.String)">
            <summary>
                Adds a tag on the builder. The request allows up to 10 tags, each must be between 1 and 15 characters.
            </summary>
            <param name="value">The tag.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest">
            <summary>
                Represents a request to delete a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest.Id">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a DeleteListRequest.
            </summary>
            <param name="id">The list Id.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetList.GetListRequest">
            <summary>
                Represents a request to retrieve a single list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.GetList.GetListRequest.Id">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetList.GetListRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetList.GetListRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetList.GetListRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a GetListRequest.
            </summary>
            <param name="id">The list Id.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetLists.EmbeddedLists">
            <summary>
                Represents a wrapper for lists.
            </summary>
            <param name="Lists">The retrieved lists.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.EmbeddedLists.#ctor(System.Collections.Generic.IEnumerable{Vonage.ProactiveConnect.Lists.List})">
            <summary>
                Represents a wrapper for lists.
            </summary>
            <param name="Lists">The retrieved lists.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.GetLists.EmbeddedLists.Lists">
            <summary>The retrieved lists.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest">
            <summary>
                Represents a request to retrieve all lists.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.Order">
            <summary>
                Defines the data ordering.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.Page">
            <summary>
                Page of results to jump to.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.PageSize">
            <summary>
                Number of results per page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequestBuilder.OrderByDescending">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequestBuilder.WithPage(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForPage">
            <summary>
                Represents a builder for Page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForPage.WithPage(System.Int32)">
            <summary>
                Sets the Page.
            </summary>
            <param name="value">The page.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForPageSize">
            <summary>
                Represents a builder for PageSize.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForPageSize.WithPageSize(System.Int32)">
            <summary>
                Sets the PageSize on the builder.
            </summary>
            <param name="value">The page size.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForOrder">
            <summary>
                Represents a builder for Order.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForOrder.OrderByDescending">
            <summary>
                Sets the order to Descending on the builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.List">
            <summary>
                Represents a response when creating a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.Attributes">
            <summary>
                Attributes of the list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.CreatedAt">
            <summary>
                Date when the list was created.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.DataSource">
            <summary>
                The data source.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.Description">
            <summary>
                The description of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.Id">
            <summary>
                The list id.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.ItemsCount">
            <summary>
                The number of items.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.Name">
            <summary>
                The name of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.SyncStatus">
            <summary>
                Synchronization status between the list content (items) and it's datasource
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.Tags">
            <summary>
                Custom strings assigned with a resource - the request allows up to 10 tags, each must be between 1 and 15
                characters.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.UpdatedAt">
            <summary>
                Date when the list was updated.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.ListAttribute">
            <summary>
                Represents an attribute of a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListAttribute.Alias">
            <summary>
                Alternative name to use for this attribute. Use when you wish to correlate between 2 or more list that are using
                different attribute names for the same semantic data
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListAttribute.Key">
            <summary>
                Set to true if this attribute should be used to correlate between 2 or more lists.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListAttribute.Name">
            <summary>
                The list attribute name.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.ListDataSource">
            <summary>
                Represents a list data source.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListDataSource.IntegrationId">
            <summary>
                Integration id defining salesforce credential to use for this datasource
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListDataSource.Soql">
            <summary>
                Salesforce query defining which data to fetch from salesforce
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListDataSource.Type">
            <summary>
                The datasource type.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.ListDataSourceType">
            <summary>
                Represents a type of datasource.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.ListDataSourceType.Manual">
            <summary>
                Indicates a manual datasource.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.ListDataSourceType.Salesforce">
            <summary>
                Indicates a salesforce datasource.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest">
            <summary>
                Represents a request to replace all items in a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest.Id">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a ReplaceItemsRequest.
            </summary>
            <param name="id">The list Id.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.SyncStatus">
            <summary>
                Synchronization status between the list content (items) and it's datasource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.SyncStatus.DataModified">
            <summary>
                One or more list items were added, removed and/or modified since latest sync.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.SyncStatus.Details">
            <summary>
                Provide details on sync status.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.SyncStatus.Dirty">
            <summary>
                Indicates if the list content or metadata were modified since last sync.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.SyncStatus.MetadataModified">
            <summary>
                List metadata (definition) is modified since latest sync.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.SyncStatus.Value">
            <summary>
                Sync status.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.SyncStatus.Status">
            <summary>
                Represents the different statuses of a synchronization.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Configured">
            <summary>
                The "configured" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Clearing">
            <summary>
                The "clearing" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Fetching">
            <summary>
                The "fetching" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Paused">
            <summary>
                The "paused" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Cancelled">
            <summary>
                The "cancelled" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Completed">
            <summary>
                The "completed" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Failed">
            <summary>
                The "failed" status.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest">
            <summary>
                Represents a request to update a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Attributes">
            <summary>
                Attributes of the list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.DataSource">
            <summary>
                The data source.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Description">
            <summary>
                The description of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Id">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Name">
            <summary>
                The name of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Tags">
            <summary>
                Custom strings assigned with a resource - the request allows up to 10 tags, each must be between 1 and 15
                characters.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithAttribute(Vonage.ProactiveConnect.Lists.ListAttribute)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithDataSource(Vonage.ProactiveConnect.Lists.ListDataSource)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithDescription(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithTag(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId on the builder.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForName">
            <summary>
                Represents a builder for Name.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForName.WithName(System.String)">
            <summary>
                Sets the Name on the builder, up to 255 characters.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForOptional.WithAttribute(Vonage.ProactiveConnect.Lists.ListAttribute)">
            <summary>
                Adds an attribute on the builder.
            </summary>
            <param name="value">The attribute.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForOptional.WithDataSource(Vonage.ProactiveConnect.Lists.ListDataSource)">
            <summary>
                Adds an data source on the builder.
            </summary>
            <param name="value">The data source.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForOptional.WithDescription(System.String)">
            <summary>
                Sets the Description on the builder, up to 1024 characters.
            </summary>
            <param name="value">The description.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForOptional.WithTag(System.String)">
            <summary>
                Adds a tag on the builder. The request allows up to 10 tags, each must be between 1 and 15 characters.
            </summary>
            <param name="value">The tag.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.PaginationResult`1">
            <summary>
                Represents a pagination result.
            </summary>
            <param name="Page">  The page number.</param>
            <param name="PageSize">  The page size.</param>
            <param name="TotalItems">   The number of total items.</param>
            <param name="TotalPages">The number of total pages.</param>
            <param name="Links">The HAL links.</param>
            <param name="Embedded"> The embedded elements.</param>
            <typeparam name="T">Type of embedded elements.</typeparam>
        </member>
        <member name="M:Vonage.ProactiveConnect.PaginationResult`1.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Vonage.Common.HalLinks,`0)">
            <summary>
                Represents a pagination result.
            </summary>
            <param name="Page">  The page number.</param>
            <param name="PageSize">  The page size.</param>
            <param name="TotalItems">   The number of total items.</param>
            <param name="TotalPages">The number of total pages.</param>
            <param name="Links">The HAL links.</param>
            <param name="Embedded"> The embedded elements.</param>
            <typeparam name="T">Type of embedded elements.</typeparam>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.Page">
            <summary>  The page number.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.PageSize">
            <summary>  The page size.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.TotalItems">
            <summary>   The number of total items.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.TotalPages">
            <summary>The number of total pages.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.Links">
            <summary>The HAL links.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.Embedded">
            <summary> The embedded elements.</summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.ClearListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.CreateItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.CreateListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.DeleteItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.DeleteListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.ExtractItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.GetEventsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.GetItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.GetItem.GetItemRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.GetItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.GetListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.GetList.GetListRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.GetListsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.ImportItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.ReplaceItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.UpdateItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.UpdateListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Redaction.IRedactClient.RedactAsync(Vonage.Redaction.RedactRequest,Vonage.Request.Credentials)">
            <summary>
            Redact a specific message
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Redaction.IRedactClient.Redact(Vonage.Redaction.RedactRequest,Vonage.Request.Credentials)">
            <summary>
            Redact a specific message
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Redaction.RedactRequest.Id">
            <summary>
            The transaction ID to redact
            </summary>
        </member>
        <member name="P:Vonage.Redaction.RedactRequest.Product">
            <summary>
            Product name that the ID provided relates to
            </summary>
        </member>
        <member name="P:Vonage.Redaction.RedactRequest.Type">
            <summary>
            Required if redacting SMS data
            </summary>
        </member>
        <member name="T:Vonage.Request.ApiRequest">
            <summary>
                Responsible for sending all Vonage API requests that do not make use of Application authentication.
                For application authentication, see VersionedApiRequest.
            </summary>
        </member>
        <member name="T:Vonage.Request.ApiRequest.UriType">
            <summary>
                Type of the Uri.
            </summary>
        </member>
        <member name="F:Vonage.Request.ApiRequest.UriType.Api">
            <summary>
                Api uri type.
            </summary>
        </member>
        <member name="F:Vonage.Request.ApiRequest.UriType.Rest">
            <summary>
                Rest uri type.
            </summary>
        </member>
        <member name="M:Vonage.Request.ApiRequest.DoDeleteRequestWithUrlContent(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String},Vonage.Request.AuthType)">
            <summary>
                Sends an HTTP DELETE
            </summary>
            <param name="uri"></param>
            <param name="parameters"></param>
            <returns></returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Request.ApiRequest.DoGetRequestWithJwt(System.Uri)">
            <summary>
                Sends a GET request to the Vonage API using a JWT and returns the full HTTP resonse message
                this is primarily for pulling a raw stream off an API call -e.g. a recording
            </summary>
            <param name="uri"></param>
            <param name="creds"></param>
            <returns>HttpResponseMessage</returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Request.ApiRequest.DoGetRequestWithQueryParameters``1(System.Uri,Vonage.Request.AuthType,System.Object)">
            <summary>
                SendAsync a GET request to the versioned Vonage API.
                Do not include credentials in the parameters object. If you need to override credentials, use the optional
                Credentials parameter.
            </summary>
            <param name="uri">The URI to GET</param>
            <param name="parameters">Parameters required by the endpoint (do not include credentials)</param>
            <param name="credentials">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">Thrown if the API encounters a non-zero result</exception>
        </member>
        <member name="M:Vonage.Request.ApiRequest.DoPostRequestUrlContentFromObject``1(System.Uri,System.Object,System.Boolean)">
            <summary>
                Sends a Post request to the specified endpoint with the given parameters
            </summary>
            <typeparam name="T"></typeparam>
            <param name="uri"></param>
            <param name="parameters"></param>
            <param name="creds"></param>
            <param name="withCredentials">Indicates whether credentials should be included in Query string.</param>
            <returns></returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Request.ApiRequest.DoRequestWithJsonContent``1(System.Net.Http.HttpMethod,System.Uri,System.Object,Vonage.Request.AuthType)">
            <summary>
                SendAsync a request to the versioned Vonage API.
                Do not include credentials in the parameters object. If you need to override credentials, use the optional
                Credentials parameter.
            </summary>
            <param name="method">HTTP method (POST, PUT, DELETE, etc)</param>
            <param name="uri">The URI to communicate with</param>
            <param name="payload">Parameters required by the endpoint (do not include credentials)</param>
            <param name="authType">Authorization type used on the API</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="T:Vonage.Request.AuthType">
            <summary>
                Defines the authentication type.
            </summary>
        </member>
        <member name="F:Vonage.Request.AuthType.Basic">
            <summary>
                Basic authentication.
            </summary>
        </member>
        <member name="F:Vonage.Request.AuthType.Bearer">
            <summary>
                Bearer authentication.
            </summary>
        </member>
        <member name="F:Vonage.Request.AuthType.Query">
            <summary>
                Query authentication.
            </summary>
        </member>
        <member name="F:Vonage.Request.ByteArrayToHexHelper._lookup32">
            http://stackoverflow.com/questions/311165/how-do-you-convert-byte-array-to-hexadecimal-string-and-vice-versa/24343727#24343727
            We're not going to going with the unchecked version. Seems overkill for now.
        </member>
        <member name="T:Vonage.Request.Credentials">
            <summary>
                Represents credentials for Vonage APIs.
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.ApiKey">
            <summary>
                Vonage API Key (from your account dashboard)
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.ApiSecret">
            <summary>
                Vonage API Secret (from your account dashboard)
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.ApplicationId">
            <summary>
                Application ID (GUID)
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.ApplicationKey">
            <summary>
                Application private key contents
                This is the actual key file contents and NOT a path to the key file!
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.AppUserAgent">
            <summary>
                (Optional) App useragent value to pass with every request
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.Method">
            <summary>
                Method to be used for signing SMS Messages
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.SecuritySecret">
            <summary>
                Signature Secret (from API settings section of your account settings)
            </summary>
        </member>
        <member name="M:Vonage.Request.Credentials.#ctor">
            <summary>
                Obsolete constructor for Credentials.
            </summary>
        </member>
        <member name="M:Vonage.Request.Credentials.#ctor(System.String,System.String)">
            <summary>
                Obsolete constructor for Credentials.
            </summary>
            <param name="vonageApiKey">The api key.</param>
            <param name="vonageApiSecret">The api secret.</param>
        </member>
        <member name="M:Vonage.Request.Credentials.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
                Obsolete constructor for Credentials.
            </summary>
            <param name="vonageApiKey">The api key.</param>
            <param name="vonageApiSecret">The api secret.</param>
            <param name="vonageApplicationId">The application id.</param>
            <param name="vonageApplicationPrivateKey">The private key.</param>
        </member>
        <member name="M:Vonage.Request.Credentials.FromApiKeyAndSecret(System.String,System.String)">
            <summary>
                Builds credentials from ApiKey and ApiSecret.
            </summary>
            <param name="apiKey">The api key.</param>
            <param name="apiSecret">The api secret.</param>
            <returns>The credentials.</returns>
        </member>
        <member name="M:Vonage.Request.Credentials.FromApiKeySignatureSecretAndMethod(System.String,System.String,Vonage.Cryptography.SmsSignatureGenerator.Method)">
            <summary>
                Builds Credentials from ApiKey, SignatureSecret and Method.
            </summary>
            <param name="apiKey">The api key.</param>
            <param name="signatureSecret">The signature secret.</param>
            <param name="signatureMethod">The signature method.</param>
            <returns>The credentials.</returns>
        </member>
        <member name="M:Vonage.Request.Credentials.FromAppIdAndPrivateKey(System.String,System.String)">
            <summary>
                Builds Credentials from ApplicationId and PrivateKey.
            </summary>
            <param name="appId">The application id.</param>
            <param name="privateKey">The private key.</param>
            <returns>The credentials.</returns>
        </member>
        <member name="M:Vonage.Request.Credentials.FromAppIdAndPrivateKeyPath(System.String,System.String)">
            <summary>
                Builds Credentials from ApplicationId and PrivateKey file.
            </summary>
            <param name="appId">Your Vonage Application ID</param>
            <param name="privateKeyPath">path to your private Key file</param>
            <exception cref="T:System.UnauthorizedAccessException">Thrown if app doesn't have required permission to key file</exception>
            <exception cref="T:System.ArgumentException">
                privateKeyPath is a zero length string, contains only white space or
                contains one or more invalid characters
            </exception>
            <exception cref="T:System.ArgumentNullException">privateKeyPath is null</exception>
            <exception cref="T:System.IO.PathTooLongException">
                The specified path, filename, or both exceed the system-defined max
                length
            </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">
                The specified path is invalid, (for example, it is on an
                unmapped drive).
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">The file specified in path was not found.</exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format.</exception>
            <returns>CredentialsObject</returns>
        </member>
        <member name="M:Vonage.Request.Credentials.GetAuthenticationHeader">
            <summary>
                Provides the preferred authentication based on authentication type.
            </summary>
            <returns>The authentication header if it matches any criteria. A AuthenticationFailure otherwise.</returns>
        </member>
        <member name="M:Vonage.Request.Credentials.GetPreferredAuthenticationType">
            <summary>
                Provides the preferred authentication type.
            </summary>
            <returns>The authentication type if it matches any criteria. A AuthenticationFailure otherwise.</returns>
            <remarks>
                Bearer will always be preferred over Basic if possible.
            </remarks>
        </member>
        <member name="M:Vonage.Request.Credentials.GetUserAgent">
            <summary>
                Returns the user agent from credentials if not null, from configuration otherwise.
            </summary>
            <returns>The user agent.</returns>
        </member>
        <member name="M:Vonage.Request.TimeSpanSemaphore.Dispose">
            <summary>
            Releases all resources used by the current instance
            </summary>
        </member>
        <member name="M:Vonage.Request.TimeSpanSemaphore.RunAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Runs an action after entering the semaphore (if the CancellationToken is not canceled)
            </summary>
        </member>
        <member name="M:Vonage.Request.TimeSpanSemaphore.Release">
            <summary>
            Exits the semaphore
            </summary>
        </member>
        <member name="M:Vonage.Request.TimeSpanSemaphore.Wait(System.Threading.CancellationToken)">
            <summary>
            Blocks the current thread until it can enter the semaphore, while observing a CancellationToken
            </summary>
        </member>
        <member name="T:Vonage.Serialization.JsonSerializerBuilder">
            <summary>
                Builder for Video serializer.
            </summary>
        </member>
        <member name="M:Vonage.Serialization.JsonSerializerBuilder.Build">
            <summary>
                Build a serializer.
            </summary>
            <returns>A serializer.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.Account">
            <summary>
                Represents an account.
            </summary>
            <param name="ApiKey">Unique SubAccount ID.</param>
            <param name="Name">Name of the SubAccount.</param>
            <param name="PrimaryAccountApiKey">Unique primary account ID.</param>
            <param name="UsePrimaryAccountBalance">Flag showing if balance is shared with primary account.</param>
            <param name="CreatedAt">SubAccount creation date and time.</param>
            <param name="IsSuspended">SubAccount suspension status.</param>
            <param name="Balance">Balance of the SubAccount. Value is null if balance is shared with primary account.</param>
            <param name="CreditLimit">Credit limit of the SubAccount. Value is null if balance is shared with primary account.</param>
        </member>
        <member name="M:Vonage.SubAccounts.Account.#ctor(System.String,System.String,System.String,System.Boolean,System.DateTimeOffset,System.Boolean,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
                Represents an account.
            </summary>
            <param name="ApiKey">Unique SubAccount ID.</param>
            <param name="Name">Name of the SubAccount.</param>
            <param name="PrimaryAccountApiKey">Unique primary account ID.</param>
            <param name="UsePrimaryAccountBalance">Flag showing if balance is shared with primary account.</param>
            <param name="CreatedAt">SubAccount creation date and time.</param>
            <param name="IsSuspended">SubAccount suspension status.</param>
            <param name="Balance">Balance of the SubAccount. Value is null if balance is shared with primary account.</param>
            <param name="CreditLimit">Credit limit of the SubAccount. Value is null if balance is shared with primary account.</param>
        </member>
        <member name="P:Vonage.SubAccounts.Account.ApiKey">
            <summary>Unique SubAccount ID.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.Name">
            <summary>Name of the SubAccount.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.PrimaryAccountApiKey">
            <summary>Unique primary account ID.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.UsePrimaryAccountBalance">
            <summary>Flag showing if balance is shared with primary account.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.CreatedAt">
            <summary>SubAccount creation date and time.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.IsSuspended">
            <summary>SubAccount suspension status.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.Balance">
            <summary>Balance of the SubAccount. Value is null if balance is shared with primary account.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.CreditLimit">
            <summary>Credit limit of the SubAccount. Value is null if balance is shared with primary account.</summary>
        </member>
        <member name="T:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.ApiKey">
            <summary>
                Unique primary account ID.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.Name">
            <summary>
                Name of the subaccount.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.Secret">
            <summary>
                Secret of the subaccount.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.UsePrimaryAccountBalance">
            <summary>
                Flag showing if balance is shared with primary account.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.Build">
            <summary>
                Initializes a builder for CreateRoomRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequestBuilder.DisableSharedAccountBalance">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequestBuilder.WithSecret(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.CreateSubAccount.IBuilderForName">
            <summary>
                Represents a builder for Name.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.IBuilderForName.WithName(System.String)">
            <summary>
                Sets the Name.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.CreateSubAccount.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.IBuilderForOptional.DisableSharedAccountBalance">
            <summary>
                Disables shared balance with primary account.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.IBuilderForOptional.WithSecret(System.String)">
            <summary>
                Sets the secret.
            </summary>
            <param name="value">The secret.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest.SubAccountKey">
            <summary>
                The SubAccount Id.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest.Parse(System.String)">
            <summary>
                Parses the input into a GetSubAccountRequest.
            </summary>
            <param name="subAccountKey">The SubAccount Id.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsResponse">
            <summary>
                Represents the primary account and its subaccounts.
            </summary>
            <param name="PrimaryAccount">The primary account.</param>
            <param name="SubAccounts">All subaccounts.</param>
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsResponse.#ctor(Vonage.SubAccounts.Account,Vonage.SubAccounts.Account[])">
            <summary>
                Represents the primary account and its subaccounts.
            </summary>
            <param name="PrimaryAccount">The primary account.</param>
            <param name="SubAccounts">All subaccounts.</param>
        </member>
        <member name="P:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsResponse.PrimaryAccount">
            <summary>The primary account.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsResponse.SubAccounts">
            <summary>All subaccounts.</summary>
        </member>
        <member name="T:Vonage.SubAccounts.GetTransfers.GetTransfersRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.EndDate">
            <summary>
                End of the retrieval period. If absent then all transfers until now is returned.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.StartDate">
            <summary>
                Start of the retrieval period.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.SubAccountKey">
            <summary>
                Subaccount to filter by.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.Build">
            <summary>
                Initializes a builder for GetTransfersRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequestBuilder.WithEndDate(System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequestBuilder.WithStartDate(System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequestBuilder.WithSubAccountKey(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.GetTransfers.IBuilderForStartDate">
            <summary>
                Represents a builder for StartDate.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.IBuilderForStartDate.WithStartDate(System.DateTimeOffset)">
            <summary>
                Sets the StartDate.
            </summary>
            <param name="value">The StartDate.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.GetTransfers.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.IBuilderForOptional.WithEndDate(System.DateTimeOffset)">
            <summary>
                Sets the EndDate.
            </summary>
            <param name="value">The EndDate.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.IBuilderForOptional.WithSubAccountKey(System.String)">
            <summary>
                Sets the SubAccount key.
            </summary>
            <param name="value">The SubAccount key.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.ISubAccountsClient">
            <summary>
                Exposes Subaccounts features.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.CreateSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest})">
            <summary>
                Creates a subaccount.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.GetBalanceTransfersAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetTransfers.GetTransfersRequest})">
            <summary>
                Retrieve a list of balance transfers that have taken place for a primary account within a specified time period.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.GetCreditTransfersAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetTransfers.GetTransfersRequest})">
            <summary>
                Retrieve a list of credit transfers that have taken place for a primary account within a specified time period.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.GetSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest})">
            <summary>
                Retrieves a subaccount of the primary account
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.GetSubAccountsAsync">
            <summary>
                Retrieves all subaccounts of the primary account.
            </summary>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.TransferBalanceAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferAmount.TransferAmountRequest})">
            <summary>
                Transfer balance limit between a primary account and one of its subaccounts.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.TransferCreditAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferAmount.TransferAmountRequest})">
            <summary>
                Transfer credit limit between a primary account and one of its subaccounts.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.TransferNumberAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferNumber.TransferNumberRequest})">
            <summary>
                Transfer number from one account to another.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.UpdateSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest})">
            <summary>
                Updates a subaccount.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.SubAccountsClient">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration,System.String)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
            <param name="apiKey">The account Id.</param>
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.CreateSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.GetBalanceTransfersAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetTransfers.GetTransfersRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.GetCreditTransfersAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetTransfers.GetTransfersRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.GetSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.GetSubAccountsAsync">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.TransferBalanceAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferAmount.TransferAmountRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.TransferCreditAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferAmount.TransferAmountRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.TransferNumberAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferNumber.TransferNumberRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.UpdateSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest})">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.Transfer">
            <summary>
                Represents a transfer.
            </summary>
            <param name="Id">Unique transfer ID</param>
            <param name="Amount">Transfer amount</param>
            <param name="From">Account the amount is transferred from</param>
            <param name="To">Account the amount is transferred to</param>
            <param name="Reference">Reference for the transfer</param>
            <param name="CreatedAt">The date and time when the transfer was executed</param>
        </member>
        <member name="M:Vonage.SubAccounts.Transfer.#ctor(System.Guid,System.Decimal,System.String,System.String,System.String,System.DateTimeOffset)">
            <summary>
                Represents a transfer.
            </summary>
            <param name="Id">Unique transfer ID</param>
            <param name="Amount">Transfer amount</param>
            <param name="From">Account the amount is transferred from</param>
            <param name="To">Account the amount is transferred to</param>
            <param name="Reference">Reference for the transfer</param>
            <param name="CreatedAt">The date and time when the transfer was executed</param>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.Id">
            <summary>Unique transfer ID</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.Amount">
            <summary>Transfer amount</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.From">
            <summary>Account the amount is transferred from</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.To">
            <summary>Account the amount is transferred to</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.Reference">
            <summary>Reference for the transfer</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.CreatedAt">
            <summary>The date and time when the transfer was executed</summary>
        </member>
        <member name="T:Vonage.SubAccounts.TransferAmount.TransferAmountRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.Amount">
            <summary>
                The amount to be transferred.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.From">
            <summary>
                Account the credit is transferred from.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.Reference">
            <summary>
                Reference for the credit transfer
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.To">
            <summary>
                Account the credit is transferred to.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.Build">
            <summary>
                Initializes a builder for a transfer request.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequestBuilder.WithAmount(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequestBuilder.WithFrom(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequestBuilder.WithReference(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequestBuilder.WithTo(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.TransferAmount.IBuilderForFrom">
            <summary>
                Represents a builder for From.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.IBuilderForFrom.WithFrom(System.String)">
            <summary>
                Sets the From.
            </summary>
            <param name="value">The from.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferAmount.IBuilderForTo">
            <summary>
                Represents a builder for To.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.IBuilderForTo.WithTo(System.String)">
            <summary>
                Sets the To.
            </summary>
            <param name="value">The to.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferAmount.IBuilderForAmount">
            <summary>
                Represents a builder for Amount.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.IBuilderForAmount.WithAmount(System.Decimal)">
            <summary>
                Sets the Amount.
            </summary>
            <param name="value">The amount.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferAmount.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.IBuilderForOptional.WithReference(System.String)">
            <summary>
                Sets the reference.
            </summary>
            <param name="value">The reference.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.TransferNumberRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.ApiKey">
            <summary>
                Unique primary account ID.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.Country">
            <summary>
                The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.From">
            <summary>
                Account the number is transferred from
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.Number">
            <summary>
                Number transferred
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.To">
            <summary>
                Account the number is transferred to
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.Build">
            <summary>
                Initializes a builder for TransferNumberRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequestBuilder.WithCountry(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequestBuilder.WithFrom(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequestBuilder.WithNumber(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequestBuilder.WithTo(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.IBuilderForFrom">
            <summary>
                Represents a builder for From.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.IBuilderForFrom.WithFrom(System.String)">
            <summary>
                Sets the From.
            </summary>
            <param name="value">The From.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.IBuilderForTo">
            <summary>
                Represents a builder for To.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.IBuilderForTo.WithTo(System.String)">
            <summary>
                Sets the To.
            </summary>
            <param name="value">The To.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.IBuilderForNumber">
            <summary>
                Represents a builder for Number.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.IBuilderForNumber.WithNumber(System.String)">
            <summary>
                Sets the Number.
            </summary>
            <param name="value">The Number.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.IBuilderForCountry">
            <summary>
                Represents a builder for Country.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.IBuilderForCountry.WithCountry(System.String)">
            <summary>
                Sets the Country.
            </summary>
            <param name="value">The Country.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.TransferNumberResponse">
            <summary>
            </summary>
            <param name="Number"></param>
            <param name="Country"></param>
            <param name="From"></param>
            <param name="To"></param>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberResponse.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            </summary>
            <param name="Number"></param>
            <param name="Country"></param>
            <param name="From"></param>
            <param name="To"></param>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberResponse.Number">
            <summary></summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberResponse.Country">
            <summary></summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberResponse.From">
            <summary></summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberResponse.To">
            <summary></summary>
        </member>
        <member name="T:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.ApiKey">
            <summary>
                Unique primary account ID.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.Name">
            <summary>
                Name of the subaccount.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.SubAccountKey">
            <summary>
                Unique SubAccount ID.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.Suspended">
            <summary>
                Indicates if the account is suspended.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.UsePrimaryAccountBalance">
            <summary>
                Flag showing if balance is shared with primary account.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.Build">
            <summary>
                Initializes a builder for UpdateSubAccountRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.DisableSharedAccountBalance">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.EnableAccount">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.EnableSharedAccountBalance">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.SuspendAccount">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.WithSubAccountKey(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.UpdateSubAccount.IBuilderForSubAccountKey">
            <summary>
                Represents a builder for SubAccountKey.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForSubAccountKey.WithSubAccountKey(System.String)">
            <summary>
                Sets the SubAccount key.
            </summary>
            <param name="value">The SubAccount key.</param>
            <returns></returns>
        </member>
        <member name="T:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional.DisableSharedAccountBalance">
            <summary>
                Disables shared balance with primary account.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional.EnableAccount">
            <summary>
                Enables the account.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional.EnableSharedAccountBalance">
            <summary>
                Enables shared balance with primary account.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional.SuspendAccount">
            <summary>
                Suspends the account.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the Name.
            </summary>
            <param name="value">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Vonage.Users.CreateUser.CreateUserRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Users.CreateUser.CreateUserRequest.Channels">
            <summary>
                User channels.
            </summary>
        </member>
        <member name="P:Vonage.Users.CreateUser.CreateUserRequest.DisplayName">
            <summary>
                A string to be displayed as user name. It does not need to be unique.
            </summary>
        </member>
        <member name="P:Vonage.Users.CreateUser.CreateUserRequest.ImageUrl">
            <summary>
                An image URL that you associate with the user
            </summary>
        </member>
        <member name="P:Vonage.Users.CreateUser.CreateUserRequest.Name">
            <summary>
                Unique name for a user.
            </summary>
        </member>
        <member name="P:Vonage.Users.CreateUser.CreateUserRequest.Properties">
            <summary>
                User properties.
            </summary>
        </member>
        <member name="M:Vonage.Users.CreateUser.CreateUserRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.CreateUserRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.CreateUser.CreateUserRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Users.CreateUser.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelMessenger)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelPstn)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelSip)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelSms)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelMms)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelVbc)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelViber)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelWebSocket)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelWhatsApp)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithDisplayName(System.String)">
            <summary>
            Sets the display name.
            </summary>
            <param name="value">The display name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithImageUrl(System.Uri)">
            <summary>
            Sets the  image url.
            </summary>
            <param name="value">The image url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithName(System.String)">
            <summary>
            Sets the name.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithUserProperty(System.String,System.Object)">
            <summary>
            Sets a user property.
            </summary>
            <param name="key">The property key.</param>
            <param name="value">The property value.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Users.DeleteUser.DeleteUserRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Users.DeleteUser.DeleteUserRequest.UserId">
            <summary>
                ID of the user.
            </summary>
        </member>
        <member name="M:Vonage.Users.DeleteUser.DeleteUserRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.DeleteUser.DeleteUserRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.DeleteUser.DeleteUserRequest.Parse(System.String)">
            <summary>
                Parses the input into a DeleteUserRequest.
            </summary>
            <param name="userId"></param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Users.GetUser.GetUserRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Users.GetUser.GetUserRequest.UserId">
            <summary>
                ID of the user.
            </summary>
        </member>
        <member name="M:Vonage.Users.GetUser.GetUserRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUser.GetUserRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUser.GetUserRequest.Parse(System.String)">
            <summary>
                Parses the input into a GetUserRequest.
            </summary>
            <param name="userId"></param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Users.GetUsers.GetUsersRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersRequest.Cursor">
            <summary>
                The cursor to start returning results from. You are not expected to provide this manually, but to follow the url
                provided in _links.next.href or _links.prev.href in the response which contains a cursor value.
            </summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersRequest.Name">
            <summary>
                Unique name for a user
            </summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersRequest.Order">
            <summary>
                Defines the data ordering.
            </summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersRequest.PageSize">
            <summary>
                Number of results per page.
            </summary>
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequestBuilder.WithOrder(Vonage.ProactiveConnect.FetchOrder)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Users.GetUsers.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Users.GetUsers.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the user name on the builder.
            </summary>
            <param name="value">The user name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.GetUsers.IBuilderForOptional.WithOrder(Vonage.ProactiveConnect.FetchOrder)">
            <summary>
                Sets the order on the builder.
            </summary>
            <param name="value">The order.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.GetUsers.IBuilderForOptional.WithPageSize(System.Int32)">
            <summary>
                Sets the page size on the builder.
            </summary>
            <param name="value">The page size.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Users.GetUsers.GetUsersResponse">
            <summary>
            </summary>
            <param name="PageSize">The amount of records returned in this response.</param>
            <param name="Embedded">A list of user objects. See <see href="https://developer.vonage.com/en/api/application.v2#getUser">the get details</see> of a specific user response fields for a description of the nested objects</param>
            <param name="Links">A series of links between resources in this API in the http://stateless.co/hal_specification.html.</param>
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersResponse.#ctor(System.Int32,Vonage.Users.GetUsers.EmbeddedUsers,Vonage.Common.HalLinks{Vonage.Users.GetUsers.GetUsersHalLink})">
            <summary>
            </summary>
            <param name="PageSize">The amount of records returned in this response.</param>
            <param name="Embedded">A list of user objects. See <see href="https://developer.vonage.com/en/api/application.v2#getUser">the get details</see> of a specific user response fields for a description of the nested objects</param>
            <param name="Links">A series of links between resources in this API in the http://stateless.co/hal_specification.html.</param>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersResponse.PageSize">
            <summary>The amount of records returned in this response.</summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersResponse.Embedded">
            <summary>A list of user objects. See <see href="https://developer.vonage.com/en/api/application.v2#getUser">the get details</see> of a specific user response fields for a description of the nested objects</summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersResponse.Links">
            <summary>A series of links between resources in this API in the http://stateless.co/hal_specification.html.</summary>
        </member>
        <member name="T:Vonage.Users.GetUsers.GetUsersHalLink">
            <summary>
                Represents a link to another resource.
            </summary>
            <param name="Href">Hyperlink reference.</param>
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersHalLink.#ctor(System.Uri)">
            <summary>
                Represents a link to another resource.
            </summary>
            <param name="Href">Hyperlink reference.</param>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersHalLink.Href">
            <summary>Hyperlink reference.</summary>
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersHalLink.BuildRequest">
            <summary>
                Transforms the link into a GetUsersRequest using the cursor pagination.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vonage.Users.GetUsers.EmbeddedUsers">
            <summary>
            Represents a list of user objects.
            </summary>
            <param name="Users">List of users matching the provided filter.</param>
        </member>
        <member name="M:Vonage.Users.GetUsers.EmbeddedUsers.#ctor(Vonage.Users.GetUsers.UserSummary[])">
            <summary>
            Represents a list of user objects.
            </summary>
            <param name="Users">List of users matching the provided filter.</param>
        </member>
        <member name="P:Vonage.Users.GetUsers.EmbeddedUsers.Users">
            <summary>List of users matching the provided filter.</summary>
        </member>
        <member name="T:Vonage.Users.GetUsers.UserSummary">
            <summary>
            Represents a user summary.
            </summary>
            <param name="Id">User ID</param>
            <param name="Name">Unique name for a user</param>
            <param name="DisplayName">A string to be displayed as user name. It does not need to be unique</param>
            <param name="Links">A series of links between resources in this API in the http://stateless.co/hal_specification.html.</param>
        </member>
        <member name="M:Vonage.Users.GetUsers.UserSummary.#ctor(System.String,System.String,System.String,Vonage.Common.HalLinks)">
            <summary>
            Represents a user summary.
            </summary>
            <param name="Id">User ID</param>
            <param name="Name">Unique name for a user</param>
            <param name="DisplayName">A string to be displayed as user name. It does not need to be unique</param>
            <param name="Links">A series of links between resources in this API in the http://stateless.co/hal_specification.html.</param>
        </member>
        <member name="P:Vonage.Users.GetUsers.UserSummary.Id">
            <summary>User ID</summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.UserSummary.Name">
            <summary>Unique name for a user</summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.UserSummary.DisplayName">
            <summary>A string to be displayed as user name. It does not need to be unique</summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.UserSummary.Links">
            <summary>A series of links between resources in this API in the http://stateless.co/hal_specification.html.</summary>
        </member>
        <member name="T:Vonage.Users.IUsersClient">
            <summary>
                Exposes User management features.
            </summary>
        </member>
        <member name="M:Vonage.Users.IUsersClient.DeleteUserAsync(Vonage.Common.Monads.Result{Vonage.Users.DeleteUser.DeleteUserRequest})">
            <summary>
                Deletes a user.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Users.IUsersClient.GetUserAsync(Vonage.Common.Monads.Result{Vonage.Users.GetUser.GetUserRequest})">
            <summary>
                Retrieves a user.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Users.IUsersClient.GetUsersAsync(Vonage.Common.Monads.Result{Vonage.Users.GetUsers.GetUsersRequest})">
            <summary>
                Retrieves users.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Users.IUsersClient.CreateUserAsync(Vonage.Common.Monads.Result{Vonage.Users.CreateUser.CreateUserRequest})">
            <summary>
                Creates a user.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Users.IUsersClient.UpdateUserAsync(Vonage.Common.Monads.Result{Vonage.Users.UpdateUser.UpdateUserRequest})">
            <summary>
                Updates a user.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.Users.UpdateUser.UpdateUserRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.Channels">
            <summary>
                User channels.
            </summary>
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.DisplayName">
            <summary>
                A string to be displayed as user name. It does not need to be unique.
            </summary>
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.Id">
            <summary>
                Unique ID for a user.
            </summary>
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.ImageUrl">
            <summary>
                An image URL that you associate with the user
            </summary>
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.Name">
            <summary>
                Unique name for a user.
            </summary>
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.Properties">
            <summary>
                User properties.
            </summary>
        </member>
        <member name="M:Vonage.Users.UpdateUser.UpdateUserRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.UpdateUserRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.UpdateUser.UpdateUserRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Users.UpdateUser.IBuilderForId">
            <summary>
                Represents a builder for User Id.
            </summary>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForId.WithId(System.String)">
            <summary>
                Sets the Id on the builder.
            </summary>
            <param name="value">The user Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Users.UpdateUser.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelMessenger)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelPstn)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelSip)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelSms)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelMms)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelVbc)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelViber)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelWebSocket)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelWhatsApp)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithDisplayName(System.String)">
            <summary>
                Sets the display name.
            </summary>
            <param name="value">The display name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithImageUrl(System.Uri)">
            <summary>
                Sets the  image url.
            </summary>
            <param name="value">The image url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the name.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithUserProperty(System.String,System.Object)">
            <summary>
                Sets a user property.
            </summary>
            <param name="key">The property key.</param>
            <param name="value">The property value.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Users.ChannelPstn">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="M:Vonage.Users.ChannelPstn.#ctor(System.Int32)">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="P:Vonage.Users.ChannelPstn.Number">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelSip">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="Username"></param>
            <param name="Password"></param>
        </member>
        <member name="M:Vonage.Users.ChannelSip.#ctor(System.String,System.String,System.String)">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="Username"></param>
            <param name="Password"></param>
        </member>
        <member name="P:Vonage.Users.ChannelSip.Uri">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.ChannelSip.Username">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.ChannelSip.Password">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelVbc">
            <summary>
            </summary>
            <param name="Extension"></param>
        </member>
        <member name="M:Vonage.Users.ChannelVbc.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Extension"></param>
        </member>
        <member name="P:Vonage.Users.ChannelVbc.Extension">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelWebSocket">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="ContentType"></param>
            <param name="Headers"></param>
        </member>
        <member name="M:Vonage.Users.ChannelWebSocket.#ctor(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="ContentType"></param>
            <param name="Headers"></param>
        </member>
        <member name="P:Vonage.Users.ChannelWebSocket.Uri">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.ChannelWebSocket.ContentType">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.ChannelWebSocket.Headers">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelSms">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="M:Vonage.Users.ChannelSms.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="P:Vonage.Users.ChannelSms.Number">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelMms">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="M:Vonage.Users.ChannelMms.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="P:Vonage.Users.ChannelMms.Number">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelWhatsApp">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="M:Vonage.Users.ChannelWhatsApp.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="P:Vonage.Users.ChannelWhatsApp.Number">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelViber">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="M:Vonage.Users.ChannelViber.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="P:Vonage.Users.ChannelViber.Number">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelMessenger">
            <summary>
            </summary>
            <param name="Id"></param>
        </member>
        <member name="M:Vonage.Users.ChannelMessenger.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Id"></param>
        </member>
        <member name="P:Vonage.Users.ChannelMessenger.Id">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.UserChannels">
            <summary>
            </summary>
            <param name="Pstn"></param>
            <param name="Sip"></param>
            <param name="Vbc"></param>
            <param name="WebSocket"></param>
            <param name="Sms"></param>
            <param name="Mms"></param>
            <param name="WhatsApp"></param>
            <param name="Viber"></param>
            <param name="Messenger"></param>
        </member>
        <member name="M:Vonage.Users.UserChannels.#ctor(System.Collections.Generic.IEnumerable{Vonage.Users.ChannelPstn},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelSip},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelVbc},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelWebSocket},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelSms},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelMms},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelWhatsApp},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelViber},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelMessenger})">
            <summary>
            </summary>
            <param name="Pstn"></param>
            <param name="Sip"></param>
            <param name="Vbc"></param>
            <param name="WebSocket"></param>
            <param name="Sms"></param>
            <param name="Mms"></param>
            <param name="WhatsApp"></param>
            <param name="Viber"></param>
            <param name="Messenger"></param>
        </member>
        <member name="P:Vonage.Users.UserChannels.Pstn">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Sip">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Vbc">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.WebSocket">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Sms">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Mms">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.WhatsApp">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Viber">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Messenger">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.User">
            <summary>
            </summary>
            <param name="Id"></param>
            <param name="Name"></param>
            <param name="DisplayName"></param>
            <param name="ImageUrl"></param>
            <param name="Properties"></param>
            <param name="Channels"></param>
            <param name="Links"></param>
        </member>
        <member name="M:Vonage.Users.User.#ctor(System.String,System.String,System.String,System.Uri,System.Collections.Generic.Dictionary{System.String,System.Object},Vonage.Users.UserChannels,Vonage.Common.HalLinks)">
            <summary>
            </summary>
            <param name="Id"></param>
            <param name="Name"></param>
            <param name="DisplayName"></param>
            <param name="ImageUrl"></param>
            <param name="Properties"></param>
            <param name="Channels"></param>
            <param name="Links"></param>
        </member>
        <member name="P:Vonage.Users.User.Id">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.Name">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.DisplayName">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.ImageUrl">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.Properties">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.Channels">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.Links">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.UserProperty">
            <summary>
            </summary>
            <param name="CustomData"></param>
        </member>
        <member name="M:Vonage.Users.UserProperty.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            </summary>
            <param name="CustomData"></param>
        </member>
        <member name="P:Vonage.Users.UserProperty.CustomData">
            <summary></summary>
        </member>
        <member name="M:Vonage.Users.UsersClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.Users.UsersClient.CreateUserAsync(Vonage.Common.Monads.Result{Vonage.Users.CreateUser.CreateUserRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.UsersClient.DeleteUserAsync(Vonage.Common.Monads.Result{Vonage.Users.DeleteUser.DeleteUserRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.UsersClient.GetUserAsync(Vonage.Common.Monads.Result{Vonage.Users.GetUser.GetUserRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.UsersClient.GetUsersAsync(Vonage.Common.Monads.Result{Vonage.Users.GetUsers.GetUsersRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.UsersClient.UpdateUserAsync(Vonage.Common.Monads.Result{Vonage.Users.UpdateUser.UpdateUserRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseQuery``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}})">
            <summary>
            Used to Parse Query parameters into a givent type
            This Method will convert the string pairs into a dictioanry and then use
            Newtonsoft to convert the pairs to JSON - finally resolving the object from JSON
            </summary>
            <typeparam name="T"></typeparam>
            <param name="requestData"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseQueryNameValuePairs``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Used to Parse Query parameters into a givent type
            This Method will convert the string pairs into a dictioanry and then use
            Newtonsoft to convert the pairs to JSON - finally resolving the object from JSON
            </summary>
            <typeparam name="T"></typeparam>
            <param name="requestData"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseUrlFormString``1(System.String)">
            <summary>
            Parses URL content into the given object type
            This uses Newtonsoft.Json - abnormally named fields should be decorated with the 'JsonPropertyAttribute'
            </summary>
            <typeparam name="T"></typeparam>
            <param name="contentString"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseWebhook``1(System.IO.Stream,System.String)">
            <summary>
            Synchronous Implementation of ParseWebhook
            Meant to be called from ASP.NET Core MVC with only the Content of the body
            </summary>
            <typeparam name="T"></typeparam>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseWebhook``1(System.Net.Http.HttpRequestMessage)">
            <summary>
            Synchronous implementation of the ParseWehbook method, meant to be called from 
            Legacy ASP.NET Web Api with an HttpRequestMessage
            </summary>
            <typeparam name="T"></typeparam>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseWebhookAsync``1(System.IO.Stream,System.String)">
            <summary>
            Parses the stream into the given type
            This is anticipated to be used by ASP.NET Core MVC/API requests where the content is in the Body of the inbound request
            </summary>
            <typeparam name="T"></typeparam>
            <param name="request"></param>
            <param name="contentType">The content type of the request, must be of the type application/json or application/x-www-form-urlencoded</param>
            <exception cref="T:System.ArgumentException">Thrown if Content type does not contain application/json or application/x-www-form-urlencoded</exception>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseWebhookAsync``1(System.Net.Http.HttpRequestMessage)">
            <summary>
            Parses the HttpRequestMessag's content into the given type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="request"></param>
            <exception cref="T:System.ArgumentException">Thrown if Content type does not contain application/json or application/x-www-form-urlencoded</exception>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyRequestAsync(Vonage.Verify.VerifyRequest,Vonage.Request.Credentials)">
            <summary>
            Use Verify request to generate and send a PIN to your user
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyCheckAsync(Vonage.Verify.VerifyCheckRequest,Vonage.Request.Credentials)">
            <summary>
            Use Verify check to confirm that the PIN you received from your user matches the one sent by Vonage in your Verify request
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifySearchAsync(Vonage.Verify.VerifySearchRequest,Vonage.Request.Credentials)">
            <summary>
            Use Verify search to check the status of past or current verification requests
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyControlAsync(Vonage.Verify.VerifyControlRequest,Vonage.Request.Credentials)">
            <summary>
            Control the progress of your Verify requests. To cancel an existing Verify request, or to trigger the next verification event
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyRequestWithPSD2Async(Vonage.Verify.Psd2Request,Vonage.Request.Credentials)">
            <summary>
            Use Verify request to generate and send a PIN to your user to authorize a payment: 
            1. Create a request to send a verification code to your user. 
            2. Check the status field in the response to ensure that your request was successful (zero is success). 
            3. Use the request_id field in the response for the Verify check.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyRequest(Vonage.Verify.VerifyRequest,Vonage.Request.Credentials)">
            <summary>
            Use Verify request to generate and send a PIN to your user
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyCheck(Vonage.Verify.VerifyCheckRequest,Vonage.Request.Credentials)">
            <summary>
            Use Verify check to confirm that the PIN you received from your user matches the one sent by Vonage in your Verify request
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifySearch(Vonage.Verify.VerifySearchRequest,Vonage.Request.Credentials)">
            <summary>
            Use Verify search to check the status of past or current verification requests
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyControl(Vonage.Verify.VerifyControlRequest,Vonage.Request.Credentials)">
            <summary>
            Control the progress of your Verify requests. To cancel an existing Verify request, or to trigger the next verification event
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyRequestWithPSD2(Vonage.Verify.Psd2Request,Vonage.Request.Credentials)">
            <summary>
            Use Verify request to generate and send a PIN to your user to authorize a payment: 
            1. Create a request to send a verification code to your user. 
            2. Check the status field in the response to ensure that your request was successful (zero is success). 
            3. Use the request_id field in the response for the Verify check.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Verify.Psd2Request.Payee">
            <summary>
            An alphanumeric string to indicate to the user the 
            name of the recipient that they are confirming a payment to.
            </summary>
        </member>
        <member name="P:Vonage.Verify.Psd2Request.Amount">
            <summary>
            The Decimal amount of the payment to be confirmed, in Euros
            </summary>
        </member>
        <member name="P:Vonage.Verify.Psd2Request.WorkflowId">
            <summary>
            Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. 
            For example, an id of 1 identifies the workflow SMS - TTS - TTS. 
            For a list of all workflows and their associated ids, please visit the developer portal.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheck.DateReceived">
            <summary>
            The date and time this check was received (in the format YYYY-MM-DD HH:MM:SS)
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheck.Code">
            <summary>
            The code supplied with this check request
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheck.Status">
            <summary>
            One of: VALID or INVALID
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheck.IpAddress">
            <summary>
            The IP address, if available (this field is no longer used).
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckRequest.RequestId">
            <summary>
            The Verify request to check. This is the request_id you received in the response to the Verify request
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckRequest.Code">
            <summary>
            The verification code entered by your user.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckRequest.IpAddress">
            <summary>
            (This field is no longer used)
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckResponse.RequestId">
            <summary>
            The request_id that you received in the response to the Verify request and used in the Verify check request.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckResponse.EventId">
            <summary>
            The ID of the verification event, such as an SMS or TTS call.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckResponse.Price">
            <summary>
            The cost incurred for this request.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckResponse.Currency">
            <summary>
            The currency code.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckResponse.EstimatedPriceMessagesSent">
            <summary>
            This field may not be present, depending on your pricing model. 
            The value indicates the cost (in EUR) of the calls made and messages sent for the verification process. 
            This value may be updated during and shortly after the request completes because user input events can overlap with message/call events. 
            When this field is present, the total cost of the verification is the sum of this field and the price field.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyControlRequest.RequestId">
            <summary>
            The request_id you received in the response to the Verify request.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyControlRequest.Cmd">
            <summary>
            The possible commands are cancel to request cancellation of the verification process,
            or trigger_next_event to advance to the next verification event (if any). 
            Cancellation is only possible 30 seconds after the start of the verification request and 
            before the second event (either TTS or SMS) has taken place.
            must be one of 'cancel' or 'trigger_next_event'
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequest.Brand">
            <summary>
            An 18-character alphanumeric string you can use to personalize the verification request SMS body, to help users identify your company or application name. For example: "Your Acme Inc PIN is ..."
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequest.SenderId">
            <summary>
            An 11-character alphanumeric string that represents the identity of the sender of the verification request: https://developer.nexmo.com/messaging/sms/guides/custom-sender-id. 
            Depending on the destination of the phone number you are sending the verification SMS to, restrictions might apply.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequest.WorkflowId">
            <summary>
            Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. 
            For example, an id of 1 identifies the workflow SMS - TTS - TTS. 
            For a list of all workflows and their associated ids, please visit the developer portal.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.Number">
            <summary>
            The mobile or landline phone number to verify. Unless you are setting country explicitly, this number must be in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.Country">
            <summary>
            If you do not provide number in international format or you are not sure if number is correctly formatted, specify the two-character country code in country. Verify will then format the number for you.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.CodeLength">
            <summary>
            The length of the verification code. Must be 4 or 6
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.Lg">
            <summary>
            By default, the SMS or text-to-speech (TTS) message is generated in the locale that matches the number. 
            For example, the text message or TTS message for a 33* number is sent in French. 
            Use this parameter to explicitly control the language used for the Verify request. 
            A list of languages is available: https://developer.nexmo.com/verify/guides/verify-languages
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.PinExpiry">
            <summary>
            How long the generated verification code is valid for, in seconds. 
            When you specify both pin_expiry and next_event_wait then pin_expiry must be an integer 
            multiple of next_event_wait otherwise pin_expiry is defaulted to equal next_event_wait. 
            See changing the event timings: https://developer.nexmo.com/verify/guides/changing-default-timings.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.NextEventWait">
            <summary>
            Specifies the wait time in seconds between attempts to deliver the verification code.
            Must be between 60 and 900
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyResponse.RequestId">
            <summary>
                The unique ID of the Verify request. This may be blank in an error situation.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyResponse.Network">
            <summary>
                The Network ID of the blocking network, if relevant to the error.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyResponseBase.ErrorText">
            <summary>
            If the status is non-zero, this explains the error encountered.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyResponseBase.Status">
            <summary>
            A value of 0 indicates that your user entered the correct code. If it is non-zero, check the error_text.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifySearchRequest.RequestId">
            <summary>
            The request_id you received in the Verify Request Response.
            </summary>
        </member>
        <member name="T:Vonage.VerifyV2.Cancel.CancelRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.Cancel.CancelRequest.RequestId">
            <summary>
                ID of the verify request.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.Cancel.CancelRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.Cancel.CancelRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.Cancel.CancelRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a CancelRequest.
            </summary>
            <param name="requestId">The verify request identifier.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.IVerifyV2Client">
            <summary>
                Exposes VerifyV2 features.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.IVerifyV2Client.CancelAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.Cancel.CancelRequest})">
            <summary>
                Aborts the workflow if a verification request is still active.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.IVerifyV2Client.StartVerificationAsync``1(Vonage.Common.Monads.Result{``0})">
            <summary>
                Requests a verification to be sent to a user.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.IVerifyV2Client.VerifyCodeAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.VerifyCode.VerifyCodeRequest})">
            <summary>
                Allows a code to be checked against an existing Verification request.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow">
            <summary>
                Represents a verification workflow for Email.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.From">
            <summary>
                The email address to send the verification request from.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.To">
            <summary>
                The email address to send the verification request to.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.Parse(System.String)">
            <summary>
                Parses the input into a EmailWorkflow.
            </summary>
            <param name="to">The email address to send the verification request to.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.Parse(System.String,System.String)">
            <summary>
                Parses the input into a EmailWorkflow.
            </summary>
            <param name="to">The email address to send the verification request to.</param>
            <param name="from">The email address to send the verification request from.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IStartVerificationRequest">
            <summary>
                Represents a request for StartVerification.
            </summary>
            <remarks>
                This is a marker interface.
            </remarks>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IVerificationWorkflow">
            <summary>
                Represents a verification workflow.
            </summary>
            <remarks>
                This is a marker interface.
            </remarks>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.IVerificationWorkflow.Channel">
            <summary>
                The verification channel.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IVerificationWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <summary>
                Serializes the workflow.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>The serialized workflow.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.Locale">
            <summary>
                Represents a language for verification requests.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.DeDe">
            <summary>
                The de-de locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.EnGb">
            <summary>
                The en-gb locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.EnUs">
            <summary>
                The en-us locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.EsEs">
            <summary>
                The es-es locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.EsMx">
            <summary>
                The es-mx locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.EsUs">
            <summary>
                The es-us locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.FrFr">
            <summary>
                The fr-fr locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.HiIn">
            <summary>
                The hi-in locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.IdId">
            <summary>
                The id-id locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.ItIt">
            <summary>
                The it-it locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.Language">
            <summary>
                The language.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.PtBr">
            <summary>
                The pt-br locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.PtPt">
            <summary>
                The pt-pt locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.RuRu">
            <summary>
                The ru-ru locale.
            </summary>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.LocaleJsonConverter">
            <summary>
                Represents a custom converter from Locale description to Json.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.LocaleJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.LocaleJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Vonage.VerifyV2.StartVerification.Locale,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow">
            <summary>
                Represents a verification workflow for SilentAuth.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow.To">
            <summary>
                The phone number to use for authentication, in the E.164 format. Don't use a leading + or 00 when entering a phone
                number, start with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow.Parse(System.String)">
            <summary>
                Parses the input into a SilentAuthWorkflow.
            </summary>
            <param name="to">The phone number to use for authentication.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow">
            <summary>
                Represents a verification workflow for SMS.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.Hash">
            <summary>
                Optional Android Application Hash Key for automatic code detection on a user's device.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.To">
            <summary>
                The phone number to contact, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start
                with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.Parse(System.String,System.String)">
            <summary>
                Parses the input into a SmsWorkflow.
            </summary>
            <param name="to">The phone number to contact.</param>
            <param name="hash">The Android application hash key.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.Parse(System.String)">
            <summary>
                Parses the input into a SmsWorkflow.
            </summary>
            <param name="to">The phone number to contact.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.StartVerificationRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.Brand">
            <summary>
                Gets the brand that is sending the verification request.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.ChannelTimeout">
            <summary>
                Gets the wait time in seconds between attempts to delivery the verification code.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.ClientReference">
            <summary>
                Gets the client reference.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.Code">
            <summary>
                An optional alphanumeric custom code to use, if you don't want Vonage to generate the code.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.CodeLength">
            <summary>
                Gets the length of the code to send to the user
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.FraudCheck">
            <summary>
                Indicates the request will bypass network block, if necessary.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.Locale">
            <summary>
                Gets the request language.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.Workflows">
            <summary>
                Gets verification workflows.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequest.Build">
            <summary>
                Initializes a builder for StartVerificationRequest.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.SkipFraudCheck">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithBrand(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithChannelTimeout(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithClientReference(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithCode(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithCodeLength(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithFallbackWorkflow``1(Vonage.Common.Monads.Result{``0})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithLocale(Vonage.VerifyV2.StartVerification.Locale)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithWorkflow``1(Vonage.Common.Monads.Result{``0})">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForLocale">
            <summary>
                Represents a builder for Locale.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForLocale.WithLocale(Vonage.VerifyV2.StartVerification.Locale)">
            <summary>
                Sets the Locale.
            </summary>
            <param name="value">The Locale.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForChannelTimeout">
            <summary>
                Represents a builder for ChannelTimeout.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForChannelTimeout.WithChannelTimeout(System.Int32)">
            <summary>
                Sets the ChannelTimeout.
            </summary>
            <param name="value">The ChannelTimeout.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForClientReference">
            <summary>
                Represents a builder for ClientReference.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForClientReference.WithClientReference(System.String)">
            <summary>
                Sets the ClientReference.
            </summary>
            <param name="value">The ClientReference.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalBuilderForCodeLength">
            <summary>
                Represents a builder for CodeLength.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalBuilderForCodeLength.WithCodeLength(System.Int32)">
            <summary>
                Sets the CodeLength.
            </summary>
            <param name="value">The CodeLength.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalBuilderForCode">
            <summary>
                Represents a builder for Code.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalBuilderForCode.WithCode(System.String)">
            <summary>
                Sets a custom code, if you don't want Vonage to generate the code.
            </summary>
            <param name="value">The custom code.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalBuilderForFallbackWorkflow">
            <summary>
                Represents a builder for fallback workflow.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalBuilderForFallbackWorkflow.WithFallbackWorkflow``1(Vonage.Common.Monads.Result{``0})">
            <summary>
                Sets a fallback workflow.
            </summary>
            <param name="value">The fallback workflow.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalBuilderForSkipFraudCheck">
            <summary>
                Represents a builder for SkipFraudCheck.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalBuilderForSkipFraudCheck.SkipFraudCheck">
            <summary>
                Sets a fallback workflow.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IBuilderForBrand">
            <summary>
                Represents a builder for Brand.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IBuilderForBrand.WithBrand(System.String)">
            <summary>
                Sets the Brand.
            </summary>
            <param name="value">The Brand.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IBuilderForWorkflow">
            <summary>
                Represents a builder for Workflow.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IBuilderForWorkflow.WithWorkflow``1(Vonage.Common.Monads.Result{``0})">
            <summary>
                Sets the Workflow.
            </summary>
            <param name="value">The Workflow.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalBuilder">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.StartVerificationResponse">
            <summary>
                Represents a response of a StartVerification request.
            </summary>
            <param name="RequestId">The Id of the request.</param>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationResponse.#ctor(System.Guid)">
            <summary>
                Represents a response of a StartVerification request.
            </summary>
            <param name="RequestId">The Id of the request.</param>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationResponse.RequestId">
            <summary>The Id of the request.</summary>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.Voice.VoiceWorkflow">
            <summary>
                Represents a verification workflow for Voice.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Voice.VoiceWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Voice.VoiceWorkflow.To">
            <summary>
                The phone number to contact, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start
                with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Voice.VoiceWorkflow.Parse(System.String)">
            <summary>
                Parses the input into a VoiceWorkflow.
            </summary>
            <param name="to">The phone number to contact.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Voice.VoiceWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow">
            <summary>
                Represents a verification workflow for WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow.From">
            <summary>
                An optional sender number, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start
                with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow.To">
            <summary>
                The phone number to contact, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start
                with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow.Parse(System.String)">
            <summary>
                Parses the input into a WhatsAppWorkflow.
            </summary>
            <param name="to">The phone number to contact.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow.Parse(System.String,System.String)">
            <summary>
                Parses the input into a WhatsAppWorkflow.
            </summary>
            <param name="to">The phone number to contact.</param>
            <param name="from">The sender number.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.WhatsAppInteractive.WhatsAppInteractiveWorkflow">
            <summary>
                Represents a verification workflow for WhatsApp Interactive.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.WhatsAppInteractive.WhatsAppInteractiveWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.WhatsAppInteractive.WhatsAppInteractiveWorkflow.To">
            <summary>
                The phone number to contact, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start
                with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.WhatsAppInteractive.WhatsAppInteractiveWorkflow.Parse(System.String)">
            <summary>
                Parses the input into a WhatsAppInteractiveWorkflow.
            </summary>
            <param name="to">The phone number to contact.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.WhatsAppInteractive.WhatsAppInteractiveWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest.Code">
            <summary>
                The code the user supplied.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest.RequestId">
            <summary>
                ID of the verify request.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequestBuilder.WithCode(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequestBuilder.WithRequestId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.VerifyCode.IBuilderForRequestId">
            <summary>
                Represents a builder to set the RequestId.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.IBuilderForRequestId.WithRequestId(System.Guid)">
            <summary>
                Sets the RequestId.
            </summary>
            <param name="value">The RequestId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.VerifyCode.IBuilderForCode">
            <summary>
                Represents a builder to set the Code.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.IBuilderForCode.WithCode(System.String)">
            <summary>
                Sets the code.
            </summary>
            <param name="value">The code.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyV2Client.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyV2Client.CancelAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.Cancel.CancelRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyV2Client.StartVerificationAsync``1(Vonage.Common.Monads.Result{``0})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyV2Client.VerifyCodeAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.VerifyCode.VerifyCodeRequest})">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Voice.AdvancedMachineDetectionProperties">
            <summary>
                Represents the properties for Advanced Machine Detection.
            </summary>
        </member>
        <member name="P:Vonage.Voice.AdvancedMachineDetectionProperties.BeepTimeout">
            <summary>
                Maximum time in seconds Vonage should wait for a machine beep to be detected. A machine event
                with sub_state set to beep_timeout will be sent if the timeout is exceeded.
            </summary>
        </member>
        <member name="P:Vonage.Voice.AdvancedMachineDetectionProperties.Behavior">
            <summary>
                When hangup is used, the call will be terminated if a machine is detected. When continue is
                used, the call will continue even if a machine is detected.
            </summary>
        </member>
        <member name="P:Vonage.Voice.AdvancedMachineDetectionProperties.Mode">
            <summary>
                Detect if machine answered and sends a human or machine status in the webhook payload. When set to
                detect_beep, the system also attempts to detect voice mail beep and sends an additional parameter sub_state in the
                webhook with the value beep_start.
            </summary>
        </member>
        <member name="M:Vonage.Voice.AdvancedMachineDetectionProperties.#ctor(Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionBehavior,Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionMode,System.Int32)">
            <summary>
                Constructor for AdvancedMachineDetectionProperties.
            </summary>
            <param name="behavior">
                When hangup is used, the call will be terminated if a machine is detected. When continue is
                used, the call will continue even if a machine is detected.
            </param>
            <param name="mode">
                Detect if machine answered and sends a human or machine status in the webhook payload. When set to
                detect_beep, the system also attempts to detect voice mail beep and sends an additional parameter sub_state in the
                webhook with the value beep_start.
            </param>
            <param name="beepTimeout">
                Maximum time in seconds Vonage should wait for a machine beep to be detected. A machine event
                with sub_state set to beep_timeout will be sent if the timeout is exceeded.
            </param>
            <exception cref="T:Vonage.Common.Exceptions.VonageException">When Beep Timeout is lower than 45, or higher than 120.</exception>
        </member>
        <member name="T:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionBehavior">
            <summary>
                Represents the behavior for AdvancedMachineDetection.
            </summary>
        </member>
        <member name="F:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionBehavior.Continue">
            <summary>
                Indicates the call will continue even if a machine is detected.
            </summary>
        </member>
        <member name="F:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionBehavior.Hangup">
            <summary>
                Indicates the call will be terminated if a machine is detected.
            </summary>
        </member>
        <member name="T:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionMode">
            <summary>
                Represents the mode for AdvancedMachineDetection.
            </summary>
        </member>
        <member name="F:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionMode.Detect">
            <summary>
                Indicates the system detects if a machine answered and send a status in the webhook payload.
            </summary>
        </member>
        <member name="F:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionMode.DetectBeep">
            <summary>
                Indicates the system also attempts to detect voice mail beep and sends an additional parameter sub_state in the
                webhook with the value beep_start.
            </summary>
        </member>
        <member name="P:Vonage.Voice.AnswerWebhooks.Answer.To">
            <summary>
            The number the call came from (this could be your Vonage number if the call is started programmatically)
            </summary>
        </member>
        <member name="P:Vonage.Voice.AnswerWebhooks.Answer.From">
            <summary>
            The call the number is to (this could be a Vonage number or another phone number)
            </summary>
        </member>
        <member name="P:Vonage.Voice.AnswerWebhooks.Answer.Uuid">
            <summary>
            A unique identifier for this call
            </summary>
        </member>
        <member name="P:Vonage.Voice.AnswerWebhooks.Answer.ConversationUuid">
            <summary>
            A unique identifier for this conversation
            </summary>
        </member>
        <member name="T:Vonage.Voice.CallCommand">
            <summary>
                Represents a command to start a call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.AdvancedMachineDetection">
            <summary>
                Configure the behavior of Vonage's advanced machine detection. Overrides machineDetection if both are set.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.AnswerMethod">
            <summary>
                Optional. The HTTP method used to send event information to answer_url. The default value is GET.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.AnswerUrl">
            <summary>
                The webhook endpoint where you provide the Vonage Call Control Object that governs this call. As soon as your user
                answers a call, Platform requests this NCCO from answer_url. Use answer_method to manage the HTTP method.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.EventMethod">
            <summary>
                Optional. The HTTP method used to send event information to event_url. The default value is POST.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.EventUrl">
            <summary>
                Optional. Platform sends event information asynchronously to this endpoint when status changes. For more
                information about the values sent, see callback.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.From">
            <summary>
                The endpoint you are calling from. Possible value are the same as to.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.LengthTimer">
            <summary>
                Optional. Set the number of seconds that elapse before Vonage hangs up after the call state changes to in_progress.
                The default value is 7200, two hours. This is also the maximum value.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.MachineDetection">
            <summary>
                Optional. Configure the behavior when Vonage detects that a destination is an answerphone.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.Ncco">
            <summary>
                This will convert to ncco as per the CallCommandConverter - it is preferable to use this over the JArray Ncco
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.RandomFromNumber">
            <summary>
                Set to <code>true</code> to use random phone number as the <code>from</code>. This number will be selected from the
                list of nubmers assigned to the current application. <code>RandomFromNumber = true  </code> cannot be used together
                with <code>From</code>
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.RingingTimer">
            <summary>
                Optional. Set the number of seconds that elapse before Vonage hangs up after the call state changes to 'ringing'.
                The default value is 60, the maximum value is 120.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.To">
            <summary>
                The single or mixed collection of endpoint types you connected to. Possible values.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommandResponse.Message">
            <summary>
            A string explaining the state of this request.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommandResponse.Uuid">
            <summary>
            The unique id for this request.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEditCommand.Action">
            <summary>
            Use one of the following options to modify the call:
            hangup    Terminates this call leg.
            mute      Mutes this call leg.
            unmute    Unmutes this call leg.
            earmuff   Prevents the recipient of this call leg from hearing other parts of the conversation.
            unearmuff Removes the earmuff effect from this call leg.
            transfer  Transfers this call leg to another NCCO, as specified by the destination parameter.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEditCommand.Destination">
            <summary>
            Optional. A JSON object pointing to a replacement NCCO, when action is transfer.
            </summary>        
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.ContentType">
            <summary>
            The internet media type for the audio you are streaming.Possible values are: audio/l16; rate=16000
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.DtmfAnswer">
            <summary>
            Set the digits that are sent to the user as soon as the Call is answered. The * and # digits are respected. You create pauses using p. Each pause is 500ms.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.Headers">
            <summary>
            A JSON object containing any metadata you want.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.Number">
            <summary>
            The phone number to connect to in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.Type">
            <summary>
            One of the following: phone, websocket, sip
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.Uri">
            <summary>
            The URI to the websocket you are streaming to.
            OR
            The SIP URI to the endpoint you are connecting to in the format sip:rebekka@sip.example.com.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.ConversationUuid">
            <summary>
            A unique identifier for the Conversation this Call is part of.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Direction">
            <summary>
            Possible values are outbound or inbound.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Duration">
            <summary>
            The time elapsed for the Call to take place in seconds.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.EndTime">
            <summary>
            The time the Call ended
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.From">
            <summary>
            The endpoint you called from. Possible values are the same as to 
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Network">
            <summary>
            The Mobile Country Code Mobile Network Code (MCCMNC) for the carrier network used to make this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Price">
            <summary>
            The total price charged for this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Rate">
            <summary>
            The price per minute for this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.RecordingUrl">
            <summary>
            The URL to download a call or conversation recording from.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.StartTime">
            <summary>
            The time the Call started
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Status">
            <summary>
            The status of the Call. Possible values are:
             started - Platform has stared the Call.
             ringing - the user's handset is ringing.
             answered - the user has answered your Call.
             timeout - your user did not answer your Call with ringing_timer.
             machine - Platform detected an answering machine.
             completed - Platform has terminated this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.To">
            <summary>
            The single or mixed collection of endpoint types you connected to.Possible value are:
             phone - phone numbers in e.164 format.Options are:
               number - the phone number to connect to in E.164 format.
               dtmfAnswer - Set the digits that are sent to the user as soon as the Call is answered.The* and # digits are respected. You create pauses using p. Each pause is 500ms.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Uuid">
            <summary>
             A unique identifier for this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallResponse.ConversationUuid">
            <summary>
            A unique identifier for the Conversation this Call is part of.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallResponse.Direction">
            <summary>
            Possible values are outbound or inbound.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallResponse.Status">
            <summary>
            The status of the Call. Possible values are:
             started - Platform has stared the Call.
             ringing - the user's handset is ringing.
             answered - the user has answered your Call.
             timeout - your user did not answer your Call with ringing_timer.
             machine - Platform detected an answering machine.
             completed - Platform has terminated this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallResponse.Uuid">
            <summary>
             A unique identifier for this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.Status">
            <summary>
            Filter on the status of this Call.Possible values are:
             started - Platform has stared the call.
             ringing - the user's handset is ringing.
             answered - the user has answered your call.
             timeout - your user did not answer your call with ringing_timer.
             machine - Platform detected an answering machine.
             completed - Platform has terminated this call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.DateStart">
            <summary>
            Return the records that occurred after this point in time.
            Times must be in UTC, they will not be converted.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.DateEnd">
            <summary>
            Return the records that occurred before this point in time.
            Times must be in UTC, they will not be converted.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.PageSize">
            <summary>
            Return this amount of records in the response. The default value is 10.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.RecordIndex">
            <summary>
            Return page_size Calls from this index in the response. That is, if your request returns 300 Calls, set record_index to 5 in order to return Calls 50 to 59. The default value is 0. That is, the first page_size Calls.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.Order">
            <summary>
            Return the results in:
             asc - ascending order.This is the default value.
             desc - descending order.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.ConversationUuid">
            <summary>
             Return all the records associated with a specific Conversation.
            </summary>
        </member>
        <member name="P:Vonage.Voice.DtmfCommand.Digits">
            <summary>
            The array of digits to send to the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Answered.StartTime">
            <summary>
            call start time
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Answered.Rate">
            <summary>
            cost rate for the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Answered.Network">
            <summary>
            Network the call came from
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.ConversationUuid">
            <summary>
            The unique identifier for this conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.Detail">
            <summary>
            Extra detail for the status webhook - only present in some instances
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.Direction">
            <summary>
            Call direction, can be either inbound or outbound
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.From">
            <summary>
            The number the call came from
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.Status">
            <summary>
            Call status
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.To">
            <summary>
            The number the call was made to
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.Duration">
            <summary>
            Call length (in seconds)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.EndTime">
            <summary>
            Timestamp (ISO 8601 format) of the end time of the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.Network">
            <summary>
            The type of network that was used in the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.Price">
            <summary>
            Total cost of the call (EUR)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.Rate">
            <summary>
            Cost per minute of the call (EUR)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.StartTime">
            <summary>
            Timestamp (ISO 8601 format)
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.no_detail">
            <summary>
            no detail provided
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.unmapped_detail">
            <summary>
            detail provided but not mapped to an enum
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.invalid_number">
            <summary>
            number invalid
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.restricted">
            <summary>
            Rejected by carrier
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.declined">
            <summary>
            rejected by callee
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.cannot_route">
            <summary>
            cannot route to the number
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.number_out_of_service">
            <summary>
            Number is not available anymore.
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.internal_error">
            <summary>
            Server error or failure
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.carrier_timeout">
            <summary>
            Carrier timed out
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.unavailable">
            <summary>
            Callee is temorarily unavailable.
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.DtmfResult.Digits">
            <summary>
            the dtmf digits input by the user
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.DtmfResult.TimedOut">
            <summary>
            indicates whether the dtmf input timed out
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Error.Reason">
            <summary>
            Information about the nature of the error
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Error.ConversationUuid">
            <summary>
            The unique identifier for this conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Event.Uuid">
            <summary>
            The unique identifier for this call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.EventBase.TimeStamp">
            <summary>
            Timestamp (ISO 8601 format)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.HumanMachine.Uuid">
            <summary>
            The unique identifier for this call (Note call_uuid, not uuid as in some other endpoints)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Input.Dtmf">
            <summary>
            The buttons pressed by the user
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Input.TimedOut">
            <summary>
            Whether the input action timed out: true if it did, false if not
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Input.ConversationUuid">
            <summary>
            The unique identifier for this conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Input.From">
            <summary>
            The number the call came from
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Input.To">
            <summary>
            The number the call was made to
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.MultiInput.Dtmf">
            <summary>
            Result of Dtmf input
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.MultiInput.Speech">
            <summary>
            Result of the speech recognition
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Notification`1.ConversationUuid">
            <summary>
            A unique identifier for this conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Notification`1.Payload">
            <summary>
            Custom payload of for the notification action
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.StartTime">
            <summary>
            Timestamp (ISO 8601 format) of the start time of the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.RecordingUrl">
            <summary>
            Where to download the recording from
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.Size">
            <summary>
            The size of the recording file (in bytes)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.Uuid">
            <summary>
            A unique identifier for this recording
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.EndTime">
            <summary>
            Timestamp (ISO 8601 format) of the end time of the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.ConversationUuid">
            <summary>
            The unique identifier for this conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.SpeechRecognitionResult.Text">
            <summary>
            Transcript text representing the words that the user spoke.
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.SpeechRecognitionResult.Confidence">
            <summary>
            The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct.
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.SpeechResult.Error">
            <summary>
            Error field in case there was a problem during speech recognition - will not be present if nothing went wrong.
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.SpeechResult.SpeechResults">
            <summary>
            Array of SpeechRecognitionResults
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.SpeechResult.TimeoutReason">
            <summary>
            Indicates if the input ended when user stopped speaking (end_on_silence_timeout), by max duration timeout (max_duration) or if the user didn't say anything (start_timeout)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Transfer.ConversationUuidFrom">
            <summary>
            The conversation ID that the leg was originally in
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Transfer.ConversationUuidTo">
            <summary>
            The conversation ID that the leg was transferred to
            </summary>
        </member>
        <member name="P:Vonage.Voice.GetRecordingResponse.ResultStream">
            <summary>
            Stream of bytes containg the recording file's content
            </summary>
        </member>
        <member name="P:Vonage.Voice.GetRecordingResponse.Status">
            <summary>
            Response Status of the HTTP Request
            </summary>
        </member>
        <member name="T:Vonage.Voice.IVoiceClient">
            <summary>
                Represents a client to expose Voice capabilities.
            </summary>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.CreateCall(Vonage.Voice.CallCommand,Vonage.Request.Credentials)">
            <summary>
            POST /v1/calls - create an outbound SIP or PSTN Call
            </summary>
            <param name="command"></param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <returns></returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.CreateCall(System.String,System.String,Vonage.Voice.Nccos.Ncco)">
            <summary>
            POST /v1/calls - create an outbound PSTN Call
            </summary>
            <param name="toNumber"></param>
            <param name="fromNumber"></param>
            <param name="ncco"></param>
            <returns></returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.CreateCall(Vonage.Voice.Nccos.Endpoints.Endpoint,System.String,Vonage.Voice.Nccos.Ncco)">
            <summary>
             POST /v1/calls - create an outbound without PSTN Call
            </summary>
            <param name="toEndPoint"></param>
            <param name="fromNumber"></param>
            <param name="ncco"></param>
            <returns></returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.CreateCallAsync(Vonage.Voice.CallCommand,Vonage.Request.Credentials)">
            <summary>
            POST /v1/calls - create an outbound SIP or PSTN Call
            </summary>
            <param name="command"></param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <returns></returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.CreateCallAsync(System.String,System.String,Vonage.Voice.Nccos.Ncco)">
            <summary>
            POST /v1/calls - create an outbound PSTN Call
            </summary>
            <param name="toNumber"></param>
            <param name="fromNumber"></param>
            <param name="ncco"></param>
            <returns></returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.CreateCallAsync(Vonage.Voice.Nccos.Endpoints.Endpoint,System.String,Vonage.Voice.Nccos.Ncco)">
            <summary>
             POST /v1/calls - create an outbound without PSTN Call
            </summary>
            <param name="toEndPoint"></param>
            <param name="fromNumber"></param>
            <param name="ncco"></param>
            <returns></returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.GetCall(System.String,Vonage.Request.Credentials)">
            <summary>
            GET /v1/calls/{uuid} - retrieve information about a single Call
            </summary>
            <param name="id">id of call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.GetCallAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            GET /v1/calls/{uuid} - retrieve information about a single Call
            </summary>
            <param name="id">id of call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.GetCalls(Vonage.Voice.CallSearchFilter,Vonage.Request.Credentials)">
            <summary>
            GET /v1/calls - retrieve information about all your Calls
            <param name="filter">Filter to search calls on</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            </summary>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.GetCallsAsync(Vonage.Voice.CallSearchFilter,Vonage.Request.Credentials)">
            <summary>
            GET /v1/calls - retrieve information about all your Calls
            <param name="filter">Filter to search calls on</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            </summary>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.GetRecording(System.String,Vonage.Request.Credentials)">
            <summary>
            GET - retrieves the recording from a call based off of the input url
            </summary>
            <param name="recordingUrl">Url where the recorded call lives</param>
            <param name="creds">Overridden credentials</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
            <returns>A response containing a byte array representing the file stream</returns>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.GetRecordingAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            GET - retrieves the recording from a call based off of the input url
            </summary>
            <param name="recordingUrl">Url where the recorded call lives</param>
            <param name="creds">Overridden credentials</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
            <returns>A response containing a byte array representing the file stream</returns>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StartDtmf(System.String,Vonage.Voice.DtmfCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid}/dtmf - send Dual-tone multi-frequency(DTMF) tones to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StartDtmfAsync(System.String,Vonage.Voice.DtmfCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid}/dtmf - send Dual-tone multi-frequency(DTMF) tones to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StartStream(System.String,Vonage.Voice.StreamCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid}/stream - stream an audio file to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StartStreamAsync(System.String,Vonage.Voice.StreamCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid}/stream - stream an audio file to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StartTalk(System.String,Vonage.Voice.TalkCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid}/talk - send a synthesized speech message to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StartTalkAsync(System.String,Vonage.Voice.TalkCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid}/talk - send a synthesized speech message to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StopStream(System.String,Vonage.Request.Credentials)">
            <summary>
            DELETE /v1/calls/{uuid}/stream - stop streaming an audio file to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StopStreamAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            DELETE /v1/calls/{uuid}/stream - stop streaming an audio file to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StopTalk(System.String,Vonage.Request.Credentials)">
            <summary>
            DELETE /v1/calls/{uuid}/talk - stop sending a synthesized speech message to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StopTalkAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            DELETE /v1/calls/{uuid}/talk - stop sending a synthesized speech message to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.UpdateCall(System.String,Vonage.Voice.CallEditCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid} - modify an existing Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.UpdateCallAsync(System.String,Vonage.Voice.CallEditCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid} - modify an existing Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.AdvancedMachineDetection">
            <summary>
                Configure the behavior of Vonage's advanced machine detection. Overrides machineDetection if both are set.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.Endpoint">
            <summary>
                Connect to a single endpoint.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.EventMethod">
            <summary>
                The HTTP method Vonage uses to make the request to eventUrl. The default value is POST.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.EventType">
            <summary>
                Set to synchronous to:
                make the connect action synchronous
                enable eventUrl to return an NCCO that overrides the current NCCO when a call moves to specific states.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.EventUrl">
            <summary>
                Set the webhook endpoint that Vonage calls asynchronously on each of the possible Call States.
                If eventType is set to synchronous the eventUrl can return an NCCO that overrides the current
                NCCO when a timeout occurs.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.From">
            <summary>
                A number in E.164 format that identifies the caller.
                This must be one of your Vonage virtual numbers,
                another value will result in the caller ID being unknown.
                If the caller is an app user, this option should be omitted.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.Limit">
            <summary>
                Maximum length of the call in seconds. The default and maximum value is 7200 seconds (2 hours).
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.MachineDetection">
            <summary>
                Configure the behavior when Vonage detects that a destination is an answerphone. Set to either:
                continue - Vonage sends an HTTP request to event_url with the Call event machine
                hangup - end the Call
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.RingbackTone">
            <summary>
                A URL value that points to a ringbackTone to be played back on repeat to the caller,
                so they don't hear silence. The ringbackTone will automatically stop playing when the call is
                fully connected. It's not recommended to use this parameter when connecting to a phone endpoint,
                as the carrier will supply their own ringbackTone.
                Example: "ringbackTone": "http://example.com/ringbackTone.wav".
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.Timeout">
            <summary>
                If the call is unanswered, set the number in seconds before Vonage stops ringing endpoint. The default value is 60.
            </summary>
        </member>
        <member name="T:Vonage.Voice.Nccos.ConversationAction">
            <summary>
                Represents a NCCO Conversation.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.Action">
            <summary>
            Returns the Conversation ActionType.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.CanHear">
            <summary>
                A list of leg UUIDs that this participant can hear.
                If not provided, the participant can hear everyone.
                If an empty list is provided, the participant will not hear any other participants
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.CanSpeak">
            <summary>
                A list of leg UUIDs that this participant can be heard by.
                If not provided, the participant can be heard by everyone.
                If an empty list is provided, the participant will not be heard by anyone
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.EndOnExit">
            <summary>
                Specifies whether a moderated conversation ends when the moderator hangs up.
                This is set to false by default, which means that the conversation only ends
                when the last remaining participant hangs up, regardless of whether the moderator
                is still on the call. Set endOnExit to true to terminate the conversation when the
                moderator hangs up.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.EventMethod">
            <summary>
                Method to use on the webhooks for the conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.EventUrl">
            <summary>
                Url to receive webhooks at for the conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.MusicOnHoldUrl">
            <summary>
                A URL to the mp3 file to stream to participants until the conversation starts.
                By default the conversation starts when the first person calls the virtual number
                associated with your Voice app. To stream this mp3 before the moderator joins the
                conversation, set startOnEnter to false for all users other than the moderator.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.Name">
            <summary>
                The name of the Conversation room. Names are namespaced to the application level.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.Record">
            <summary>
                Set to true to record this conversation. For standard conversations,
                recordings start when one or more attendees connects to the conversation.
                For moderated conversations, recordings start when the moderator joins.
                That is, when an NCCO is executed for the named conversation where startOnEnter is set
                to true. When the recording is terminated, the URL you download the recording
                from is sent to the event URL. By default audio is recorded in MP3 format.
                See the recording guide for more details
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.StartOnEnter">
            <summary>
                The default value of true ensures that the conversation starts when this caller
                joins conversation name. Set to false for attendees in a moderated conversation.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.AppEndpoint.User">
            <summary>
            	the username of the user to connect to. This username must have been added as a user
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.Endpoint.Type">
            <summary>
            the type of endpoint being connected
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.PhoneEndpoint.Number">
            <summary>
            The phone number to connect to in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.PhoneEndpoint.DtmfAnswer">
            <summary>
            Set the digits that are sent to the user as soon as the Call is answered. 
            The * and # digits are respected. You create pauses using p. Each pause is 500ms.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.PhoneEndpoint.OnAnswer">
            <summary>
            An object containing a required url key. 
            The URL serves an NCCO to execute in the number being connected to, 
            before that call is joined to your existing conversation. 
            Optionally, the ringbackTone key can be specified with a URL value that points to a 
            ringbackTone to be played back on repeat to the caller, so they do not hear just silence. 
            The ringbackTone will automatically stop playing when the call is fully connected. 
            Example: {"url":"https://example.com/answer", "ringbackTone":"http://example.com/ringbackTone.wav" }.
            Please note, the key ringback is still supported.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.SipEndpoint.Uri">
            <summary>
            the SIP URI to the endpoint you are connecting to in the format sip:rebekka@sip.example.com.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.SipEndpoint.Headers">
            <summary>
            key => value string pairs containing any metadata you need 
            e.g. { "location": "New York City", "occupation": "developer" }
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.VbcEndpoint.Extension">
            <summary>
            the VBC extension to connect the call to.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.WebsocketEndpoint.ContentType">
            <summary>
            the internet media type for the audio you are streaming. Possible values are: audio/l16;rate=16000 or audio/l16;rate=8000.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.WebsocketEndpoint.Headers">
            <summary>
            an object containing any metadata you want. See connecting to a websocket for example headers
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.WebsocketEndpoint.Uri">
            <summary>
            the URI to the websocket you are streaming to.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.MultiInputAction.EventUrl">
            <summary>
            Vonage sends the digits pressed by the callee to this URL 1) after timeOut pause in activity or when # is pressed for DTMF or 2) after user stops speaking or 30 seconds of speech for speech input.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.MultiInputAction.EventMethod">
            <summary>
            The HTTP method used to send event information to event_url The default value is POST.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.MultiInputAction.Dtmf">
            <summary>
            DTMF settings. Should be specified to enable DTMF input. If all the DTMF input settings will have default values, it should be specified as empty object
            NOTE: this is serialized as an empty object if not initalized by the user
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.MultiInputAction.Type">
            <summary>
            Acceptable input type. Can be set as [ "dtmf" ] for DTMF input only, [ "speech" ] for ASR only, or [ "dtmf", "speech" ] for both.
            Is required.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.MultiInputAction.Speech">
            <summary>
            Speech recognition settings. Should be specified to enable speech input.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.NotifyAction.Payload">
            <summary>
            The JSON object body to send to your event URL
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.NotifyAction.EventUrl">
            <summary>
            The URL to send events to. If you return an NCCO when you receive a notification, it will replace the current NCCO
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.NotifyAction.EventMethod">
            <summary>
            The HTTP method to use when sending payload to your eventUrl
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.Format">
            <summary>
            Record the Call in a specific format.
            The default value is mp3, or wav when recording more than 2 channels.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.Split">
            <summary>
            Record the sent and received audio in separate channels of a stereo 
            recording—set to conversation to enable this.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.Channels">
            <summary>
            The number of channels to record (maximum 32). 
            If the number of participants exceeds channels any additional participants 
            will be added to the last channel in file. split conversation must also be enabled
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.EndOnSilence">
            <summary>
            Stop recording after n seconds of silence. 
            Once the recording is stopped the recording data is sent to event_url. 
            The range of possible values is 3&lt;=endOnSilence&lt;=10.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.EndOnKey">
            <summary>
            Stop recording when a digit is pressed on the handset. Possible values are: *, # or any single digit e.g. 9
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.TimeOut">
            <summary>
            The maximum length of a recording in seconds. One the recording is stopped the recording 
            data is sent to event_url. The range of possible values 
            is between 3 seconds and 7200 seconds (2 hours)
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.BeepStart">
            <summary>
            Set to true to play a beep when a recording starts
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.EventUrl">
            <summary>
            The URL to the webhook endpoint that is called asynchronously when a recording is finished. 
            If the message recording is hosted by Vonage, this webhook contains the URL you need to download 
            the recording and other meta data.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.EventMethod">
            <summary>
            The HTTP method used to make the request to eventUrl. The default value is POST.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.Uuid">
            <summary>
            The unique ID of the Call leg for the user to capture the speech of.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.EndOnSilence">
            <summary>
            Controls how long the system will wait after user stops speaking to decide the input is completed. The default value is 2 (seconds). The range of possible values is between 1 second and 10 seconds.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.Language">
            <summary>
            Expected language of the user's speech. Format: BCP-47. Default: en-US see list of supported languages: https://developer.nexmo.com/voice/voice-api/guides/asr#language
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.Context">
            <summary>
            Array of hints (strings) to improve recognition quality if certain words are expected from the user.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.StartTimeout">
            <summary>
            Controls how long the system will wait for the user to start speaking. The range of possible values is between 1 second and 10 seconds.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.MaxDuration">
            <summary>
            Controls maximum speech duration (from the moment user starts speaking). The default value is 60 (seconds). The range of possible values is between 1 and 60 seconds.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.StreamAction.StreamUrl">
            <summary>
            An array containing a single URL to an mp3 or wav (16-bit) audio file 
            to stream to the Call or Conversation.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.StreamAction.Level">
            <summary>
            Set the audio level of the stream in the range -1 &gt;=level&lt;=1 with a precision of 0.1. The default value is 0.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.StreamAction.BargeIn">
            <summary>
            Set to true so this action is terminated when the user presses a button on the keypad. 
            Use this feature to enable users to choose an option without having to listen to the whole message 
            in your Interactive Voice Response (IVR ). If you set bargeIn to true on one more Stream actions then 
            the next non-stream action in the NCCO stack must be an input action. The default value is false.
            Once bargeIn is set to true it will stay true (even if bargeIn: false is set in a following action) 
            until an input action is encountered
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.StreamAction.Loop">
            <summary>
            The number of times audio is repeated before the Call is closed. The default value is 1. Set to 0 to loop infinitely.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.Text">
            <summary>
            A string of up to 1,500 characters (excluding SSML tags) containing the message to be 
            synthesized in the Call or Conversation. A single comma in text adds a short pause to the 
            synthesized speech. To add a longer pause a break tag needs to be used in SSML. 
            To use SSML tags, you must enclose the text in a speak element.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.BargeIn">
            <summary>
            Set to true so this action is terminated when the user presses a button on the keypad. 
            Use this feature to enable users to choose an option without having to listen to the whole message 
            in your Interactive Voice Response (IVR ). If you set bargeIn to true on one more Stream actions then 
            the next non-stream action in the NCCO stack must be an input action. The default value is false.
            Once bargeIn is set to true it will stay true (even if bargeIn: false is set in a following action) 
            until an input action is encountered
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.Loop">
            <summary>
            The number of times text is repeated before the Call is closed. The default value is 1. Set to 0 to loop infinitely.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.Level">
            <summary>
            The volume level that the speech is played. This can be any value between -1 to 1 with 0 being the default.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.VoiceName">
            <summary>
            The name of the voice used to deliver text. You use the voiceName that has the correct language, 
            gender and accent for the message you are sending. 
            For example, the default voice kimberly is a female who speaks English with an 
            American accent (en-US). Possible values are listed in the Text-To-Speech guide.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.Language">
            <summary>
            The language (<see href="https://tools.ietf.org/html/bcp47">BCP-47</see>format) for the message you are sending. Default: en-US. Possible values are listed in the <see href="https://developer.nexmo.com/voice/voice-api/guides/text-to-speech#supported-languages">Text-To-Speech guide</see>.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.Style">
            <summary>
            The vocal style (vocal range, tessitura and timbre). Default: 0. Possible values are listed in the <see href="https://developer.nexmo.com/voice/voice-api/guides/text-to-speech#supported-languages">Text-To-Speech guide</see>.
            </summary>
        </member>
        <member name="P:Vonage.Voice.StreamCommand.StreamUrl">
            <summary>
            An array of URLs pointing to the .mp3 or .wav audio file to stream.
            </summary>
        </member>
        <member name="P:Vonage.Voice.StreamCommand.Loop">
            <summary>
            Set to 0 to replay the audio file at stream_url when the stream ends.
            </summary>
        </member>
        <member name="P:Vonage.Voice.StreamCommand.Level">
            <summary>
            Set the audio level of the stream in the range -1 &gt;= level &lt;= 1 with a precision of 0.1. The default value is 0.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Text">
            <summary>
            A UTF-8 and URL encoded string of up to 1500 characters containing
            the message to be synthesized in the Call or Conversation. Each
            comma in text adds a short pause to the synthesized speech.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.VoiceName">
            <summary>
            The name of the voice used to deliver text. You use the voice_name
            that has the correct language, gender and accent for the message
            you are sending. For example, the default voice kimberley is a
            female who speaks English with an American accent (en-US).
            Possible values for voice_name are listed at https://docs.nexmo.com/voice/voice-api/api-reference#talk_put
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Loop">
            <summary>
            Set to 0 to replay the audio file at stream_url when the stream ends. The default value is 1.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Level">
            <summary>
            The volume level that the speech is played. This can be any value between -1 to 1 in 0.1 increments, with 0 being the default.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Language">
            <summary>
            The language (<see href="https://tools.ietf.org/html/bcp47">BCP-47</see>format) for the message you are sending. Default: en-US. Possible values are listed in the <see href="https://developer.nexmo.com/voice/voice-api/guides/text-to-speech#supported-languages">Text-To-Speech guide</see>.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Style">
            <summary>
            The vocal style (vocal range, tessitura and timbre). Default: 0. Possible values are listed in the <see href="https://developer.nexmo.com/voice/voice-api/guides/text-to-speech#supported-languages">Text-To-Speech guide</see>.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Premium">
            <summary>
            Set to `true` to use the premium version of the specified style if available, otherwise the standard version will be used. You can find more information about Premium Voices in the [Text-To-Speech guide](https://developer.vonage.com/en/voice/voice-api/guides/text-to-speech#premium-voices).
            </summary>
        </member>
        <member name="T:Vonage.Voice.VoiceClient">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.#ctor(Vonage.Request.Credentials)">
            <summary>
                Initializes a VoiceClient.
            </summary>
            <param name="credentials">Credentials to use for api calls.</param>
        </member>
        <member name="M:Vonage.Voice.VoiceClient.CreateCall(Vonage.Voice.CallCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.CreateCall(System.String,System.String,Vonage.Voice.Nccos.Ncco)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.CreateCall(Vonage.Voice.Nccos.Endpoints.Endpoint,System.String,Vonage.Voice.Nccos.Ncco)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.CreateCallAsync(Vonage.Voice.CallCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.CreateCallAsync(System.String,System.String,Vonage.Voice.Nccos.Ncco)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.CreateCallAsync(Vonage.Voice.Nccos.Endpoints.Endpoint,System.String,Vonage.Voice.Nccos.Ncco)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.GetCall(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.GetCallAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.GetCalls(Vonage.Voice.CallSearchFilter,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.GetCallsAsync(Vonage.Voice.CallSearchFilter,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.GetRecording(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.GetRecordingAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StartDtmf(System.String,Vonage.Voice.DtmfCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StartDtmfAsync(System.String,Vonage.Voice.DtmfCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StartStream(System.String,Vonage.Voice.StreamCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StartStreamAsync(System.String,Vonage.Voice.StreamCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StartTalk(System.String,Vonage.Voice.TalkCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StartTalkAsync(System.String,Vonage.Voice.TalkCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StopStream(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StopStreamAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StopTalk(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StopTalkAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.UpdateCall(System.String,Vonage.Voice.CallEditCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.UpdateCallAsync(System.String,Vonage.Voice.CallEditCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VonageClient">
            <summary>
                Represents a client to use all features from Vonage's APIs.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.Credentials">
            <summary>
                Gets or sets credentials for this client.
            </summary>
            <remarks>Setting the value from this property will initialize all clients instances.</remarks>
            <exception cref="T:System.ArgumentNullException">When the value is null.</exception>
        </member>
        <member name="P:Vonage.VonageClient.MeetingsClient">
            <summary>
                Exposes Meetings features.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.ProactiveConnectClient">
            <summary>
                Exposes ProactiveConnect features.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.SubAccountsClient">
            <summary>
                Exposes SubAccounts features.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.UsersClient">
            <summary>
                Exposes User management features.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.VerifyV2Client">
            <summary>
                Exposes VerifyV2 features.
            </summary>
        </member>
        <member name="M:Vonage.VonageClient.#ctor(Vonage.Request.Credentials)">
            <summary>
                Constructor for VonageClient.
            </summary>
            <param name="credentials">Credentials to be used for further HTTP calls.</param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>
            Specifies that null is allowed as an input even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>
            Specifies that null is disallowed as an input even if the corresponding type allows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>
            Applied to a method that will never return under any circumstance.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
            Specifies that the method will not return if the associated Boolean parameter is passed the specified value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified parameter value.
            </summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable
            by diagnostics if the argument to the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>
            Gets the condition parameter value.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>
            Specifies that an output may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter may be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property members have not-null values.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with a field or property member.
            </summary>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>
            Initializes the attribute with the list of field and property members.
            </summary>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property
            members have not-null values when returning with the specified return value condition.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes the attribute with the specified return value condition and a field or property member.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
            Initializes the attribute with the specified return value condition and list of field and property members.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>
            Specifies that an output will not be null even if the corresponding type allows it.
            Specifies that an input argument was not null when the call returns.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>
            Specifies that the output will be non-null if the named parameter is non-null.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with the associated parameter name.
            </summary>
            <param name="parameterName">The associated parameter name. The output will be non-null if the argument to the parameter specified is non-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>
            Gets the associated parameter name.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute">
            <summary>
            Specifies that this constructor sets all required members for the current type,
            and callers do not need to set any required members themselves.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute">
            <summary>
            Specifies the syntax used in a string.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String)">
            <summary>
            Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.
            </summary>
            <param name="syntax">The syntax identifier.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String,System.Object[])">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
            <param name="arguments">Optional arguments associated with the specific syntax employed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Syntax">
            <summary>Gets the identifier of the syntax used.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Arguments">
            <summary>Optional arguments associated with the specific syntax employed.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.CompositeFormat">
            <summary>The syntax identifier for strings containing composite formats for string formatting.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateOnlyFormat">
            <summary>The syntax identifier for strings containing date format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateTimeFormat">
            <summary>The syntax identifier for strings containing date and time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.EnumFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Enum"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.GuidFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Guid"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Json">
            <summary>The syntax identifier for strings containing JavaScript Object Notation (JSON).</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.NumericFormat">
            <summary>The syntax identifier for strings containing numeric format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Regex">
            <summary>The syntax identifier for strings containing regular expressions.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeOnlyFormat">
            <summary>The syntax identifier for strings containing time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeSpanFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.TimeSpan"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Uri">
            <summary>The syntax identifier for strings containing URIs.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Xml">
            <summary>The syntax identifier for strings containing XML.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnscopedRefAttribute">
            <summary>
            Used to indicate a byref escapes and is not scoped.
            </summary>
            <remarks>
            <para>
            There are several cases where the C# compiler treats a <see langword="ref"/> as implicitly
            <see langword="scoped"/> - where the compiler does not allow the <see langword="ref"/> to escape the method.
            </para>
            <para>
            For example:
            <list type="number">
                <item><see langword="this"/> for <see langword="struct"/> instance methods.</item>
                <item><see langword="ref"/> parameters that refer to <see langword="ref"/> <see langword="struct"/> types.</item>
                <item><see langword="out"/> parameters.</item>
            </list>
            </para>
            <para>
            This attribute is used in those instances where the <see langword="ref"/> should be allowed to escape.
            </para>
            <para>
            Applying this attribute, in any form, has impact on consumers of the applicable API. It is necessary for
            API authors to understand the lifetime implications of applying this attribute and how it may impact their users.
            </para>
            </remarks>
        </member>
        <member name="T:System.Index">
            <summary>Represent a type can be used to index a collection either from the start or the end.</summary>
            <remarks>
            Index is used by the C# compiler to support the new index syntax
            <code>
            int[] someArray = new int[5] { 1, 2, 3, 4, 5 } ;
            int lastElement = someArray[^1]; // lastElement = 5
            </code>
            </remarks>
        </member>
        <member name="M:System.Index.#ctor(System.Int32,System.Boolean)">
            <summary>Construct an Index using a value and indicating if the index is from the start or from the end.</summary>
            <param name="value">The index value. it has to be zero or positive number.</param>
            <param name="fromEnd">Indicating if the index is from the start or from the end.</param>
            <remarks>
            If the Index constructed from the end, index value 1 means pointing at the last element and index value 0 means pointing at beyond last element.
            </remarks>
        </member>
        <member name="P:System.Index.Start">
            <summary>Create an Index pointing at first element.</summary>
        </member>
        <member name="P:System.Index.End">
            <summary>Create an Index pointing at beyond last element.</summary>
        </member>
        <member name="M:System.Index.FromStart(System.Int32)">
            <summary>Create an Index from the start at the position indicated by the value.</summary>
            <param name="value">The index value from the start.</param>
        </member>
        <member name="M:System.Index.FromEnd(System.Int32)">
            <summary>Create an Index from the end at the position indicated by the value.</summary>
            <param name="value">The index value from the end.</param>
        </member>
        <member name="P:System.Index.Value">
            <summary>Returns the index value.</summary>
        </member>
        <member name="P:System.Index.IsFromEnd">
            <summary>Indicates whether the index is from the start or the end.</summary>
        </member>
        <member name="M:System.Index.GetOffset(System.Int32)">
            <summary>Calculate the offset from the start using the giving collection length.</summary>
            <param name="length">The length of the collection that the Index will be used with. length has to be a positive value</param>
            <remarks>
            For performance reason, we don't validate the input length parameter and the returned offset value against negative values.
            we don't validate either the returned offset is greater than the input length.
            It is expected Index will be used with collections which always have non negative length/count. If the returned offset is negative and
            then used to index a collection will get out of range exception which will be same affect as the validation.
            </remarks>
        </member>
        <member name="M:System.Index.Equals(System.Object)">
            <summary>Indicates whether the current Index object is equal to another object of the same type.</summary>
            <param name="value">An object to compare with this object</param>
        </member>
        <member name="M:System.Index.Equals(System.Index)">
            <summary>Indicates whether the current Index object is equal to another Index object.</summary>
            <param name="other">An object to compare with this object</param>
        </member>
        <member name="M:System.Index.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
        </member>
        <member name="M:System.Index.op_Implicit(System.Int32)~System.Index">
            <summary>Converts integer number to an Index.</summary>
        </member>
        <member name="M:System.Index.ToString">
            <summary>Converts the value of the current Index object to its equivalent string representation.</summary>
        </member>
        <member name="T:System.Range">
            <summary>Represent a range has start and end indexes.</summary>
            <remarks>
            Range is used by the C# compiler to support the range syntax.
            <code>
            int[] someArray = new int[5] { 1, 2, 3, 4, 5 };
            int[] subArray1 = someArray[0..2]; // { 1, 2 }
            int[] subArray2 = someArray[1..^0]; // { 2, 3, 4, 5 }
            </code>
            </remarks>
        </member>
        <member name="P:System.Range.Start">
            <summary>Represent the inclusive start index of the Range.</summary>
        </member>
        <member name="P:System.Range.End">
            <summary>Represent the exclusive end index of the Range.</summary>
        </member>
        <member name="M:System.Range.#ctor(System.Index,System.Index)">
            <summary>Construct a Range object using the start and end indexes.</summary>
            <param name="start">Represent the inclusive start index of the range.</param>
            <param name="end">Represent the exclusive end index of the range.</param>
        </member>
        <member name="M:System.Range.Equals(System.Object)">
            <summary>Indicates whether the current Range object is equal to another object of the same type.</summary>
            <param name="value">An object to compare with this object</param>
        </member>
        <member name="M:System.Range.Equals(System.Range)">
            <summary>Indicates whether the current Range object is equal to another Range object.</summary>
            <param name="other">An object to compare with this object</param>
        </member>
        <member name="M:System.Range.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
        </member>
        <member name="M:System.Range.ToString">
            <summary>Converts the value of the current Range object to its equivalent string representation.</summary>
        </member>
        <member name="M:System.Range.StartAt(System.Index)">
            <summary>Create a Range object starting from start index to the end of the collection.</summary>
        </member>
        <member name="M:System.Range.EndAt(System.Index)">
            <summary>Create a Range object starting from first element in the collection to the end Index.</summary>
        </member>
        <member name="P:System.Range.All">
            <summary>Create a Range object starting from first element to the end.</summary>
        </member>
        <member name="M:System.Range.GetOffsetAndLength(System.Int32)">
            <summary>Calculate the start offset and length of range object using a collection length.</summary>
            <param name="length">The length of the collection that the range will be used with. length has to be a positive value.</param>
            <remarks>
            For performance reason, we don't validate the input length parameter against negative values.
            It is expected Range will be used with collections which always have non negative length/count.
            We validate the range is inside the length scope though.
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute">
            <summary>
            An attribute that allows parameters to receive the expression of other parameters.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute"/> class.
            </summary>
            <param name="parameterName">The condition parameter value.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.ParameterName">
            <summary>
            Gets the parameter name the expression is retrieved from.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute">
            <summary>
            Indicates that compiler support for a particular feature is required for the location where this attribute is applied.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute"/> type.
            </summary>
            <param name="featureName">The name of the feature to indicate.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName">
            <summary>
            The name of the compiler feature.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.IsOptional">
            <summary>
            If true, the compiler can choose to allow access to the location where this attribute is applied if it does not understand <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/>.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RefStructs">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the ref structs C# feature.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RequiredMembers">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the required members C# feature.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute">
            <summary>
            Indicates which arguments to a method involving an interpolated string handler should be passed to that handler.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="argument">The name of the argument that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="arguments">The names of the arguments that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.Arguments">
            <summary>
            Gets the names of the arguments that should be passed to the handler.
            </summary>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute">
            <summary>
            Indicates the attributed type is to be used as an interpolated string handler.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
            Reserved to be used by the compiler for tracking metadata.
            This class should not be used by developers in source code.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ModuleInitializerAttribute">
             <summary>
             Used to indicate to the compiler that a method should be called
             in its containing module's initializer.
             </summary>
             <remarks>
             When one or more valid methods
             with this attribute are found in a compilation, the compiler will
             emit a module initializer which calls each of the attributed methods.
            
             Certain requirements are imposed on any method targeted with this attribute:
             - The method must be `static`.
             - The method must be an ordinary member method, as opposed to a property accessor, constructor, local function, etc.
             - The method must be parameterless.
             - The method must return `void`.
             - The method must not be generic or be contained in a generic type.
             - The method's effective accessibility must be `internal` or `public`.
            
             The specification for module initializers in the .NET runtime can be found here:
             https://github.com/dotnet/runtime/blob/main/docs/design/specs/Ecma-335-Augments.md#module-initializer
             </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiredMemberAttribute">
            <summary>
            Specifies that a type has required members or that a member is required.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.SkipLocalsInitAttribute">
            <summary>
            Used to indicate to the compiler that the <c>.locals init</c> flag should not be set in method headers.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class with the specified message.
            </summary>
            <param name="message">An optional message associated with this attribute instance.</param>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Message">
            <summary>
            Returns the optional message associated with this attribute instance.
            </summary>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Url">
            <summary>
            Returns the optional URL associated with this attribute instance.
            </summary>
        </member>
    </members>
</doc>
